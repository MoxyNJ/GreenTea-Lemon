{
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "var assert = require('assert');\n\nvar add = require('../add.js');\n\ndescribe(\"add function testing\", function () {\n  it('1 + 2 shoule be 3', function () {\n    assert.equal(add(1, 2), 3);\n  });\n  it('-1 + -6 shoule be -7', function () {\n    assert.equal(add(-1, -6), -7);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImFkZCIsImRlc2NyaWJlIiwiaXQiLCJlcXVhbCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxJQUFJQyxHQUFHLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQWpCOztBQUVBRSxRQUFRLENBQUMsc0JBQUQsRUFBeUIsWUFBVTtBQUN2Q0MsRUFBQUEsRUFBRSxDQUFDLG1CQUFELEVBQXNCLFlBQVc7QUFDL0JKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhSCxHQUFHLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBaEIsRUFBdUIsQ0FBdkI7QUFDSCxHQUZDLENBQUY7QUFHQUUsRUFBQUEsRUFBRSxDQUFDLHNCQUFELEVBQXlCLFlBQVc7QUFDbENKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhSCxHQUFHLENBQUMsQ0FBQyxDQUFGLEVBQUksQ0FBQyxDQUFMLENBQWhCLEVBQXlCLENBQUMsQ0FBMUI7QUFDSCxHQUZDLENBQUY7QUFHSCxDQVBPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21veHluaW5qYS9HcmVlblRlYS1MZW1vbi93aW50ZXIgSnPor77nqIsvV2Vlay0xNy90ZXN0LWRlbW8vdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5cbnZhciBhZGQgPSByZXF1aXJlKCcuLi9hZGQuanMnKVxuXG5kZXNjcmliZShcImFkZCBmdW5jdGlvbiB0ZXN0aW5nXCIsIGZ1bmN0aW9uKCl7XG4gICAgaXQoJzEgKyAyIHNob3VsZSBiZSAzJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGFzc2VydC5lcXVhbChhZGQoMSwyKSwgMyk7XG4gICAgfSk7IFxuICAgIGl0KCctMSArIC02IHNob3VsZSBiZSAtNycsIGZ1bmN0aW9uKCkge1xuICAgICAgICBhc3NlcnQuZXF1YWwoYWRkKC0xLC02KSwgLTcpO1xuICAgIH0pOyBcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "assert",
        "require",
        "add",
        "describe",
        "it",
        "equal"
      ],
      "mappings": "AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAjB;;AAEAE,QAAQ,CAAC,sBAAD,EAAyB,YAAU;AACvCC,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAW;AAC/BJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,GAAG,CAAC,CAAD,EAAG,CAAH,CAAhB,EAAuB,CAAvB;AACH,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAW;AAClCJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,GAAG,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,CAAhB,EAAyB,CAAC,CAA1B;AACH,GAFC,CAAF;AAGH,CAPO,CAAR",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "sourcesContent": [
        "var assert = require('assert');\n\nvar add = require('../add.js')\n\ndescribe(\"add function testing\", function(){\n    it('1 + 2 shoule be 3', function() {\n        assert.equal(add(1,2), 3);\n    }); \n    it('-1 + -6 shoule be -7', function() {\n        assert.equal(add(-1,-6), -7);\n    }); \n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1608559111137
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
        "sourceFileName": "add.js"
      }
    },
    "ast": null,
    "code": "function add(a, b) {\n  return a + b;\n}\n\nmodule.exports = add;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC5qcyJdLCJuYW1lcyI6WyJhZGQiLCJhIiwiYiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLEdBQVQsQ0FBYUMsQ0FBYixFQUFnQkMsQ0FBaEIsRUFBbUI7QUFDZixTQUFPRCxDQUFDLEdBQUdDLENBQVg7QUFDSDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixHQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbW94eW5pbmphL0dyZWVuVGVhLUxlbW9uL3dpbnRlciBKc+ivvueoiy9XZWVrLTE3L3Rlc3QtZGVtby8iLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhZGQoYSwgYikge1xuICAgIHJldHVybiBhICsgYjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhZGQ7Il19",
    "map": {
      "version": 3,
      "sources": [
        "add.js"
      ],
      "names": [
        "add",
        "a",
        "b",
        "module",
        "exports"
      ],
      "mappings": "AAAA,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACf,SAAOD,CAAC,GAAGC,CAAX;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
      "sourcesContent": [
        "function add(a, b) {\n    return a + b;\n}\n\nmodule.exports = add;"
      ]
    },
    "sourceType": "module",
    "mtime": 1608558972086
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _add = require(\"../add.js\");\n\nvar assert = require('assert');\n\ndescribe(\"add function testing\", function () {\n  it('1 + 2 shoule be 3', function () {\n    assert.equal((0, _add.add)(1, 2), 3);\n  });\n  it('-1 + -6 shoule be -7', function () {\n    assert.equal((0, _add.add)(-1, -6), -7);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJlcXVhbCJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFGQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUlBQyxRQUFRLENBQUMsc0JBQUQsRUFBeUIsWUFBVTtBQUN2Q0MsRUFBQUEsRUFBRSxDQUFDLG1CQUFELEVBQXNCLFlBQVc7QUFDL0JILElBQUFBLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhLGNBQUksQ0FBSixFQUFNLENBQU4sQ0FBYixFQUF1QixDQUF2QjtBQUNILEdBRkMsQ0FBRjtBQUdBRCxFQUFBQSxFQUFFLENBQUMsc0JBQUQsRUFBeUIsWUFBVztBQUNsQ0gsSUFBQUEsTUFBTSxDQUFDSSxLQUFQLENBQWEsY0FBSSxDQUFDLENBQUwsRUFBTyxDQUFDLENBQVIsQ0FBYixFQUF5QixDQUFDLENBQTFCO0FBQ0gsR0FGQyxDQUFGO0FBR0gsQ0FQTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tb3h5bmluamEvR3JlZW5UZWEtTGVtb24vd2ludGVyIEpz6K++56iLL1dlZWstMTcvdGVzdC1kZW1vL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG5pbXBvcnQge2FkZH0gZnJvbSBcIi4uL2FkZC5qc1wiXG5cbmRlc2NyaWJlKFwiYWRkIGZ1bmN0aW9uIHRlc3RpbmdcIiwgZnVuY3Rpb24oKXtcbiAgICBpdCgnMSArIDIgc2hvdWxlIGJlIDMnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKGFkZCgxLDIpLCAzKTtcbiAgICB9KTsgXG4gICAgaXQoJy0xICsgLTYgc2hvdWxlIGJlIC03JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGFzc2VydC5lcXVhbChhZGQoLTEsLTYpLCAtNyk7XG4gICAgfSk7IFxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "assert",
        "require",
        "describe",
        "it",
        "equal"
      ],
      "mappings": ";;AAEA;;AAFA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAIAC,QAAQ,CAAC,sBAAD,EAAyB,YAAU;AACvCC,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAW;AAC/BH,IAAAA,MAAM,CAACI,KAAP,CAAa,cAAI,CAAJ,EAAM,CAAN,CAAb,EAAuB,CAAvB;AACH,GAFC,CAAF;AAGAD,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAW;AAClCH,IAAAA,MAAM,CAACI,KAAP,CAAa,cAAI,CAAC,CAAL,EAAO,CAAC,CAAR,CAAb,EAAyB,CAAC,CAA1B;AACH,GAFC,CAAF;AAGH,CAPO,CAAR",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "sourcesContent": [
        "var assert = require('assert');\n\nimport {add} from \"../add.js\"\n\ndescribe(\"add function testing\", function(){\n    it('1 + 2 shoule be 3', function() {\n        assert.equal(add(1,2), 3);\n    }); \n    it('-1 + -6 shoule be -7', function() {\n        assert.equal(add(-1,-6), -7);\n    }); \n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1608559861240
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
        "sourceFileName": "add.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\n\nfunction add(a, b) {\n  return a + b;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC5qcyJdLCJuYW1lcyI6WyJhZGQiLCJhIiwiYiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLFNBQVNBLEdBQVQsQ0FBYUMsQ0FBYixFQUFnQkMsQ0FBaEIsRUFBbUI7QUFDdEIsU0FBT0QsQ0FBQyxHQUFHQyxDQUFYO0FBQ0giLCJzb3VyY2VSb290IjoiL1VzZXJzL21veHluaW5qYS9HcmVlblRlYS1MZW1vbi93aW50ZXIgSnPor77nqIsvV2Vlay0xNy90ZXN0LWRlbW8vIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFkZChhLCBiKSB7XG4gICAgcmV0dXJuIGEgKyBiO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "add.js"
      ],
      "names": [
        "add",
        "a",
        "b"
      ],
      "mappings": ";;;;;;;AAAO,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACtB,SAAOD,CAAC,GAAGC,CAAX;AACH",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
      "sourcesContent": [
        "export function add(a, b) {\n    return a + b;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1608559820590
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "// var assert = require('assert');\n// import {add, mul} from \"../add.js\";\n// // var add = require('../add.js').add;\n// // var mul = require('../add.js').mul;\n// describe(\"add function testing\", function(){\n//     it('1 + 2 shoule be 3', function() {\n//         assert.equal(add(1,2), 3);\n//     }); \n//     it('-1 + -6 shoule be -7', function() {\n//         assert.equal(add(-1,-6), -7);\n//     }); \n//     it('-2 * -6 shoule be 12', function() {\n//         assert.equal(mul(-2,-6), 12);\n//     }); \n// })\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tb3h5bmluamEvR3JlZW5UZWEtTGVtb24vd2ludGVyIEpz6K++56iLL1dlZWstMTcvdGVzdC1kZW1vL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG4vLyBpbXBvcnQge2FkZCwgbXVsfSBmcm9tIFwiLi4vYWRkLmpzXCI7XG5cbi8vIC8vIHZhciBhZGQgPSByZXF1aXJlKCcuLi9hZGQuanMnKS5hZGQ7XG4vLyAvLyB2YXIgbXVsID0gcmVxdWlyZSgnLi4vYWRkLmpzJykubXVsO1xuXG4vLyBkZXNjcmliZShcImFkZCBmdW5jdGlvbiB0ZXN0aW5nXCIsIGZ1bmN0aW9uKCl7XG4vLyAgICAgaXQoJzEgKyAyIHNob3VsZSBiZSAzJywgZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGFzc2VydC5lcXVhbChhZGQoMSwyKSwgMyk7XG4vLyAgICAgfSk7IFxuXG4vLyAgICAgaXQoJy0xICsgLTYgc2hvdWxlIGJlIC03JywgZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGFzc2VydC5lcXVhbChhZGQoLTEsLTYpLCAtNyk7XG4vLyAgICAgfSk7IFxuXG4vLyAgICAgaXQoJy0yICogLTYgc2hvdWxlIGJlIDEyJywgZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGFzc2VydC5lcXVhbChtdWwoLTIsLTYpLCAxMik7XG4vLyAgICAgfSk7IFxuLy8gfSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [],
      "mappings": "AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "sourcesContent": [
        "// var assert = require('assert');\n\n// import {add, mul} from \"../add.js\";\n\n// // var add = require('../add.js').add;\n// // var mul = require('../add.js').mul;\n\n// describe(\"add function testing\", function(){\n//     it('1 + 2 shoule be 3', function() {\n//         assert.equal(add(1,2), 3);\n//     }); \n\n//     it('-1 + -6 shoule be -7', function() {\n//         assert.equal(add(-1,-6), -7);\n//     }); \n\n//     it('-2 * -6 shoule be 12', function() {\n//         assert.equal(mul(-2,-6), 12);\n//     }); \n// })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609129486654
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/add.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
        "sourceFileName": "add.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.mul = mul;\n\nfunction cov_2j799jtbj2() {\n  var path = \"/Users/moxyninja/GreenTea-Lemon/winter Js\\u8BFE\\u7A0B/Week-17/test-demo/add.js\";\n  var hash = \"0963901f1a3e78836afbb3aa1a615f78ae20de48\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/moxyninja/GreenTea-Lemon/winter Js\\u8BFE\\u7A0B/Week-17/test-demo/add.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 2,\n          column: 4\n        },\n        end: {\n          line: 2,\n          column: 17\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 4\n        },\n        end: {\n          line: 6,\n          column: 17\n        }\n      },\n      \"2\": {\n        start: {\n          line: 8,\n          column: 0\n        },\n        end: {\n          line: 8,\n          column: 25\n        }\n      },\n      \"3\": {\n        start: {\n          line: 9,\n          column: 0\n        },\n        end: {\n          line: 9,\n          column: 25\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"add\",\n        decl: {\n          start: {\n            line: 1,\n            column: 16\n          },\n          end: {\n            line: 1,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 1,\n            column: 25\n          },\n          end: {\n            line: 3,\n            column: 1\n          }\n        },\n        line: 1\n      },\n      \"1\": {\n        name: \"mul\",\n        decl: {\n          start: {\n            line: 5,\n            column: 16\n          },\n          end: {\n            line: 5,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 25\n          },\n          end: {\n            line: 7,\n            column: 1\n          }\n        },\n        line: 5\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"0963901f1a3e78836afbb3aa1a615f78ae20de48\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2j799jtbj2 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2j799jtbj2();\n\nfunction add(a, b) {\n  cov_2j799jtbj2().f[0]++;\n  cov_2j799jtbj2().s[0]++;\n  return a + b;\n}\n\nfunction mul(a, b) {\n  cov_2j799jtbj2().f[1]++;\n  cov_2j799jtbj2().s[1]++;\n  return a * b;\n}\n\ncov_2j799jtbj2().s[2]++;\nmodule.exports.add = add;\ncov_2j799jtbj2().s[3]++;\nmodule.exports.mul = mul;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC5qcyJdLCJuYW1lcyI6WyJhZGQiLCJhIiwiYiIsIm11bCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7OztBQWZMLFNBQVNBLEdBQVQsQ0FBYUMsQ0FBYixFQUFnQkMsQ0FBaEIsRUFBa0I7QUFBQTtBQUFBO0FBQ3JCLFNBQU9ELENBQUMsR0FBR0MsQ0FBWDtBQUNIOztBQUVNLFNBQVNDLEdBQVQsQ0FBYUYsQ0FBYixFQUFnQkMsQ0FBaEIsRUFBa0I7QUFBQTtBQUFBO0FBQ3JCLFNBQU9ELENBQUMsR0FBR0MsQ0FBWDtBQUNIOzs7QUFDREUsTUFBTSxDQUFDQyxPQUFQLENBQWVMLEdBQWYsR0FBcUJBLEdBQXJCOztBQUNBSSxNQUFNLENBQUNDLE9BQVAsQ0FBZUYsR0FBZixHQUFxQkEsR0FBckIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21veHluaW5qYS9HcmVlblRlYS1MZW1vbi93aW50ZXIgSnPor77nqIsvV2Vlay0xNy90ZXN0LWRlbW8vIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFkZChhLCBiKXtcbiAgICByZXR1cm4gYSArIGI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtdWwoYSwgYil7XG4gICAgcmV0dXJuIGEgKiBiO1xufVxubW9kdWxlLmV4cG9ydHMuYWRkID0gYWRkO1xubW9kdWxlLmV4cG9ydHMubXVsID0gbXVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "add.js"
      ],
      "names": [
        "add",
        "a",
        "b",
        "mul",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;;AAfL,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAkB;AAAA;AAAA;AACrB,SAAOD,CAAC,GAAGC,CAAX;AACH;;AAEM,SAASC,GAAT,CAAaF,CAAb,EAAgBC,CAAhB,EAAkB;AAAA;AAAA;AACrB,SAAOD,CAAC,GAAGC,CAAX;AACH;;;AACDE,MAAM,CAACC,OAAP,CAAeL,GAAf,GAAqBA,GAArB;;AACAI,MAAM,CAACC,OAAP,CAAeF,GAAf,GAAqBA,GAArB",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/",
      "sourcesContent": [
        "export function add(a, b){\n    return a + b;\n}\n\nexport function mul(a, b){\n    return a * b;\n}\nmodule.exports.add = add;\nmodule.exports.mul = mul;"
      ]
    },
    "sourceType": "script",
    "mtime": 1608644489744
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
        "sourceFileName": "parser-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _parser = require(\"../html-parser/src/parser.js\");\n\nvar assert = require('assert');\n\ndescribe(\"parse html: \", function () {\n  it('<a href=\"//123\"></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a href=\"//123\"></a>');\n    console.log(tree);\n    assert.equal(tree.children[0].tagName, \"a\");\n    assert.equal(tree.children[0].children.length, 0);\n  }); // 属性相关\n\n  it('<a></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a></a>');\n    console.log(tree);\n    assert.equal(tree.children[0].tagName, \"a\");\n    assert.equal(tree.children[0].children.length, 0);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlci10ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJkZXNjcmliZSIsIml0IiwidHJlZSIsImNvbnNvbGUiLCJsb2ciLCJlcXVhbCIsImNoaWxkcmVuIiwidGFnTmFtZSIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFGQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUtBQyxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFVO0FBQy9CQyxFQUFBQSxFQUFFLENBQUMsc0JBQUQsRUFBeUIsWUFBVztBQUNsQyxRQUFJQyxJQUFJLEdBQUcsdUJBQVUsc0JBQVYsQ0FBWDtBQUNBQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjtBQUNBSixJQUFBQSxNQUFNLENBQUNPLEtBQVAsQ0FBYUgsSUFBSSxDQUFDSSxRQUFMLENBQWMsQ0FBZCxFQUFpQkMsT0FBOUIsRUFBdUMsR0FBdkM7QUFDQVQsSUFBQUEsTUFBTSxDQUFDTyxLQUFQLENBQWFILElBQUksQ0FBQ0ksUUFBTCxDQUFjLENBQWQsRUFBaUJBLFFBQWpCLENBQTBCRSxNQUF2QyxFQUErQyxDQUEvQztBQUNILEdBTEMsQ0FBRixDQUQrQixDQU8vQjs7QUFDQVAsRUFBQUEsRUFBRSxDQUFDLFNBQUQsRUFBWSxZQUFXO0FBQ3JCLFFBQUlDLElBQUksR0FBRyx1QkFBVSxTQUFWLENBQVg7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVo7QUFDQUosSUFBQUEsTUFBTSxDQUFDTyxLQUFQLENBQWFILElBQUksQ0FBQ0ksUUFBTCxDQUFjLENBQWQsRUFBaUJDLE9BQTlCLEVBQXVDLEdBQXZDO0FBQ0FULElBQUFBLE1BQU0sQ0FBQ08sS0FBUCxDQUFhSCxJQUFJLENBQUNJLFFBQUwsQ0FBYyxDQUFkLEVBQWlCQSxRQUFqQixDQUEwQkUsTUFBdkMsRUFBK0MsQ0FBL0M7QUFDSCxHQUxDLENBQUY7QUFNSCxDQWRPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21veHluaW5qYS9HcmVlblRlYS1MZW1vbi93aW50ZXIgSnPor77nqIsvV2Vlay0xNy90ZXN0LWRlbW8vdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5cbmltcG9ydCB7cGFyc2VIVE1MfSBmcm9tIFwiLi4vaHRtbC1wYXJzZXIvc3JjL3BhcnNlci5qc1wiO1xuXG5cbmRlc2NyaWJlKFwicGFyc2UgaHRtbDogXCIsIGZ1bmN0aW9uKCl7XG4gICAgaXQoJzxhIGhyZWY9XCIvLzEyM1wiPjwvYT4nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IHRyZWUgPSBwYXJzZUhUTUwoJzxhIGhyZWY9XCIvLzEyM1wiPjwvYT4nKTtcbiAgICAgICAgY29uc29sZS5sb2codHJlZSk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuWzBdLnRhZ05hbWUsIFwiYVwiKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4ubGVuZ3RoLCAwKTtcbiAgICB9KTsgXG4gICAgLy8g5bGe5oCn55u45YWzXG4gICAgaXQoJzxhPjwvYT4nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IHRyZWUgPSBwYXJzZUhUTUwoJzxhPjwvYT4nKTtcbiAgICAgICAgY29uc29sZS5sb2codHJlZSk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuWzBdLnRhZ05hbWUsIFwiYVwiKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4ubGVuZ3RoLCAwKTtcbiAgICB9KTtcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "parser-test.js"
      ],
      "names": [
        "assert",
        "require",
        "describe",
        "it",
        "tree",
        "console",
        "log",
        "equal",
        "children",
        "tagName",
        "length"
      ],
      "mappings": ";;AAEA;;AAFA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAKAC,QAAQ,CAAC,cAAD,EAAiB,YAAU;AAC/BC,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAW;AAClC,QAAIC,IAAI,GAAG,uBAAU,sBAAV,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,IAAAA,MAAM,CAACO,KAAP,CAAaH,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBC,OAA9B,EAAuC,GAAvC;AACAT,IAAAA,MAAM,CAACO,KAAP,CAAaH,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0BE,MAAvC,EAA+C,CAA/C;AACH,GALC,CAAF,CAD+B,CAO/B;;AACAP,EAAAA,EAAE,CAAC,SAAD,EAAY,YAAW;AACrB,QAAIC,IAAI,GAAG,uBAAU,SAAV,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,IAAAA,MAAM,CAACO,KAAP,CAAaH,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBC,OAA9B,EAAuC,GAAvC;AACAT,IAAAA,MAAM,CAACO,KAAP,CAAaH,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0BE,MAAvC,EAA+C,CAA/C;AACH,GALC,CAAF;AAMH,CAdO,CAAR",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "sourcesContent": [
        "var assert = require('assert');\n\nimport {parseHTML} from \"../html-parser/src/parser.js\";\n\n\ndescribe(\"parse html: \", function(){\n    it('<a href=\"//123\"></a>', function() {\n        let tree = parseHTML('<a href=\"//123\"></a>');\n        console.log(tree);\n        assert.equal(tree.children[0].tagName, \"a\");\n        assert.equal(tree.children[0].children.length, 0);\n    }); \n    // 属性相关\n    it('<a></a>', function() {\n        let tree = parseHTML('<a></a>');\n        console.log(tree);\n        assert.equal(tree.children[0].tagName, \"a\");\n        assert.equal(tree.children[0].children.length, 0);\n    });\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1609131292134
  },
  "{\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/",
        "sourceFileName": "parser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseHTML = parseHTML;\n\nfunction cov_5xm3ognsj() {\n  var path = \"/Users/moxyninja/GreenTea-Lemon/winter Js\\u8BFE\\u7A0B/Week-17/test-demo/html-parser/src/parser.js\";\n  var hash = \"494c7397793e8de8b91bd072bb6def7d6fb068d4\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/moxyninja/GreenTea-Lemon/winter Js\\u8BFE\\u7A0B/Week-17/test-demo/html-parser/src/parser.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 1,\n          column: 12\n        },\n        end: {\n          line: 1,\n          column: 25\n        }\n      },\n      \"1\": {\n        start: {\n          line: 4,\n          column: 19\n        },\n        end: {\n          line: 4,\n          column: 23\n        }\n      },\n      \"2\": {\n        start: {\n          line: 5,\n          column: 23\n        },\n        end: {\n          line: 5,\n          column: 27\n        }\n      },\n      \"3\": {\n        start: {\n          line: 6,\n          column: 22\n        },\n        end: {\n          line: 6,\n          column: 26\n        }\n      },\n      \"4\": {\n        start: {\n          line: 9,\n          column: 14\n        },\n        end: {\n          line: 9,\n          column: 37\n        }\n      },\n      \"5\": {\n        start: {\n          line: 11,\n          column: 4\n        },\n        end: {\n          line: 51,\n          column: 5\n        }\n      },\n      \"6\": {\n        start: {\n          line: 12,\n          column: 22\n        },\n        end: {\n          line: 16,\n          column: 9\n        }\n      },\n      \"7\": {\n        start: {\n          line: 18,\n          column: 8\n        },\n        end: {\n          line: 18,\n          column: 39\n        }\n      },\n      \"8\": {\n        start: {\n          line: 20,\n          column: 8\n        },\n        end: {\n          line: 27,\n          column: 9\n        }\n      },\n      \"9\": {\n        start: {\n          line: 21,\n          column: 12\n        },\n        end: {\n          line: 26,\n          column: 13\n        }\n      },\n      \"10\": {\n        start: {\n          line: 22,\n          column: 16\n        },\n        end: {\n          line: 25,\n          column: 18\n        }\n      },\n      \"11\": {\n        start: {\n          line: 29,\n          column: 8\n        },\n        end: {\n          line: 29,\n          column: 34\n        }\n      },\n      \"12\": {\n        start: {\n          line: 32,\n          column: 8\n        },\n        end: {\n          line: 34,\n          column: 9\n        }\n      },\n      \"13\": {\n        start: {\n          line: 33,\n          column: 12\n        },\n        end: {\n          line: 33,\n          column: 31\n        }\n      },\n      \"14\": {\n        start: {\n          line: 36,\n          column: 8\n        },\n        end: {\n          line: 36,\n          column: 30\n        }\n      },\n      \"15\": {\n        start: {\n          line: 37,\n          column: 11\n        },\n        end: {\n          line: 51,\n          column: 5\n        }\n      },\n      \"16\": {\n        start: {\n          line: 38,\n          column: 8\n        },\n        end: {\n          line: 40,\n          column: 9\n        }\n      },\n      \"17\": {\n        start: {\n          line: 39,\n          column: 12\n        },\n        end: {\n          line: 39,\n          column: 59\n        }\n      },\n      \"18\": {\n        start: {\n          line: 41,\n          column: 8\n        },\n        end: {\n          line: 41,\n          column: 30\n        }\n      },\n      \"19\": {\n        start: {\n          line: 42,\n          column: 11\n        },\n        end: {\n          line: 51,\n          column: 5\n        }\n      },\n      \"20\": {\n        start: {\n          line: 43,\n          column: 8\n        },\n        end: {\n          line: 49,\n          column: 9\n        }\n      },\n      \"21\": {\n        start: {\n          line: 44,\n          column: 12\n        },\n        end: {\n          line: 47,\n          column: 13\n        }\n      },\n      \"22\": {\n        start: {\n          line: 48,\n          column: 12\n        },\n        end: {\n          line: 48,\n          column: 46\n        }\n      },\n      \"23\": {\n        start: {\n          line: 50,\n          column: 8\n        },\n        end: {\n          line: 50,\n          column: 48\n        }\n      },\n      \"24\": {\n        start: {\n          line: 55,\n          column: 4\n        },\n        end: {\n          line: 68,\n          column: 5\n        }\n      },\n      \"25\": {\n        start: {\n          line: 56,\n          column: 8\n        },\n        end: {\n          line: 56,\n          column: 23\n        }\n      },\n      \"26\": {\n        start: {\n          line: 57,\n          column: 11\n        },\n        end: {\n          line: 68,\n          column: 5\n        }\n      },\n      \"27\": {\n        start: {\n          line: 58,\n          column: 8\n        },\n        end: {\n          line: 60,\n          column: 11\n        }\n      },\n      \"28\": {\n        start: {\n          line: 61,\n          column: 8\n        },\n        end: {\n          line: 61,\n          column: 15\n        }\n      },\n      \"29\": {\n        start: {\n          line: 63,\n          column: 8\n        },\n        end: {\n          line: 66,\n          column: 11\n        }\n      },\n      \"30\": {\n        start: {\n          line: 67,\n          column: 8\n        },\n        end: {\n          line: 67,\n          column: 19\n        }\n      },\n      \"31\": {\n        start: {\n          line: 72,\n          column: 4\n        },\n        end: {\n          line: 86,\n          column: 5\n        }\n      },\n      \"32\": {\n        start: {\n          line: 73,\n          column: 8\n        },\n        end: {\n          line: 73,\n          column: 25\n        }\n      },\n      \"33\": {\n        start: {\n          line: 74,\n          column: 11\n        },\n        end: {\n          line: 86,\n          column: 5\n        }\n      },\n      \"34\": {\n        start: {\n          line: 75,\n          column: 8\n        },\n        end: {\n          line: 78,\n          column: 9\n        }\n      },\n      \"35\": {\n        start: {\n          line: 79,\n          column: 8\n        },\n        end: {\n          line: 79,\n          column: 25\n        }\n      },\n      \"36\": {\n        start: {\n          line: 81,\n          column: 8\n        },\n        end: {\n          line: 84,\n          column: 10\n        }\n      },\n      \"37\": {\n        start: {\n          line: 85,\n          column: 8\n        },\n        end: {\n          line: 85,\n          column: 19\n        }\n      },\n      \"38\": {\n        start: {\n          line: 90,\n          column: 4\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"39\": {\n        start: {\n          line: 91,\n          column: 8\n        },\n        end: {\n          line: 94,\n          column: 9\n        }\n      },\n      \"40\": {\n        start: {\n          line: 95,\n          column: 9\n        },\n        end: {\n          line: 95,\n          column: 26\n        }\n      },\n      \"41\": {\n        start: {\n          line: 96,\n          column: 11\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"42\": {\n        start: {\n          line: 98,\n          column: 11\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"43\": {\n        start: {\n          line: 106,\n          column: 4\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"44\": {\n        start: {\n          line: 107,\n          column: 8\n        },\n        end: {\n          line: 107,\n          column: 34\n        }\n      },\n      \"45\": {\n        start: {\n          line: 108,\n          column: 11\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"46\": {\n        start: {\n          line: 109,\n          column: 8\n        },\n        end: {\n          line: 109,\n          column: 34\n        }\n      },\n      \"47\": {\n        start: {\n          line: 110,\n          column: 11\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"48\": {\n        start: {\n          line: 111,\n          column: 8\n        },\n        end: {\n          line: 111,\n          column: 33\n        }\n      },\n      \"49\": {\n        start: {\n          line: 112,\n          column: 8\n        },\n        end: {\n          line: 112,\n          column: 22\n        }\n      },\n      \"50\": {\n        start: {\n          line: 113,\n          column: 11\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"51\": {\n        start: {\n          line: 114,\n          column: 8\n        },\n        end: {\n          line: 114,\n          column: 27\n        }\n      },\n      \"52\": {\n        start: {\n          line: 115,\n          column: 8\n        },\n        end: {\n          line: 115,\n          column: 19\n        }\n      },\n      \"53\": {\n        start: {\n          line: 117,\n          column: 8\n        },\n        end: {\n          line: 117,\n          column: 33\n        }\n      },\n      \"54\": {\n        start: {\n          line: 118,\n          column: 8\n        },\n        end: {\n          line: 118,\n          column: 22\n        }\n      },\n      \"55\": {\n        start: {\n          line: 124,\n          column: 4\n        },\n        end: {\n          line: 136,\n          column: 5\n        }\n      },\n      \"56\": {\n        start: {\n          line: 125,\n          column: 8\n        },\n        end: {\n          line: 125,\n          column: 34\n        }\n      },\n      \"57\": {\n        start: {\n          line: 126,\n          column: 11\n        },\n        end: {\n          line: 136,\n          column: 5\n        }\n      },\n      \"58\": {\n        start: {\n          line: 127,\n          column: 8\n        },\n        end: {\n          line: 127,\n          column: 36\n        }\n      },\n      \"59\": {\n        start: {\n          line: 128,\n          column: 11\n        },\n        end: {\n          line: 136,\n          column: 5\n        }\n      },\n      \"60\": {\n        start: {\n          line: 131,\n          column: 8\n        },\n        end: {\n          line: 134,\n          column: 9\n        }\n      },\n      \"61\": {\n        start: {\n          line: 135,\n          column: 8\n        },\n        end: {\n          line: 135,\n          column: 31\n        }\n      },\n      \"62\": {\n        start: {\n          line: 140,\n          column: 4\n        },\n        end: {\n          line: 151,\n          column: 5\n        }\n      },\n      \"63\": {\n        start: {\n          line: 141,\n          column: 8\n        },\n        end: {\n          line: 141,\n          column: 36\n        }\n      },\n      \"64\": {\n        start: {\n          line: 142,\n          column: 11\n        },\n        end: {\n          line: 151,\n          column: 5\n        }\n      },\n      \"65\": {\n        start: {\n          line: 143,\n          column: 8\n        },\n        end: {\n          line: 143,\n          column: 35\n        }\n      },\n      \"66\": {\n        start: {\n          line: 144,\n          column: 11\n        },\n        end: {\n          line: 151,\n          column: 5\n        }\n      },\n      \"67\": {\n        start: {\n          line: 146,\n          column: 11\n        },\n        end: {\n          line: 151,\n          column: 5\n        }\n      },\n      \"68\": {\n        start: {\n          line: 149,\n          column: 8\n        },\n        end: {\n          line: 149,\n          column: 34\n        }\n      },\n      \"69\": {\n        start: {\n          line: 150,\n          column: 8\n        },\n        end: {\n          line: 150,\n          column: 28\n        }\n      },\n      \"70\": {\n        start: {\n          line: 155,\n          column: 4\n        },\n        end: {\n          line: 165,\n          column: 5\n        }\n      },\n      \"71\": {\n        start: {\n          line: 156,\n          column: 8\n        },\n        end: {\n          line: 156,\n          column: 35\n        }\n      },\n      \"72\": {\n        start: {\n          line: 157,\n          column: 11\n        },\n        end: {\n          line: 165,\n          column: 5\n        }\n      },\n      \"73\": {\n        start: {\n          line: 158,\n          column: 8\n        },\n        end: {\n          line: 158,\n          column: 41\n        }\n      },\n      \"74\": {\n        start: {\n          line: 159,\n          column: 11\n        },\n        end: {\n          line: 165,\n          column: 5\n        }\n      },\n      \"75\": {\n        start: {\n          line: 160,\n          column: 8\n        },\n        end: {\n          line: 160,\n          column: 41\n        }\n      },\n      \"76\": {\n        start: {\n          line: 161,\n          column: 11\n        },\n        end: {\n          line: 165,\n          column: 5\n        }\n      },\n      \"77\": {\n        start: {\n          line: 164,\n          column: 8\n        },\n        end: {\n          line: 164,\n          column: 40\n        }\n      },\n      \"78\": {\n        start: {\n          line: 169,\n          column: 4\n        },\n        end: {\n          line: 179,\n          column: 5\n        }\n      },\n      \"79\": {\n        start: {\n          line: 170,\n          column: 8\n        },\n        end: {\n          line: 170,\n          column: 68\n        }\n      },\n      \"80\": {\n        start: {\n          line: 171,\n          column: 8\n        },\n        end: {\n          line: 171,\n          column: 40\n        }\n      },\n      \"81\": {\n        start: {\n          line: 172,\n          column: 11\n        },\n        end: {\n          line: 179,\n          column: 5\n        }\n      },\n      \"82\": {\n        start: {\n          line: 174,\n          column: 11\n        },\n        end: {\n          line: 179,\n          column: 5\n        }\n      },\n      \"83\": {\n        start: {\n          line: 177,\n          column: 8\n        },\n        end: {\n          line: 177,\n          column: 35\n        }\n      },\n      \"84\": {\n        start: {\n          line: 178,\n          column: 8\n        },\n        end: {\n          line: 178,\n          column: 41\n        }\n      },\n      \"85\": {\n        start: {\n          line: 183,\n          column: 4\n        },\n        end: {\n          line: 195,\n          column: 5\n        }\n      },\n      \"86\": {\n        start: {\n          line: 184,\n          column: 8\n        },\n        end: {\n          line: 184,\n          column: 34\n        }\n      },\n      \"87\": {\n        start: {\n          line: 185,\n          column: 11\n        },\n        end: {\n          line: 195,\n          column: 5\n        }\n      },\n      \"88\": {\n        start: {\n          line: 186,\n          column: 8\n        },\n        end: {\n          line: 186,\n          column: 34\n        }\n      },\n      \"89\": {\n        start: {\n          line: 187,\n          column: 11\n        },\n        end: {\n          line: 195,\n          column: 5\n        }\n      },\n      \"90\": {\n        start: {\n          line: 188,\n          column: 8\n        },\n        end: {\n          line: 188,\n          column: 68\n        }\n      },\n      \"91\": {\n        start: {\n          line: 189,\n          column: 8\n        },\n        end: {\n          line: 189,\n          column: 26\n        }\n      },\n      \"92\": {\n        start: {\n          line: 190,\n          column: 8\n        },\n        end: {\n          line: 190,\n          column: 19\n        }\n      },\n      \"93\": {\n        start: {\n          line: 191,\n          column: 11\n        },\n        end: {\n          line: 195,\n          column: 5\n        }\n      },\n      \"94\": {\n        start: {\n          line: 194,\n          column: 8\n        },\n        end: {\n          line: 194,\n          column: 60\n        }\n      },\n      \"95\": {\n        start: {\n          line: 199,\n          column: 4\n        },\n        end: {\n          line: 209,\n          column: 5\n        }\n      },\n      \"96\": {\n        start: {\n          line: 200,\n          column: 8\n        },\n        end: {\n          line: 200,\n          column: 68\n        }\n      },\n      \"97\": {\n        start: {\n          line: 201,\n          column: 8\n        },\n        end: {\n          line: 201,\n          column: 40\n        }\n      },\n      \"98\": {\n        start: {\n          line: 202,\n          column: 11\n        },\n        end: {\n          line: 209,\n          column: 5\n        }\n      },\n      \"99\": {\n        start: {\n          line: 204,\n          column: 11\n        },\n        end: {\n          line: 209,\n          column: 5\n        }\n      },\n      \"100\": {\n        start: {\n          line: 207,\n          column: 8\n        },\n        end: {\n          line: 207,\n          column: 35\n        }\n      },\n      \"101\": {\n        start: {\n          line: 208,\n          column: 8\n        },\n        end: {\n          line: 208,\n          column: 41\n        }\n      },\n      \"102\": {\n        start: {\n          line: 213,\n          column: 4\n        },\n        end: {\n          line: 232,\n          column: 5\n        }\n      },\n      \"103\": {\n        start: {\n          line: 214,\n          column: 8\n        },\n        end: {\n          line: 214,\n          column: 68\n        }\n      },\n      \"104\": {\n        start: {\n          line: 215,\n          column: 8\n        },\n        end: {\n          line: 215,\n          column: 34\n        }\n      },\n      \"105\": {\n        start: {\n          line: 216,\n          column: 11\n        },\n        end: {\n          line: 232,\n          column: 5\n        }\n      },\n      \"106\": {\n        start: {\n          line: 217,\n          column: 8\n        },\n        end: {\n          line: 217,\n          column: 68\n        }\n      },\n      \"107\": {\n        start: {\n          line: 218,\n          column: 8\n        },\n        end: {\n          line: 218,\n          column: 34\n        }\n      },\n      \"108\": {\n        start: {\n          line: 219,\n          column: 11\n        },\n        end: {\n          line: 232,\n          column: 5\n        }\n      },\n      \"109\": {\n        start: {\n          line: 220,\n          column: 8\n        },\n        end: {\n          line: 220,\n          column: 68\n        }\n      },\n      \"110\": {\n        start: {\n          line: 221,\n          column: 8\n        },\n        end: {\n          line: 221,\n          column: 26\n        }\n      },\n      \"111\": {\n        start: {\n          line: 222,\n          column: 8\n        },\n        end: {\n          line: 222,\n          column: 19\n        }\n      },\n      \"112\": {\n        start: {\n          line: 223,\n          column: 11\n        },\n        end: {\n          line: 232,\n          column: 5\n        }\n      },\n      \"113\": {\n        start: {\n          line: 225,\n          column: 11\n        },\n        end: {\n          line: 232,\n          column: 5\n        }\n      },\n      \"114\": {\n        start: {\n          line: 227,\n          column: 11\n        },\n        end: {\n          line: 232,\n          column: 5\n        }\n      },\n      \"115\": {\n        start: {\n          line: 230,\n          column: 8\n        },\n        end: {\n          line: 230,\n          column: 35\n        }\n      },\n      \"116\": {\n        start: {\n          line: 231,\n          column: 8\n        },\n        end: {\n          line: 231,\n          column: 37\n        }\n      },\n      \"117\": {\n        start: {\n          line: 236,\n          column: 4\n        },\n        end: {\n          line: 255,\n          column: 5\n        }\n      },\n      \"118\": {\n        start: {\n          line: 237,\n          column: 8\n        },\n        end: {\n          line: 237,\n          column: 33\n        }\n      },\n      \"119\": {\n        start: {\n          line: 238,\n          column: 11\n        },\n        end: {\n          line: 255,\n          column: 5\n        }\n      },\n      \"120\": {\n        start: {\n          line: 239,\n          column: 8\n        },\n        end: {\n          line: 239,\n          column: 34\n        }\n      },\n      \"121\": {\n        start: {\n          line: 240,\n          column: 11\n        },\n        end: {\n          line: 255,\n          column: 5\n        }\n      },\n      \"122\": {\n        start: {\n          line: 241,\n          column: 8\n        },\n        end: {\n          line: 241,\n          column: 35\n        }\n      },\n      \"123\": {\n        start: {\n          line: 242,\n          column: 11\n        },\n        end: {\n          line: 255,\n          column: 5\n        }\n      },\n      \"124\": {\n        start: {\n          line: 243,\n          column: 8\n        },\n        end: {\n          line: 243,\n          column: 68\n        }\n      },\n      \"125\": {\n        start: {\n          line: 244,\n          column: 8\n        },\n        end: {\n          line: 244,\n          column: 26\n        }\n      },\n      \"126\": {\n        start: {\n          line: 245,\n          column: 8\n        },\n        end: {\n          line: 245,\n          column: 19\n        }\n      },\n      \"127\": {\n        start: {\n          line: 246,\n          column: 11\n        },\n        end: {\n          line: 255,\n          column: 5\n        }\n      },\n      \"128\": {\n        start: {\n          line: 249,\n          column: 8\n        },\n        end: {\n          line: 249,\n          column: 68\n        }\n      },\n      \"129\": {\n        start: {\n          line: 250,\n          column: 8\n        },\n        end: {\n          line: 253,\n          column: 9\n        }\n      },\n      \"130\": {\n        start: {\n          line: 254,\n          column: 8\n        },\n        end: {\n          line: 254,\n          column: 31\n        }\n      },\n      \"131\": {\n        start: {\n          line: 259,\n          column: 4\n        },\n        end: {\n          line: 267,\n          column: 5\n        }\n      },\n      \"132\": {\n        start: {\n          line: 260,\n          column: 8\n        },\n        end: {\n          line: 260,\n          column: 41\n        }\n      },\n      \"133\": {\n        start: {\n          line: 261,\n          column: 8\n        },\n        end: {\n          line: 261,\n          column: 26\n        }\n      },\n      \"134\": {\n        start: {\n          line: 262,\n          column: 8\n        },\n        end: {\n          line: 262,\n          column: 19\n        }\n      },\n      \"135\": {\n        start: {\n          line: 263,\n          column: 11\n        },\n        end: {\n          line: 267,\n          column: 5\n        }\n      },\n      \"136\": {\n        start: {\n          line: 272,\n          column: 4\n        },\n        end: {\n          line: 272,\n          column: 49\n        }\n      },\n      \"137\": {\n        start: {\n          line: 273,\n          column: 4\n        },\n        end: {\n          line: 273,\n          column: 24\n        }\n      },\n      \"138\": {\n        start: {\n          line: 274,\n          column: 4\n        },\n        end: {\n          line: 274,\n          column: 28\n        }\n      },\n      \"139\": {\n        start: {\n          line: 275,\n          column: 4\n        },\n        end: {\n          line: 275,\n          column: 27\n        }\n      },\n      \"140\": {\n        start: {\n          line: 277,\n          column: 16\n        },\n        end: {\n          line: 277,\n          column: 20\n        }\n      },\n      \"141\": {\n        start: {\n          line: 278,\n          column: 4\n        },\n        end: {\n          line: 280,\n          column: 5\n        }\n      },\n      \"142\": {\n        start: {\n          line: 279,\n          column: 8\n        },\n        end: {\n          line: 279,\n          column: 25\n        }\n      },\n      \"143\": {\n        start: {\n          line: 281,\n          column: 4\n        },\n        end: {\n          line: 281,\n          column: 23\n        }\n      },\n      \"144\": {\n        start: {\n          line: 282,\n          column: 4\n        },\n        end: {\n          line: 282,\n          column: 19\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"emit\",\n        decl: {\n          start: {\n            line: 8,\n            column: 9\n          },\n          end: {\n            line: 8,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 8,\n            column: 21\n          },\n          end: {\n            line: 52,\n            column: 1\n          }\n        },\n        line: 8\n      },\n      \"1\": {\n        name: \"data\",\n        decl: {\n          start: {\n            line: 54,\n            column: 9\n          },\n          end: {\n            line: 54,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 54,\n            column: 17\n          },\n          end: {\n            line: 69,\n            column: 1\n          }\n        },\n        line: 54\n      },\n      \"2\": {\n        name: \"tagOpen\",\n        decl: {\n          start: {\n            line: 71,\n            column: 9\n          },\n          end: {\n            line: 71,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 71,\n            column: 20\n          },\n          end: {\n            line: 87,\n            column: 1\n          }\n        },\n        line: 71\n      },\n      \"3\": {\n        name: \"endTagOpen\",\n        decl: {\n          start: {\n            line: 89,\n            column: 9\n          },\n          end: {\n            line: 89,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 89,\n            column: 23\n          },\n          end: {\n            line: 103,\n            column: 1\n          }\n        },\n        line: 89\n      },\n      \"4\": {\n        name: \"tagName\",\n        decl: {\n          start: {\n            line: 105,\n            column: 9\n          },\n          end: {\n            line: 105,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 105,\n            column: 20\n          },\n          end: {\n            line: 120,\n            column: 1\n          }\n        },\n        line: 105\n      },\n      \"5\": {\n        name: \"beforeAttributeName\",\n        decl: {\n          start: {\n            line: 123,\n            column: 9\n          },\n          end: {\n            line: 123,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 123,\n            column: 32\n          },\n          end: {\n            line: 137,\n            column: 1\n          }\n        },\n        line: 123\n      },\n      \"6\": {\n        name: \"attributeName\",\n        decl: {\n          start: {\n            line: 139,\n            column: 9\n          },\n          end: {\n            line: 139,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 139,\n            column: 26\n          },\n          end: {\n            line: 152,\n            column: 1\n          }\n        },\n        line: 139\n      },\n      \"7\": {\n        name: \"beforeAttributeValue\",\n        decl: {\n          start: {\n            line: 154,\n            column: 9\n          },\n          end: {\n            line: 154,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 154,\n            column: 33\n          },\n          end: {\n            line: 166,\n            column: 1\n          }\n        },\n        line: 154\n      },\n      \"8\": {\n        name: \"doubleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 168,\n            column: 9\n          },\n          end: {\n            line: 168,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 168,\n            column: 39\n          },\n          end: {\n            line: 180,\n            column: 1\n          }\n        },\n        line: 168\n      },\n      \"9\": {\n        name: \"afterQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 182,\n            column: 9\n          },\n          end: {\n            line: 182,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 182,\n            column: 38\n          },\n          end: {\n            line: 196,\n            column: 1\n          }\n        },\n        line: 182\n      },\n      \"10\": {\n        name: \"singleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 198,\n            column: 9\n          },\n          end: {\n            line: 198,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 198,\n            column: 39\n          },\n          end: {\n            line: 210,\n            column: 1\n          }\n        },\n        line: 198\n      },\n      \"11\": {\n        name: \"UnquotedAttributeValue\",\n        decl: {\n          start: {\n            line: 212,\n            column: 9\n          },\n          end: {\n            line: 212,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 212,\n            column: 35\n          },\n          end: {\n            line: 233,\n            column: 1\n          }\n        },\n        line: 212\n      },\n      \"12\": {\n        name: \"afterAttributeName\",\n        decl: {\n          start: {\n            line: 235,\n            column: 9\n          },\n          end: {\n            line: 235,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 235,\n            column: 31\n          },\n          end: {\n            line: 256,\n            column: 1\n          }\n        },\n        line: 235\n      },\n      \"13\": {\n        name: \"selfClosingStartTag\",\n        decl: {\n          start: {\n            line: 258,\n            column: 9\n          },\n          end: {\n            line: 258,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 258,\n            column: 32\n          },\n          end: {\n            line: 268,\n            column: 1\n          }\n        },\n        line: 258\n      },\n      \"14\": {\n        name: \"parseHTML\",\n        decl: {\n          start: {\n            line: 270,\n            column: 16\n          },\n          end: {\n            line: 270,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 270,\n            column: 32\n          },\n          end: {\n            line: 283,\n            column: 1\n          }\n        },\n        line: 270\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 11,\n            column: 4\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 11,\n            column: 4\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 11,\n            column: 4\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }],\n        line: 11\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 21,\n            column: 12\n          },\n          end: {\n            line: 26,\n            column: 13\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 21,\n            column: 12\n          },\n          end: {\n            line: 26,\n            column: 13\n          }\n        }, {\n          start: {\n            line: 21,\n            column: 12\n          },\n          end: {\n            line: 26,\n            column: 13\n          }\n        }],\n        line: 21\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 21,\n            column: 16\n          },\n          end: {\n            line: 21,\n            column: 45\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 21,\n            column: 16\n          },\n          end: {\n            line: 21,\n            column: 27\n          }\n        }, {\n          start: {\n            line: 21,\n            column: 31\n          },\n          end: {\n            line: 21,\n            column: 45\n          }\n        }],\n        line: 21\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 32,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 32,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 32,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        }],\n        line: 32\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 37,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 37,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 37,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }],\n        line: 37\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 40,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 40,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 40,\n            column: 9\n          }\n        }],\n        line: 38\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }],\n        line: 42\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 43,\n            column: 8\n          },\n          end: {\n            line: 49,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 43,\n            column: 8\n          },\n          end: {\n            line: 49,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 43,\n            column: 8\n          },\n          end: {\n            line: 49,\n            column: 9\n          }\n        }],\n        line: 43\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }],\n        line: 55\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }],\n        line: 57\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }],\n        line: 72\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }],\n        line: 74\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 90,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 90,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 90,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 90\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 96,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 96,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 96,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 96\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 98,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 98,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 98,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 98\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 106,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 106,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 106,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 106\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 108,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 108,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 108,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 108\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 110,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 110,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 110,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 110\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 113,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 113,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 113,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 113\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 124,\n            column: 4\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 124,\n            column: 4\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 124,\n            column: 4\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        }],\n        line: 124\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 126,\n            column: 11\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 126,\n            column: 11\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 126,\n            column: 11\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        }],\n        line: 126\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 126,\n            column: 15\n          },\n          end: {\n            line: 126,\n            column: 47\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 126,\n            column: 15\n          },\n          end: {\n            line: 126,\n            column: 23\n          }\n        }, {\n          start: {\n            line: 126,\n            column: 27\n          },\n          end: {\n            line: 126,\n            column: 35\n          }\n        }, {\n          start: {\n            line: 126,\n            column: 39\n          },\n          end: {\n            line: 126,\n            column: 47\n          }\n        }],\n        line: 126\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 128,\n            column: 11\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 128,\n            column: 11\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 128,\n            column: 11\n          },\n          end: {\n            line: 136,\n            column: 5\n          }\n        }],\n        line: 128\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 140,\n            column: 4\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 140,\n            column: 4\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 140,\n            column: 4\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }],\n        line: 140\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 140,\n            column: 8\n          },\n          end: {\n            line: 140,\n            column: 66\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 140,\n            column: 8\n          },\n          end: {\n            line: 140,\n            column: 30\n          }\n        }, {\n          start: {\n            line: 140,\n            column: 34\n          },\n          end: {\n            line: 140,\n            column: 42\n          }\n        }, {\n          start: {\n            line: 140,\n            column: 46\n          },\n          end: {\n            line: 140,\n            column: 54\n          }\n        }, {\n          start: {\n            line: 140,\n            column: 58\n          },\n          end: {\n            line: 140,\n            column: 66\n          }\n        }],\n        line: 140\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 142,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 142,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 142,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }],\n        line: 142\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 144,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 144,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 144,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }],\n        line: 144\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 146,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 146,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 11\n          },\n          end: {\n            line: 151,\n            column: 5\n          }\n        }],\n        line: 146\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 146,\n            column: 15\n          },\n          end: {\n            line: 146,\n            column: 48\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 146,\n            column: 15\n          },\n          end: {\n            line: 146,\n            column: 24\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 28\n          },\n          end: {\n            line: 146,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 146,\n            column: 40\n          },\n          end: {\n            line: 146,\n            column: 48\n          }\n        }],\n        line: 146\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 155,\n            column: 4\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 155,\n            column: 4\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 155,\n            column: 4\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }],\n        line: 155\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 155,\n            column: 8\n          },\n          end: {\n            line: 155,\n            column: 66\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 155,\n            column: 8\n          },\n          end: {\n            line: 155,\n            column: 30\n          }\n        }, {\n          start: {\n            line: 155,\n            column: 34\n          },\n          end: {\n            line: 155,\n            column: 42\n          }\n        }, {\n          start: {\n            line: 155,\n            column: 46\n          },\n          end: {\n            line: 155,\n            column: 54\n          }\n        }, {\n          start: {\n            line: 155,\n            column: 58\n          },\n          end: {\n            line: 155,\n            column: 66\n          }\n        }],\n        line: 155\n      },\n      \"31\": {\n        loc: {\n          start: {\n            line: 157,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 157,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 157,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }],\n        line: 157\n      },\n      \"32\": {\n        loc: {\n          start: {\n            line: 159,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 159,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 159,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }],\n        line: 159\n      },\n      \"33\": {\n        loc: {\n          start: {\n            line: 161,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 161,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 161,\n            column: 11\n          },\n          end: {\n            line: 165,\n            column: 5\n          }\n        }],\n        line: 161\n      },\n      \"34\": {\n        loc: {\n          start: {\n            line: 169,\n            column: 4\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 169,\n            column: 4\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 169,\n            column: 4\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        }],\n        line: 169\n      },\n      \"35\": {\n        loc: {\n          start: {\n            line: 172,\n            column: 11\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 172,\n            column: 11\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 172,\n            column: 11\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        }],\n        line: 172\n      },\n      \"36\": {\n        loc: {\n          start: {\n            line: 174,\n            column: 11\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 174,\n            column: 11\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 174,\n            column: 11\n          },\n          end: {\n            line: 179,\n            column: 5\n          }\n        }],\n        line: 174\n      },\n      \"37\": {\n        loc: {\n          start: {\n            line: 183,\n            column: 4\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 183,\n            column: 4\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 183,\n            column: 4\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }],\n        line: 183\n      },\n      \"38\": {\n        loc: {\n          start: {\n            line: 185,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 185,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 185,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }],\n        line: 185\n      },\n      \"39\": {\n        loc: {\n          start: {\n            line: 187,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 187,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 187,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }],\n        line: 187\n      },\n      \"40\": {\n        loc: {\n          start: {\n            line: 191,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 191,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 191,\n            column: 11\n          },\n          end: {\n            line: 195,\n            column: 5\n          }\n        }],\n        line: 191\n      },\n      \"41\": {\n        loc: {\n          start: {\n            line: 199,\n            column: 4\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 199,\n            column: 4\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 199,\n            column: 4\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        }],\n        line: 199\n      },\n      \"42\": {\n        loc: {\n          start: {\n            line: 202,\n            column: 11\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 202,\n            column: 11\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 202,\n            column: 11\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        }],\n        line: 202\n      },\n      \"43\": {\n        loc: {\n          start: {\n            line: 204,\n            column: 11\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 204,\n            column: 11\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 204,\n            column: 11\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        }],\n        line: 204\n      },\n      \"44\": {\n        loc: {\n          start: {\n            line: 213,\n            column: 4\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 213,\n            column: 4\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 213,\n            column: 4\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }],\n        line: 213\n      },\n      \"45\": {\n        loc: {\n          start: {\n            line: 216,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 216,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 216,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }],\n        line: 216\n      },\n      \"46\": {\n        loc: {\n          start: {\n            line: 219,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 219,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 219,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }],\n        line: 219\n      },\n      \"47\": {\n        loc: {\n          start: {\n            line: 223,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 223,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 223,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }],\n        line: 223\n      },\n      \"48\": {\n        loc: {\n          start: {\n            line: 225,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 225,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 225,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }],\n        line: 225\n      },\n      \"49\": {\n        loc: {\n          start: {\n            line: 225,\n            column: 15\n          },\n          end: {\n            line: 225,\n            column: 72\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 225,\n            column: 15\n          },\n          end: {\n            line: 225,\n            column: 24\n          }\n        }, {\n          start: {\n            line: 225,\n            column: 28\n          },\n          end: {\n            line: 225,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 225,\n            column: 40\n          },\n          end: {\n            line: 225,\n            column: 48\n          }\n        }, {\n          start: {\n            line: 225,\n            column: 52\n          },\n          end: {\n            line: 225,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 225,\n            column: 64\n          },\n          end: {\n            line: 225,\n            column: 72\n          }\n        }],\n        line: 225\n      },\n      \"50\": {\n        loc: {\n          start: {\n            line: 227,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 227,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 227,\n            column: 11\n          },\n          end: {\n            line: 232,\n            column: 5\n          }\n        }],\n        line: 227\n      },\n      \"51\": {\n        loc: {\n          start: {\n            line: 236,\n            column: 4\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 236,\n            column: 4\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 236,\n            column: 4\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }],\n        line: 236\n      },\n      \"52\": {\n        loc: {\n          start: {\n            line: 238,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 238,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 238,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }],\n        line: 238\n      },\n      \"53\": {\n        loc: {\n          start: {\n            line: 240,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 240,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 240,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }],\n        line: 240\n      },\n      \"54\": {\n        loc: {\n          start: {\n            line: 242,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 242,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 242,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }],\n        line: 242\n      },\n      \"55\": {\n        loc: {\n          start: {\n            line: 246,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 246,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 246,\n            column: 11\n          },\n          end: {\n            line: 255,\n            column: 5\n          }\n        }],\n        line: 246\n      },\n      \"56\": {\n        loc: {\n          start: {\n            line: 259,\n            column: 4\n          },\n          end: {\n            line: 267,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 259,\n            column: 4\n          },\n          end: {\n            line: 267,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 259,\n            column: 4\n          },\n          end: {\n            line: 267,\n            column: 5\n          }\n        }],\n        line: 259\n      },\n      \"57\": {\n        loc: {\n          start: {\n            line: 263,\n            column: 11\n          },\n          end: {\n            line: 267,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 263,\n            column: 11\n          },\n          end: {\n            line: 267,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 263,\n            column: 11\n          },\n          end: {\n            line: 267,\n            column: 5\n          }\n        }],\n        line: 263\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0,\n      \"83\": 0,\n      \"84\": 0,\n      \"85\": 0,\n      \"86\": 0,\n      \"87\": 0,\n      \"88\": 0,\n      \"89\": 0,\n      \"90\": 0,\n      \"91\": 0,\n      \"92\": 0,\n      \"93\": 0,\n      \"94\": 0,\n      \"95\": 0,\n      \"96\": 0,\n      \"97\": 0,\n      \"98\": 0,\n      \"99\": 0,\n      \"100\": 0,\n      \"101\": 0,\n      \"102\": 0,\n      \"103\": 0,\n      \"104\": 0,\n      \"105\": 0,\n      \"106\": 0,\n      \"107\": 0,\n      \"108\": 0,\n      \"109\": 0,\n      \"110\": 0,\n      \"111\": 0,\n      \"112\": 0,\n      \"113\": 0,\n      \"114\": 0,\n      \"115\": 0,\n      \"116\": 0,\n      \"117\": 0,\n      \"118\": 0,\n      \"119\": 0,\n      \"120\": 0,\n      \"121\": 0,\n      \"122\": 0,\n      \"123\": 0,\n      \"124\": 0,\n      \"125\": 0,\n      \"126\": 0,\n      \"127\": 0,\n      \"128\": 0,\n      \"129\": 0,\n      \"130\": 0,\n      \"131\": 0,\n      \"132\": 0,\n      \"133\": 0,\n      \"134\": 0,\n      \"135\": 0,\n      \"136\": 0,\n      \"137\": 0,\n      \"138\": 0,\n      \"139\": 0,\n      \"140\": 0,\n      \"141\": 0,\n      \"142\": 0,\n      \"143\": 0,\n      \"144\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0],\n      \"21\": [0, 0, 0],\n      \"22\": [0, 0],\n      \"23\": [0, 0],\n      \"24\": [0, 0, 0, 0],\n      \"25\": [0, 0],\n      \"26\": [0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0, 0],\n      \"29\": [0, 0],\n      \"30\": [0, 0, 0, 0],\n      \"31\": [0, 0],\n      \"32\": [0, 0],\n      \"33\": [0, 0],\n      \"34\": [0, 0],\n      \"35\": [0, 0],\n      \"36\": [0, 0],\n      \"37\": [0, 0],\n      \"38\": [0, 0],\n      \"39\": [0, 0],\n      \"40\": [0, 0],\n      \"41\": [0, 0],\n      \"42\": [0, 0],\n      \"43\": [0, 0],\n      \"44\": [0, 0],\n      \"45\": [0, 0],\n      \"46\": [0, 0],\n      \"47\": [0, 0],\n      \"48\": [0, 0],\n      \"49\": [0, 0, 0, 0, 0],\n      \"50\": [0, 0],\n      \"51\": [0, 0],\n      \"52\": [0, 0],\n      \"53\": [0, 0],\n      \"54\": [0, 0],\n      \"55\": [0, 0],\n      \"56\": [0, 0],\n      \"57\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"494c7397793e8de8b91bd072bb6def7d6fb068d4\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_5xm3ognsj = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_5xm3ognsj();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar EOF = (cov_5xm3ognsj().s[0]++, Symbol('EOF'));\nvar stack;\nvar currentToken = (cov_5xm3ognsj().s[1]++, null);\nvar currentAttribute = (cov_5xm3ognsj().s[2]++, null);\nvar currentTextNode = (cov_5xm3ognsj().s[3]++, null);\n\nfunction emit(token) {\n  cov_5xm3ognsj().f[0]++;\n  var top = (cov_5xm3ognsj().s[4]++, stack[stack.length - 1]);\n  cov_5xm3ognsj().s[5]++;\n\n  if (token.type == 'startTag') {\n    cov_5xm3ognsj().b[0][0]++;\n    var element = (cov_5xm3ognsj().s[6]++, {\n      type: 'element',\n      children: [],\n      attributes: []\n    });\n    cov_5xm3ognsj().s[7]++;\n    element.tagName = token.tagName;\n    cov_5xm3ognsj().s[8]++;\n\n    for (var p in token) {\n      cov_5xm3ognsj().s[9]++;\n\n      if ((cov_5xm3ognsj().b[2][0]++, p != 'type') && (cov_5xm3ognsj().b[2][1]++, p != 'tagName')) {\n        cov_5xm3ognsj().b[1][0]++;\n        cov_5xm3ognsj().s[10]++;\n        element.attributes.push({\n          name: p,\n          value: token[p]\n        });\n      } else {\n        cov_5xm3ognsj().b[1][1]++;\n      }\n    }\n\n    cov_5xm3ognsj().s[11]++;\n    top.children.push(element); // element.parent = top\n\n    cov_5xm3ognsj().s[12]++;\n\n    if (!token.isSelfClosing) {\n      cov_5xm3ognsj().b[3][0]++;\n      cov_5xm3ognsj().s[13]++;\n      stack.push(element);\n    } else {\n      cov_5xm3ognsj().b[3][1]++;\n    }\n\n    cov_5xm3ognsj().s[14]++;\n    currentTextNode = null;\n  } else {\n    cov_5xm3ognsj().b[0][1]++;\n    cov_5xm3ognsj().s[15]++;\n\n    if (token.type == 'endTag') {\n      cov_5xm3ognsj().b[4][0]++;\n      cov_5xm3ognsj().s[16]++;\n\n      if (top.tagName != token.tagName) {\n        cov_5xm3ognsj().b[5][0]++;\n        cov_5xm3ognsj().s[17]++;\n        throw new Error(\"Tag start end doesn't match!\");\n      } else {\n        cov_5xm3ognsj().b[5][1]++;\n      }\n\n      cov_5xm3ognsj().s[18]++;\n      currentTextNode = null;\n    } else {\n      cov_5xm3ognsj().b[4][1]++;\n      cov_5xm3ognsj().s[19]++;\n\n      if (token.type == 'text') {\n        cov_5xm3ognsj().b[6][0]++;\n        cov_5xm3ognsj().s[20]++;\n\n        if (currentTextNode == null) {\n          cov_5xm3ognsj().b[7][0]++;\n          cov_5xm3ognsj().s[21]++;\n          currentTextNode = {\n            type: 'text',\n            content: ''\n          };\n          cov_5xm3ognsj().s[22]++;\n          top.children.push(currentTextNode);\n        } else {\n          cov_5xm3ognsj().b[7][1]++;\n        }\n\n        cov_5xm3ognsj().s[23]++;\n        currentTextNode.content += token.content;\n      } else {\n        cov_5xm3ognsj().b[6][1]++;\n      }\n    }\n  }\n}\n\nfunction data(c) {\n  cov_5xm3ognsj().f[1]++;\n  cov_5xm3ognsj().s[24]++;\n\n  if (c === \"<\") {\n    cov_5xm3ognsj().b[8][0]++;\n    cov_5xm3ognsj().s[25]++;\n    return tagOpen;\n  } else {\n    cov_5xm3ognsj().b[8][1]++;\n    cov_5xm3ognsj().s[26]++;\n\n    if (c == EOF) {\n      cov_5xm3ognsj().b[9][0]++;\n      cov_5xm3ognsj().s[27]++;\n      emit({\n        type: 'EOF'\n      });\n      cov_5xm3ognsj().s[28]++;\n      return;\n    } else {\n      cov_5xm3ognsj().b[9][1]++;\n      cov_5xm3ognsj().s[29]++;\n      emit({\n        type: 'text',\n        content: c\n      });\n      cov_5xm3ognsj().s[30]++;\n      return data;\n    }\n  }\n}\n\nfunction tagOpen(c) {\n  cov_5xm3ognsj().f[2]++;\n  cov_5xm3ognsj().s[31]++;\n\n  if (c === \"/\") {\n    cov_5xm3ognsj().b[10][0]++;\n    cov_5xm3ognsj().s[32]++;\n    return endTagOpen;\n  } else {\n    cov_5xm3ognsj().b[10][1]++;\n    cov_5xm3ognsj().s[33]++;\n\n    if (c.match(/^[a-zA-Z]$/)) {\n      cov_5xm3ognsj().b[11][0]++;\n      cov_5xm3ognsj().s[34]++;\n      currentToken = {\n        type: \"startTag\",\n        tagName: \"\"\n      };\n      cov_5xm3ognsj().s[35]++;\n      return tagName(c);\n    } else {\n      cov_5xm3ognsj().b[11][1]++;\n      cov_5xm3ognsj().s[36]++;\n      emit({\n        type: \"text\",\n        content: c\n      });\n      cov_5xm3ognsj().s[37]++;\n      return data;\n    }\n  }\n}\n\nfunction endTagOpen(c) {\n  cov_5xm3ognsj().f[3]++;\n  cov_5xm3ognsj().s[38]++;\n\n  if (c.match(/^[a-zA-Z]$/)) {\n    cov_5xm3ognsj().b[12][0]++;\n    cov_5xm3ognsj().s[39]++;\n    currentToken = {\n      type: \"endTag\",\n      tagName: \"\"\n    };\n    cov_5xm3ognsj().s[40]++;\n    return tagName(c);\n  } else {\n    cov_5xm3ognsj().b[12][1]++;\n    cov_5xm3ognsj().s[41]++;\n\n    if (c == '>') {\n      cov_5xm3ognsj().b[13][0]++;\n    } else {\n      cov_5xm3ognsj().b[13][1]++;\n      cov_5xm3ognsj().s[42]++;\n\n      if (c == EOF) {\n        cov_5xm3ognsj().b[14][0]++;\n      } else {\n        cov_5xm3ognsj().b[14][1]++;\n      }\n    }\n  }\n}\n\nfunction tagName(c) {\n  cov_5xm3ognsj().f[4]++;\n  cov_5xm3ognsj().s[43]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[15][0]++;\n    cov_5xm3ognsj().s[44]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[15][1]++;\n    cov_5xm3ognsj().s[45]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[16][0]++;\n      cov_5xm3ognsj().s[46]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[16][1]++;\n      cov_5xm3ognsj().s[47]++;\n\n      if (c.match(/^[A-Z]$/)) {\n        cov_5xm3ognsj().b[17][0]++;\n        cov_5xm3ognsj().s[48]++;\n        currentToken.tagName += c;\n        cov_5xm3ognsj().s[49]++;\n        return tagName;\n      } else {\n        cov_5xm3ognsj().b[17][1]++;\n        cov_5xm3ognsj().s[50]++;\n\n        if (c == \">\") {\n          cov_5xm3ognsj().b[18][0]++;\n          cov_5xm3ognsj().s[51]++;\n          emit(currentToken);\n          cov_5xm3ognsj().s[52]++;\n          return data;\n        } else {\n          cov_5xm3ognsj().b[18][1]++;\n          cov_5xm3ognsj().s[53]++;\n          currentToken.tagName += c;\n          cov_5xm3ognsj().s[54]++;\n          return tagName;\n        }\n      }\n    }\n  }\n} // 处理属性\n\n\nfunction beforeAttributeName(c) {\n  cov_5xm3ognsj().f[5]++;\n  cov_5xm3ognsj().s[55]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[19][0]++;\n    cov_5xm3ognsj().s[56]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[19][1]++;\n    cov_5xm3ognsj().s[57]++;\n\n    if ((cov_5xm3ognsj().b[21][0]++, c == \"/\") || (cov_5xm3ognsj().b[21][1]++, c == \">\") || (cov_5xm3ognsj().b[21][2]++, c == EOF)) {\n      cov_5xm3ognsj().b[20][0]++;\n      cov_5xm3ognsj().s[58]++;\n      return afterAttributeName(c);\n    } else {\n      cov_5xm3ognsj().b[20][1]++;\n      cov_5xm3ognsj().s[59]++;\n\n      if (c == \"=\") {\n        cov_5xm3ognsj().b[22][0]++;\n      } else {\n        cov_5xm3ognsj().b[22][1]++;\n        cov_5xm3ognsj().s[60]++;\n        currentAttribute = {\n          name: \"\",\n          value: \"\"\n        };\n        cov_5xm3ognsj().s[61]++;\n        return attributeName(c);\n      }\n    }\n  }\n}\n\nfunction attributeName(c) {\n  cov_5xm3ognsj().f[6]++;\n  cov_5xm3ognsj().s[62]++;\n\n  if ((cov_5xm3ognsj().b[24][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_5xm3ognsj().b[24][1]++, c == \"/\") || (cov_5xm3ognsj().b[24][2]++, c == \">\") || (cov_5xm3ognsj().b[24][3]++, c == EOF)) {\n    cov_5xm3ognsj().b[23][0]++;\n    cov_5xm3ognsj().s[63]++;\n    return afterAttributeName(c);\n  } else {\n    cov_5xm3ognsj().b[23][1]++;\n    cov_5xm3ognsj().s[64]++;\n\n    if (c == \"=\") {\n      cov_5xm3ognsj().b[25][0]++;\n      cov_5xm3ognsj().s[65]++;\n      return beforeAttributeValue;\n    } else {\n      cov_5xm3ognsj().b[25][1]++;\n      cov_5xm3ognsj().s[66]++;\n\n      if (c == \"\\0\") {\n        cov_5xm3ognsj().b[26][0]++;\n      } else {\n        cov_5xm3ognsj().b[26][1]++;\n        cov_5xm3ognsj().s[67]++;\n\n        if ((cov_5xm3ognsj().b[28][0]++, c == \"\\\"\") || (cov_5xm3ognsj().b[28][1]++, c == \"'\") || (cov_5xm3ognsj().b[28][2]++, c == \"<\")) {\n          cov_5xm3ognsj().b[27][0]++;\n        } else {\n          cov_5xm3ognsj().b[27][1]++;\n          cov_5xm3ognsj().s[68]++;\n          currentAttribute.name += c;\n          cov_5xm3ognsj().s[69]++;\n          return attributeName;\n        }\n      }\n    }\n  }\n}\n\nfunction beforeAttributeValue(c) {\n  cov_5xm3ognsj().f[7]++;\n  cov_5xm3ognsj().s[70]++;\n\n  if ((cov_5xm3ognsj().b[30][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_5xm3ognsj().b[30][1]++, c == \"/\") || (cov_5xm3ognsj().b[30][2]++, c == \">\") || (cov_5xm3ognsj().b[30][3]++, c == EOF)) {\n    cov_5xm3ognsj().b[29][0]++;\n    cov_5xm3ognsj().s[71]++;\n    return beforeAttributeValue;\n  } else {\n    cov_5xm3ognsj().b[29][1]++;\n    cov_5xm3ognsj().s[72]++;\n\n    if (c == \"\\\"\") {\n      cov_5xm3ognsj().b[31][0]++;\n      cov_5xm3ognsj().s[73]++;\n      return doubleQuotedAttributeValue;\n    } else {\n      cov_5xm3ognsj().b[31][1]++;\n      cov_5xm3ognsj().s[74]++;\n\n      if (c == \"\\'\") {\n        cov_5xm3ognsj().b[32][0]++;\n        cov_5xm3ognsj().s[75]++;\n        return singleQuotedAttributeValue;\n      } else {\n        cov_5xm3ognsj().b[32][1]++;\n        cov_5xm3ognsj().s[76]++;\n\n        if (c == '>') {\n          cov_5xm3ognsj().b[33][0]++;\n        } else {\n          cov_5xm3ognsj().b[33][1]++;\n          cov_5xm3ognsj().s[77]++;\n          return UnquotedAttributeValue(c);\n        }\n      }\n    }\n  }\n}\n\nfunction doubleQuotedAttributeValue(c) {\n  cov_5xm3ognsj().f[8]++;\n  cov_5xm3ognsj().s[78]++;\n\n  if (c == \"\\\"\") {\n    cov_5xm3ognsj().b[34][0]++;\n    cov_5xm3ognsj().s[79]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_5xm3ognsj().s[80]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_5xm3ognsj().b[34][1]++;\n    cov_5xm3ognsj().s[81]++;\n\n    if (c == \"\\0\") {\n      cov_5xm3ognsj().b[35][0]++;\n    } else {\n      cov_5xm3ognsj().b[35][1]++;\n      cov_5xm3ognsj().s[82]++;\n\n      if (c == EOF) {\n        cov_5xm3ognsj().b[36][0]++;\n      } else {\n        cov_5xm3ognsj().b[36][1]++;\n        cov_5xm3ognsj().s[83]++;\n        currentAttribute.value += c;\n        cov_5xm3ognsj().s[84]++;\n        return doubleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction afterQuotedAttributeValue(c) {\n  cov_5xm3ognsj().f[9]++;\n  cov_5xm3ognsj().s[85]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[37][0]++;\n    cov_5xm3ognsj().s[86]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[37][1]++;\n    cov_5xm3ognsj().s[87]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[38][0]++;\n      cov_5xm3ognsj().s[88]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[38][1]++;\n      cov_5xm3ognsj().s[89]++;\n\n      if (c == \">\") {\n        cov_5xm3ognsj().b[39][0]++;\n        cov_5xm3ognsj().s[90]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_5xm3ognsj().s[91]++;\n        emit(currentToken);\n        cov_5xm3ognsj().s[92]++;\n        return data;\n      } else {\n        cov_5xm3ognsj().b[39][1]++;\n        cov_5xm3ognsj().s[93]++;\n\n        if (c == EOF) {\n          cov_5xm3ognsj().b[40][0]++;\n        } else {\n          cov_5xm3ognsj().b[40][1]++;\n          cov_5xm3ognsj().s[94]++;\n          throw new Error('unexpected charater \\\"' + c + '\\\"');\n        }\n      }\n    }\n  }\n}\n\nfunction singleQuotedAttributeValue(c) {\n  cov_5xm3ognsj().f[10]++;\n  cov_5xm3ognsj().s[95]++;\n\n  if (c == \"\\'\") {\n    cov_5xm3ognsj().b[41][0]++;\n    cov_5xm3ognsj().s[96]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_5xm3ognsj().s[97]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_5xm3ognsj().b[41][1]++;\n    cov_5xm3ognsj().s[98]++;\n\n    if (c == \"\\0\") {\n      cov_5xm3ognsj().b[42][0]++;\n    } else {\n      cov_5xm3ognsj().b[42][1]++;\n      cov_5xm3ognsj().s[99]++;\n\n      if (c == EOF) {\n        cov_5xm3ognsj().b[43][0]++;\n      } else {\n        cov_5xm3ognsj().b[43][1]++;\n        cov_5xm3ognsj().s[100]++;\n        currentAttribute.value += c;\n        cov_5xm3ognsj().s[101]++;\n        return singleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction UnquotedAttributeValue(c) {\n  cov_5xm3ognsj().f[11]++;\n  cov_5xm3ognsj().s[102]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[44][0]++;\n    cov_5xm3ognsj().s[103]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_5xm3ognsj().s[104]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[44][1]++;\n    cov_5xm3ognsj().s[105]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[45][0]++;\n      cov_5xm3ognsj().s[106]++;\n      currentToken[currentAttribute.name] = currentAttribute.value;\n      cov_5xm3ognsj().s[107]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[45][1]++;\n      cov_5xm3ognsj().s[108]++;\n\n      if (c == \">\") {\n        cov_5xm3ognsj().b[46][0]++;\n        cov_5xm3ognsj().s[109]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_5xm3ognsj().s[110]++;\n        emit(currentToken);\n        cov_5xm3ognsj().s[111]++;\n        return data;\n      } else {\n        cov_5xm3ognsj().b[46][1]++;\n        cov_5xm3ognsj().s[112]++;\n\n        if (c == \"\\0\") {\n          cov_5xm3ognsj().b[47][0]++;\n        } else {\n          cov_5xm3ognsj().b[47][1]++;\n          cov_5xm3ognsj().s[113]++;\n\n          if ((cov_5xm3ognsj().b[49][0]++, c == '\\\"') || (cov_5xm3ognsj().b[49][1]++, c == \"'\") || (cov_5xm3ognsj().b[49][2]++, c == '<') || (cov_5xm3ognsj().b[49][3]++, c == '=') || (cov_5xm3ognsj().b[49][4]++, c == '`')) {\n            cov_5xm3ognsj().b[48][0]++;\n          } else {\n            cov_5xm3ognsj().b[48][1]++;\n            cov_5xm3ognsj().s[114]++;\n\n            if (c == EOF) {\n              cov_5xm3ognsj().b[50][0]++;\n            } else {\n              cov_5xm3ognsj().b[50][1]++;\n              cov_5xm3ognsj().s[115]++;\n              currentAttribute.value += c;\n              cov_5xm3ognsj().s[116]++;\n              return UnquotedAttributeValue;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction afterAttributeName(c) {\n  cov_5xm3ognsj().f[12]++;\n  cov_5xm3ognsj().s[117]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[51][0]++;\n    cov_5xm3ognsj().s[118]++;\n    return afterAttributeName;\n  } else {\n    cov_5xm3ognsj().b[51][1]++;\n    cov_5xm3ognsj().s[119]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[52][0]++;\n      cov_5xm3ognsj().s[120]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[52][1]++;\n      cov_5xm3ognsj().s[121]++;\n\n      if (c == \"=\") {\n        cov_5xm3ognsj().b[53][0]++;\n        cov_5xm3ognsj().s[122]++;\n        return beforeAttributeValue;\n      } else {\n        cov_5xm3ognsj().b[53][1]++;\n        cov_5xm3ognsj().s[123]++;\n\n        if (c == \">\") {\n          cov_5xm3ognsj().b[54][0]++;\n          cov_5xm3ognsj().s[124]++;\n          currentToken[currentAttribute.name] = currentAttribute.value;\n          cov_5xm3ognsj().s[125]++;\n          emit(currentToken);\n          cov_5xm3ognsj().s[126]++;\n          return data;\n        } else {\n          cov_5xm3ognsj().b[54][1]++;\n          cov_5xm3ognsj().s[127]++;\n\n          if (c == EOF) {\n            cov_5xm3ognsj().b[55][0]++;\n          } else {\n            cov_5xm3ognsj().b[55][1]++;\n            cov_5xm3ognsj().s[128]++;\n            currentToken[currentAttribute.name] = currentAttribute.value;\n            cov_5xm3ognsj().s[129]++;\n            currentAttribute = {\n              name: '',\n              value: ''\n            };\n            cov_5xm3ognsj().s[130]++;\n            return attributeName(c);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction selfClosingStartTag(c) {\n  cov_5xm3ognsj().f[13]++;\n  cov_5xm3ognsj().s[131]++;\n\n  if (c == '>') {\n    cov_5xm3ognsj().b[56][0]++;\n    cov_5xm3ognsj().s[132]++;\n    currentToken.isSelfClosing = true;\n    cov_5xm3ognsj().s[133]++;\n    emit(currentToken);\n    cov_5xm3ognsj().s[134]++;\n    return data;\n  } else {\n    cov_5xm3ognsj().b[56][1]++;\n    cov_5xm3ognsj().s[135]++;\n\n    if (c == 'EOF') {\n      cov_5xm3ognsj().b[57][0]++;\n    } else {\n      cov_5xm3ognsj().b[57][1]++;\n    }\n  }\n}\n\nfunction parseHTML(html) {\n  cov_5xm3ognsj().f[14]++;\n  cov_5xm3ognsj().s[136]++;\n  stack = [{\n    type: 'document',\n    children: []\n  }];\n  cov_5xm3ognsj().s[137]++;\n  currentToken = null;\n  cov_5xm3ognsj().s[138]++;\n  currentAttribute = null;\n  cov_5xm3ognsj().s[139]++;\n  currentTextNode = null;\n  var state = (cov_5xm3ognsj().s[140]++, data);\n  cov_5xm3ognsj().s[141]++;\n\n  var _iterator = _createForOfIteratorHelper(html),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      cov_5xm3ognsj().s[142]++;\n      state = state(c);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  cov_5xm3ognsj().s[143]++;\n  state = state(EOF);\n  cov_5xm3ognsj().s[144]++;\n  return stack[0];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlci5qcyJdLCJuYW1lcyI6WyJFT0YiLCJTeW1ib2wiLCJzdGFjayIsImN1cnJlbnRUb2tlbiIsImN1cnJlbnRBdHRyaWJ1dGUiLCJjdXJyZW50VGV4dE5vZGUiLCJlbWl0IiwidG9rZW4iLCJ0b3AiLCJsZW5ndGgiLCJ0eXBlIiwiZWxlbWVudCIsImNoaWxkcmVuIiwiYXR0cmlidXRlcyIsInRhZ05hbWUiLCJwIiwicHVzaCIsIm5hbWUiLCJ2YWx1ZSIsImlzU2VsZkNsb3NpbmciLCJFcnJvciIsImNvbnRlbnQiLCJkYXRhIiwiYyIsInRhZ09wZW4iLCJlbmRUYWdPcGVuIiwibWF0Y2giLCJiZWZvcmVBdHRyaWJ1dGVOYW1lIiwic2VsZkNsb3NpbmdTdGFydFRhZyIsImFmdGVyQXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWUiLCJiZWZvcmVBdHRyaWJ1dGVWYWx1ZSIsImRvdWJsZVF1b3RlZEF0dHJpYnV0ZVZhbHVlIiwic2luZ2xlUXVvdGVkQXR0cmlidXRlVmFsdWUiLCJVbnF1b3RlZEF0dHJpYnV0ZVZhbHVlIiwiYWZ0ZXJRdW90ZWRBdHRyaWJ1dGVWYWx1ZSIsInBhcnNlSFRNTCIsImh0bWwiLCJzdGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVZOzs7Ozs7Ozs7Ozs7Ozs7O0FBZlosSUFBTUEsR0FBRyw0QkFBR0MsTUFBTSxDQUFDLEtBQUQsQ0FBVCxDQUFUO0FBRUEsSUFBSUMsS0FBSjtBQUNBLElBQUlDLFlBQVksNEJBQUcsSUFBSCxDQUFoQjtBQUNBLElBQUlDLGdCQUFnQiw0QkFBRyxJQUFILENBQXBCO0FBQ0EsSUFBSUMsZUFBZSw0QkFBRyxJQUFILENBQW5COztBQUVBLFNBQVNDLElBQVQsQ0FBY0MsS0FBZCxFQUFxQjtBQUFBO0FBQ2pCLE1BQUlDLEdBQUcsNEJBQUdOLEtBQUssQ0FBQ0EsS0FBSyxDQUFDTyxNQUFOLEdBQWUsQ0FBaEIsQ0FBUixDQUFQO0FBRGlCOztBQUdqQixNQUFJRixLQUFLLENBQUNHLElBQU4sSUFBYyxVQUFsQixFQUE4QjtBQUFBO0FBQzFCLFFBQUlDLE9BQU8sNEJBQUc7QUFDVkQsTUFBQUEsSUFBSSxFQUFFLFNBREk7QUFFVkUsTUFBQUEsUUFBUSxFQUFFLEVBRkE7QUFHVkMsTUFBQUEsVUFBVSxFQUFFO0FBSEYsS0FBSCxDQUFYO0FBRDBCO0FBTzFCRixJQUFBQSxPQUFPLENBQUNHLE9BQVIsR0FBa0JQLEtBQUssQ0FBQ08sT0FBeEI7QUFQMEI7O0FBUzFCLFNBQUssSUFBSUMsQ0FBVCxJQUFjUixLQUFkLEVBQXFCO0FBQUE7O0FBQ2pCLFVBQUksNEJBQUFRLENBQUMsSUFBSSxNQUFMLGlDQUFlQSxDQUFDLElBQUksU0FBcEIsQ0FBSixFQUFtQztBQUFBO0FBQUE7QUFDL0JKLFFBQUFBLE9BQU8sQ0FBQ0UsVUFBUixDQUFtQkcsSUFBbkIsQ0FBd0I7QUFDcEJDLFVBQUFBLElBQUksRUFBRUYsQ0FEYztBQUVwQkcsVUFBQUEsS0FBSyxFQUFFWCxLQUFLLENBQUNRLENBQUQ7QUFGUSxTQUF4QjtBQUlILE9BTEQ7QUFBQTtBQUFBO0FBTUg7O0FBaEJ5QjtBQWtCMUJQLElBQUFBLEdBQUcsQ0FBQ0ksUUFBSixDQUFhSSxJQUFiLENBQWtCTCxPQUFsQixFQWxCMEIsQ0FtQjFCOztBQW5CMEI7O0FBcUIxQixRQUFJLENBQUNKLEtBQUssQ0FBQ1ksYUFBWCxFQUEwQjtBQUFBO0FBQUE7QUFDdEJqQixNQUFBQSxLQUFLLENBQUNjLElBQU4sQ0FBV0wsT0FBWDtBQUNILEtBRkQ7QUFBQTtBQUFBOztBQXJCMEI7QUF5QjFCTixJQUFBQSxlQUFlLEdBQUcsSUFBbEI7QUFDSCxHQTFCRCxNQTBCTztBQUFBO0FBQUE7O0FBQUEsUUFBSUUsS0FBSyxDQUFDRyxJQUFOLElBQWMsUUFBbEIsRUFBNEI7QUFBQTtBQUFBOztBQUMvQixVQUFJRixHQUFHLENBQUNNLE9BQUosSUFBZVAsS0FBSyxDQUFDTyxPQUF6QixFQUFrQztBQUFBO0FBQUE7QUFDOUIsY0FBTSxJQUFJTSxLQUFKLENBQVUsOEJBQVYsQ0FBTjtBQUNILE9BRkQ7QUFBQTtBQUFBOztBQUQrQjtBQUkvQmYsTUFBQUEsZUFBZSxHQUFHLElBQWxCO0FBQ0gsS0FMTSxNQUtBO0FBQUE7QUFBQTs7QUFBQSxVQUFJRSxLQUFLLENBQUNHLElBQU4sSUFBYyxNQUFsQixFQUEwQjtBQUFBO0FBQUE7O0FBQzdCLFlBQUlMLGVBQWUsSUFBSSxJQUF2QixFQUE2QjtBQUFBO0FBQUE7QUFDekJBLFVBQUFBLGVBQWUsR0FBRztBQUNkSyxZQUFBQSxJQUFJLEVBQUUsTUFEUTtBQUVkVyxZQUFBQSxPQUFPLEVBQUU7QUFGSyxXQUFsQjtBQUR5QjtBQUt6QmIsVUFBQUEsR0FBRyxDQUFDSSxRQUFKLENBQWFJLElBQWIsQ0FBa0JYLGVBQWxCO0FBQ0gsU0FORDtBQUFBO0FBQUE7O0FBRDZCO0FBUTdCQSxRQUFBQSxlQUFlLENBQUNnQixPQUFoQixJQUEyQmQsS0FBSyxDQUFDYyxPQUFqQztBQUNILE9BVE07QUFBQTtBQUFBO0FBU047QUFBQTtBQUNKOztBQUVELFNBQVNDLElBQVQsQ0FBY0MsQ0FBZCxFQUFpQjtBQUFBO0FBQUE7O0FBQ2IsTUFBSUEsQ0FBQyxLQUFLLEdBQVYsRUFBZTtBQUFBO0FBQUE7QUFDWCxXQUFPQyxPQUFQO0FBQ0gsR0FGRCxNQUVPO0FBQUE7QUFBQTs7QUFBQSxRQUFJRCxDQUFDLElBQUl2QixHQUFULEVBQWM7QUFBQTtBQUFBO0FBQ2pCTSxNQUFBQSxJQUFJLENBQUM7QUFDREksUUFBQUEsSUFBSSxFQUFFO0FBREwsT0FBRCxDQUFKO0FBRGlCO0FBSWpCO0FBQ0gsS0FMTSxNQUtBO0FBQUE7QUFBQTtBQUNISixNQUFBQSxJQUFJLENBQUM7QUFDREksUUFBQUEsSUFBSSxFQUFFLE1BREw7QUFFRFcsUUFBQUEsT0FBTyxFQUFFRTtBQUZSLE9BQUQsQ0FBSjtBQURHO0FBS0gsYUFBT0QsSUFBUDtBQUNIO0FBQUE7QUFDSjs7QUFFRCxTQUFTRSxPQUFULENBQWlCRCxDQUFqQixFQUFvQjtBQUFBO0FBQUE7O0FBQ2hCLE1BQUlBLENBQUMsS0FBSyxHQUFWLEVBQWU7QUFBQTtBQUFBO0FBQ1gsV0FBT0UsVUFBUDtBQUNILEdBRkQsTUFFTztBQUFBO0FBQUE7O0FBQUEsUUFBSUYsQ0FBQyxDQUFDRyxLQUFGLENBQVEsWUFBUixDQUFKLEVBQTJCO0FBQUE7QUFBQTtBQUM5QnZCLE1BQUFBLFlBQVksR0FBRztBQUNYTyxRQUFBQSxJQUFJLEVBQUUsVUFESztBQUVYSSxRQUFBQSxPQUFPLEVBQUU7QUFGRSxPQUFmO0FBRDhCO0FBSzlCLGFBQU9BLE9BQU8sQ0FBQ1MsQ0FBRCxDQUFkO0FBQ0gsS0FOTSxNQU1BO0FBQUE7QUFBQTtBQUNIakIsTUFBQUEsSUFBSSxDQUFDO0FBQ0RJLFFBQUFBLElBQUksRUFBRSxNQURMO0FBRURXLFFBQUFBLE9BQU8sRUFBRUU7QUFGUixPQUFELENBQUo7QUFERztBQUtILGFBQU9ELElBQVA7QUFDSDtBQUFBO0FBQ0o7O0FBRUQsU0FBU0csVUFBVCxDQUFvQkYsQ0FBcEIsRUFBdUI7QUFBQTtBQUFBOztBQUNuQixNQUFJQSxDQUFDLENBQUNHLEtBQUYsQ0FBUSxZQUFSLENBQUosRUFBMkI7QUFBQTtBQUFBO0FBQ3ZCdkIsSUFBQUEsWUFBWSxHQUFHO0FBQ1hPLE1BQUFBLElBQUksRUFBRSxRQURLO0FBRVhJLE1BQUFBLE9BQU8sRUFBRTtBQUZFLEtBQWY7QUFEdUI7QUFLdEIsV0FBT0EsT0FBTyxDQUFDUyxDQUFELENBQWQ7QUFDSixHQU5ELE1BTU87QUFBQTtBQUFBOztBQUFBLFFBQUlBLENBQUMsSUFBSSxHQUFULEVBQWM7QUFBQTtBQUVwQixLQUZNLE1BRUE7QUFBQTtBQUFBOztBQUFBLFVBQUlBLENBQUMsSUFBSXZCLEdBQVQsRUFBYztBQUFBO0FBRXBCLE9BRk0sTUFFQTtBQUFBO0FBRU47QUFBQTtBQUFBO0FBQ0o7O0FBRUQsU0FBU2MsT0FBVCxDQUFpQlMsQ0FBakIsRUFBb0I7QUFBQTtBQUFBOztBQUNoQixNQUFJQSxDQUFDLENBQUNHLEtBQUYsQ0FBUSxhQUFSLENBQUosRUFBNEI7QUFBQTtBQUFBO0FBQ3hCLFdBQU9DLG1CQUFQO0FBQ0gsR0FGRCxNQUVPO0FBQUE7QUFBQTs7QUFBQSxRQUFJSixDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFBQTtBQUNqQixhQUFPSyxtQkFBUDtBQUNILEtBRk0sTUFFQTtBQUFBO0FBQUE7O0FBQUEsVUFBSUwsQ0FBQyxDQUFDRyxLQUFGLENBQVEsU0FBUixDQUFKLEVBQXdCO0FBQUE7QUFBQTtBQUMzQnZCLFFBQUFBLFlBQVksQ0FBQ1csT0FBYixJQUF3QlMsQ0FBeEI7QUFEMkI7QUFFM0IsZUFBT1QsT0FBUDtBQUNILE9BSE0sTUFHQTtBQUFBO0FBQUE7O0FBQUEsWUFBSVMsQ0FBQyxJQUFJLEdBQVQsRUFBYztBQUFBO0FBQUE7QUFDakJqQixVQUFBQSxJQUFJLENBQUNILFlBQUQsQ0FBSjtBQURpQjtBQUVqQixpQkFBT21CLElBQVA7QUFDSCxTQUhNLE1BR0E7QUFBQTtBQUFBO0FBQ0huQixVQUFBQSxZQUFZLENBQUNXLE9BQWIsSUFBd0JTLENBQXhCO0FBREc7QUFFSCxpQkFBT1QsT0FBUDtBQUNIO0FBQUE7QUFBQTtBQUFBO0FBQ0osQyxDQUVEOzs7QUFDQSxTQUFTYSxtQkFBVCxDQUE2QkosQ0FBN0IsRUFBZ0M7QUFBQTtBQUFBOztBQUM1QixNQUFJQSxDQUFDLENBQUNHLEtBQUYsQ0FBUSxhQUFSLENBQUosRUFBNEI7QUFBQTtBQUFBO0FBQ3hCLFdBQU9DLG1CQUFQO0FBQ0gsR0FGRCxNQUVPO0FBQUE7QUFBQTs7QUFBQSxRQUFJLDZCQUFBSixDQUFDLElBQUksR0FBTCxrQ0FBWUEsQ0FBQyxJQUFJLEdBQWpCLGtDQUF3QkEsQ0FBQyxJQUFJdkIsR0FBN0IsQ0FBSixFQUFzQztBQUFBO0FBQUE7QUFDekMsYUFBTzZCLGtCQUFrQixDQUFDTixDQUFELENBQXpCO0FBQ0gsS0FGTSxNQUVBO0FBQUE7QUFBQTs7QUFBQSxVQUFJQSxDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFFcEIsT0FGTSxNQUVBO0FBQUE7QUFBQTtBQUNIbkIsUUFBQUEsZ0JBQWdCLEdBQUc7QUFDZmEsVUFBQUEsSUFBSSxFQUFFLEVBRFM7QUFFZkMsVUFBQUEsS0FBSyxFQUFFO0FBRlEsU0FBbkI7QUFERztBQUtILGVBQU9ZLGFBQWEsQ0FBQ1AsQ0FBRCxDQUFwQjtBQUNIO0FBQUE7QUFBQTtBQUNKOztBQUVELFNBQVNPLGFBQVQsQ0FBdUJQLENBQXZCLEVBQTBCO0FBQUE7QUFBQTs7QUFDdEIsTUFBSSw2QkFBQUEsQ0FBQyxDQUFDRyxLQUFGLENBQVEsYUFBUixtQ0FBMEJILENBQUMsSUFBSSxHQUEvQixrQ0FBc0NBLENBQUMsSUFBSSxHQUEzQyxrQ0FBa0RBLENBQUMsSUFBSXZCLEdBQXZELENBQUosRUFBZ0U7QUFBQTtBQUFBO0FBQzVELFdBQU82QixrQkFBa0IsQ0FBQ04sQ0FBRCxDQUF6QjtBQUNILEdBRkQsTUFFTztBQUFBO0FBQUE7O0FBQUEsUUFBSUEsQ0FBQyxJQUFJLEdBQVQsRUFBYztBQUFBO0FBQUE7QUFDakIsYUFBT1Esb0JBQVA7QUFDSCxLQUZNLE1BRUE7QUFBQTtBQUFBOztBQUFBLFVBQUlSLENBQUMsSUFBSSxJQUFULEVBQW1CO0FBQUE7QUFFekIsT0FGTSxNQUVBO0FBQUE7QUFBQTs7QUFBQSxZQUFJLDZCQUFBQSxDQUFDLElBQUksSUFBTCxrQ0FBYUEsQ0FBQyxJQUFJLEdBQWxCLGtDQUF5QkEsQ0FBQyxJQUFJLEdBQTlCLENBQUosRUFBdUM7QUFBQTtBQUU3QyxTQUZNLE1BRUE7QUFBQTtBQUFBO0FBQ0huQixVQUFBQSxnQkFBZ0IsQ0FBQ2EsSUFBakIsSUFBeUJNLENBQXpCO0FBREc7QUFFSCxpQkFBT08sYUFBUDtBQUNIO0FBQUE7QUFBQTtBQUFBO0FBQ0o7O0FBRUQsU0FBU0Msb0JBQVQsQ0FBOEJSLENBQTlCLEVBQWlDO0FBQUE7QUFBQTs7QUFDN0IsTUFBSSw2QkFBQUEsQ0FBQyxDQUFDRyxLQUFGLENBQVEsYUFBUixtQ0FBMEJILENBQUMsSUFBSSxHQUEvQixrQ0FBc0NBLENBQUMsSUFBSSxHQUEzQyxrQ0FBa0RBLENBQUMsSUFBSXZCLEdBQXZELENBQUosRUFBZ0U7QUFBQTtBQUFBO0FBQzVELFdBQU8rQixvQkFBUDtBQUNILEdBRkQsTUFFTztBQUFBO0FBQUE7O0FBQUEsUUFBSVIsQ0FBQyxJQUFJLElBQVQsRUFBZTtBQUFBO0FBQUE7QUFDbEIsYUFBT1MsMEJBQVA7QUFDSCxLQUZNLE1BRUE7QUFBQTtBQUFBOztBQUFBLFVBQUlULENBQUMsSUFBSSxJQUFULEVBQWU7QUFBQTtBQUFBO0FBQ2xCLGVBQU9VLDBCQUFQO0FBQ0gsT0FGTSxNQUVBO0FBQUE7QUFBQTs7QUFBQSxZQUFJVixDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFFcEIsU0FGTSxNQUVBO0FBQUE7QUFBQTtBQUNILGlCQUFPVyxzQkFBc0IsQ0FBQ1gsQ0FBRCxDQUE3QjtBQUNIO0FBQUE7QUFBQTtBQUFBO0FBQ0o7O0FBRUQsU0FBU1MsMEJBQVQsQ0FBb0NULENBQXBDLEVBQXVDO0FBQUE7QUFBQTs7QUFDbkMsTUFBSUEsQ0FBQyxJQUFJLElBQVQsRUFBZTtBQUFBO0FBQUE7QUFDWHBCLElBQUFBLFlBQVksQ0FBQ0MsZ0JBQWdCLENBQUNhLElBQWxCLENBQVosR0FBc0NiLGdCQUFnQixDQUFDYyxLQUF2RDtBQURXO0FBRVgsV0FBT2lCLHlCQUFQO0FBQ0gsR0FIRCxNQUdPO0FBQUE7QUFBQTs7QUFBQSxRQUFJWixDQUFDLElBQUksSUFBVCxFQUFtQjtBQUFBO0FBRXpCLEtBRk0sTUFFQTtBQUFBO0FBQUE7O0FBQUEsVUFBSUEsQ0FBQyxJQUFJdkIsR0FBVCxFQUFjO0FBQUE7QUFFcEIsT0FGTSxNQUVBO0FBQUE7QUFBQTtBQUNISSxRQUFBQSxnQkFBZ0IsQ0FBQ2MsS0FBakIsSUFBMEJLLENBQTFCO0FBREc7QUFFSCxlQUFPUywwQkFBUDtBQUNIO0FBQUE7QUFBQTtBQUNKOztBQUVELFNBQVNHLHlCQUFULENBQW1DWixDQUFuQyxFQUFzQztBQUFBO0FBQUE7O0FBQ2xDLE1BQUlBLENBQUMsQ0FBQ0csS0FBRixDQUFRLGFBQVIsQ0FBSixFQUE0QjtBQUFBO0FBQUE7QUFDeEIsV0FBT0MsbUJBQVA7QUFDSCxHQUZELE1BRU87QUFBQTtBQUFBOztBQUFBLFFBQUlKLENBQUMsSUFBSSxHQUFULEVBQWM7QUFBQTtBQUFBO0FBQ2pCLGFBQU9LLG1CQUFQO0FBQ0gsS0FGTSxNQUVBO0FBQUE7QUFBQTs7QUFBQSxVQUFJTCxDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFBQTtBQUNqQnBCLFFBQUFBLFlBQVksQ0FBQ0MsZ0JBQWdCLENBQUNhLElBQWxCLENBQVosR0FBc0NiLGdCQUFnQixDQUFDYyxLQUF2RDtBQURpQjtBQUVqQlosUUFBQUEsSUFBSSxDQUFDSCxZQUFELENBQUo7QUFGaUI7QUFHakIsZUFBT21CLElBQVA7QUFDSCxPQUpNLE1BSUE7QUFBQTtBQUFBOztBQUFBLFlBQUlDLENBQUMsSUFBSXZCLEdBQVQsRUFBYztBQUFBO0FBRXBCLFNBRk0sTUFFQTtBQUFBO0FBQUE7QUFDSCxnQkFBTSxJQUFJb0IsS0FBSixDQUFVLDJCQUEyQkcsQ0FBM0IsR0FBK0IsSUFBekMsQ0FBTjtBQUNIO0FBQUE7QUFBQTtBQUFBO0FBQ0o7O0FBRUQsU0FBU1UsMEJBQVQsQ0FBb0NWLENBQXBDLEVBQXVDO0FBQUE7QUFBQTs7QUFDbkMsTUFBSUEsQ0FBQyxJQUFJLElBQVQsRUFBZTtBQUFBO0FBQUE7QUFDWHBCLElBQUFBLFlBQVksQ0FBQ0MsZ0JBQWdCLENBQUNhLElBQWxCLENBQVosR0FBc0NiLGdCQUFnQixDQUFDYyxLQUF2RDtBQURXO0FBRVgsV0FBT2lCLHlCQUFQO0FBQ0gsR0FIRCxNQUdPO0FBQUE7QUFBQTs7QUFBQSxRQUFJWixDQUFDLElBQUksSUFBVCxFQUFtQjtBQUFBO0FBRXpCLEtBRk0sTUFFQTtBQUFBO0FBQUE7O0FBQUEsVUFBSUEsQ0FBQyxJQUFJdkIsR0FBVCxFQUFjO0FBQUE7QUFFcEIsT0FGTSxNQUVBO0FBQUE7QUFBQTtBQUNISSxRQUFBQSxnQkFBZ0IsQ0FBQ2MsS0FBakIsSUFBMEJLLENBQTFCO0FBREc7QUFFSCxlQUFPVSwwQkFBUDtBQUNIO0FBQUE7QUFBQTtBQUNKOztBQUVELFNBQVNDLHNCQUFULENBQWdDWCxDQUFoQyxFQUFtQztBQUFBO0FBQUE7O0FBQy9CLE1BQUlBLENBQUMsQ0FBQ0csS0FBRixDQUFRLGFBQVIsQ0FBSixFQUE0QjtBQUFBO0FBQUE7QUFDeEJ2QixJQUFBQSxZQUFZLENBQUNDLGdCQUFnQixDQUFDYSxJQUFsQixDQUFaLEdBQXNDYixnQkFBZ0IsQ0FBQ2MsS0FBdkQ7QUFEd0I7QUFFeEIsV0FBT1MsbUJBQVA7QUFDSCxHQUhELE1BR087QUFBQTtBQUFBOztBQUFBLFFBQUlKLENBQUMsSUFBSSxHQUFULEVBQWM7QUFBQTtBQUFBO0FBQ2pCcEIsTUFBQUEsWUFBWSxDQUFDQyxnQkFBZ0IsQ0FBQ2EsSUFBbEIsQ0FBWixHQUFzQ2IsZ0JBQWdCLENBQUNjLEtBQXZEO0FBRGlCO0FBRWpCLGFBQU9VLG1CQUFQO0FBQ0gsS0FITSxNQUdBO0FBQUE7QUFBQTs7QUFBQSxVQUFJTCxDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFBQTtBQUNqQnBCLFFBQUFBLFlBQVksQ0FBQ0MsZ0JBQWdCLENBQUNhLElBQWxCLENBQVosR0FBc0NiLGdCQUFnQixDQUFDYyxLQUF2RDtBQURpQjtBQUVqQlosUUFBQUEsSUFBSSxDQUFDSCxZQUFELENBQUo7QUFGaUI7QUFHakIsZUFBT21CLElBQVA7QUFDSCxPQUpNLE1BSUE7QUFBQTtBQUFBOztBQUFBLFlBQUlDLENBQUMsSUFBSSxJQUFULEVBQW1CO0FBQUE7QUFFekIsU0FGTSxNQUVBO0FBQUE7QUFBQTs7QUFBQSxjQUFJLDZCQUFBQSxDQUFDLElBQUksSUFBTCxrQ0FBYUEsQ0FBQyxJQUFJLEdBQWxCLGtDQUF5QkEsQ0FBQyxJQUFJLEdBQTlCLGtDQUFxQ0EsQ0FBQyxJQUFJLEdBQTFDLGtDQUFpREEsQ0FBQyxJQUFJLEdBQXRELENBQUosRUFBK0Q7QUFBQTtBQUVyRSxXQUZNLE1BRUE7QUFBQTtBQUFBOztBQUFBLGdCQUFJQSxDQUFDLElBQUl2QixHQUFULEVBQWM7QUFBQTtBQUVwQixhQUZNLE1BRUE7QUFBQTtBQUFBO0FBQ0hJLGNBQUFBLGdCQUFnQixDQUFDYyxLQUFqQixJQUEwQkssQ0FBMUI7QUFERztBQUVILHFCQUFPVyxzQkFBUDtBQUNIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNKOztBQUVELFNBQVNMLGtCQUFULENBQTRCTixDQUE1QixFQUErQjtBQUFBO0FBQUE7O0FBQzNCLE1BQUlBLENBQUMsQ0FBQ0csS0FBRixDQUFRLGFBQVIsQ0FBSixFQUE0QjtBQUFBO0FBQUE7QUFDeEIsV0FBT0csa0JBQVA7QUFDSCxHQUZELE1BRU87QUFBQTtBQUFBOztBQUFBLFFBQUlOLENBQUMsSUFBSSxHQUFULEVBQWM7QUFBQTtBQUFBO0FBQ2pCLGFBQU9LLG1CQUFQO0FBQ0gsS0FGTSxNQUVBO0FBQUE7QUFBQTs7QUFBQSxVQUFJTCxDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFBQTtBQUNqQixlQUFPUSxvQkFBUDtBQUNILE9BRk0sTUFFQTtBQUFBO0FBQUE7O0FBQUEsWUFBSVIsQ0FBQyxJQUFJLEdBQVQsRUFBYztBQUFBO0FBQUE7QUFDakJwQixVQUFBQSxZQUFZLENBQUNDLGdCQUFnQixDQUFDYSxJQUFsQixDQUFaLEdBQXNDYixnQkFBZ0IsQ0FBQ2MsS0FBdkQ7QUFEaUI7QUFFakJaLFVBQUFBLElBQUksQ0FBQ0gsWUFBRCxDQUFKO0FBRmlCO0FBR2pCLGlCQUFPbUIsSUFBUDtBQUNILFNBSk0sTUFJQTtBQUFBO0FBQUE7O0FBQUEsY0FBSUMsQ0FBQyxJQUFJdkIsR0FBVCxFQUFjO0FBQUE7QUFFcEIsV0FGTSxNQUVBO0FBQUE7QUFBQTtBQUNIRyxZQUFBQSxZQUFZLENBQUNDLGdCQUFnQixDQUFDYSxJQUFsQixDQUFaLEdBQXNDYixnQkFBZ0IsQ0FBQ2MsS0FBdkQ7QUFERztBQUVIZCxZQUFBQSxnQkFBZ0IsR0FBRztBQUNmYSxjQUFBQSxJQUFJLEVBQUUsRUFEUztBQUVmQyxjQUFBQSxLQUFLLEVBQUU7QUFGUSxhQUFuQjtBQUZHO0FBTUgsbUJBQU9ZLGFBQWEsQ0FBQ1AsQ0FBRCxDQUFwQjtBQUNIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDSjs7QUFFRCxTQUFTSyxtQkFBVCxDQUE2QkwsQ0FBN0IsRUFBZ0M7QUFBQTtBQUFBOztBQUM1QixNQUFJQSxDQUFDLElBQUksR0FBVCxFQUFjO0FBQUE7QUFBQTtBQUNWcEIsSUFBQUEsWUFBWSxDQUFDZ0IsYUFBYixHQUE2QixJQUE3QjtBQURVO0FBRVZiLElBQUFBLElBQUksQ0FBQ0gsWUFBRCxDQUFKO0FBRlU7QUFHVixXQUFPbUIsSUFBUDtBQUNILEdBSkQsTUFJTztBQUFBO0FBQUE7O0FBQUEsUUFBSUMsQ0FBQyxJQUFJLEtBQVQsRUFBZ0I7QUFBQTtBQUV0QixLQUZNLE1BRUE7QUFBQTtBQUVOO0FBQUE7QUFDSjs7QUFFTSxTQUFTYSxTQUFULENBQW1CQyxJQUFuQixFQUF5QjtBQUFBO0FBQUE7QUFFNUJuQyxFQUFBQSxLQUFLLEdBQUcsQ0FBQztBQUFFUSxJQUFBQSxJQUFJLEVBQUUsVUFBUjtBQUFvQkUsSUFBQUEsUUFBUSxFQUFFO0FBQTlCLEdBQUQsQ0FBUjtBQUY0QjtBQUc1QlQsRUFBQUEsWUFBWSxHQUFHLElBQWY7QUFINEI7QUFJNUJDLEVBQUFBLGdCQUFnQixHQUFHLElBQW5CO0FBSjRCO0FBSzVCQyxFQUFBQSxlQUFlLEdBQUcsSUFBbEI7QUFFQSxNQUFJaUMsS0FBSyw4QkFBR2hCLElBQUgsQ0FBVDtBQVA0Qjs7QUFBQSw2Q0FRZGUsSUFSYztBQUFBOztBQUFBO0FBUTVCLHdEQUFvQjtBQUFBLFVBQVhkLENBQVc7QUFBQTtBQUNoQmUsTUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUNmLENBQUQsQ0FBYjtBQUNIO0FBVjJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFXNUJlLEVBQUFBLEtBQUssR0FBR0EsS0FBSyxDQUFDdEMsR0FBRCxDQUFiO0FBWDRCO0FBWTVCLFNBQU9FLEtBQUssQ0FBQyxDQUFELENBQVo7QUFDSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbW94eW5pbmphL0dyZWVuVGVhLUxlbW9uL3dpbnRlciBKc+ivvueoiy9XZWVrLTE3L3Rlc3QtZGVtby9odG1sLXBhcnNlci9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRU9GID0gU3ltYm9sKCdFT0YnKTtcblxubGV0IHN0YWNrO1xubGV0IGN1cnJlbnRUb2tlbiA9IG51bGw7XG5sZXQgY3VycmVudEF0dHJpYnV0ZSA9IG51bGw7XG5sZXQgY3VycmVudFRleHROb2RlID0gbnVsbDtcblxuZnVuY3Rpb24gZW1pdCh0b2tlbikge1xuICAgIGxldCB0b3AgPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXVxuXG4gICAgaWYgKHRva2VuLnR5cGUgPT0gJ3N0YXJ0VGFnJykge1xuICAgICAgICBsZXQgZWxlbWVudCA9IHtcbiAgICAgICAgICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtdXG4gICAgICAgIH1cblxuICAgICAgICBlbGVtZW50LnRhZ05hbWUgPSB0b2tlbi50YWdOYW1lXG5cbiAgICAgICAgZm9yIChsZXQgcCBpbiB0b2tlbikge1xuICAgICAgICAgICAgaWYgKHAgIT0gJ3R5cGUnICYmIHAgIT0gJ3RhZ05hbWUnKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5hdHRyaWJ1dGVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBwLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdG9rZW5bcF1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdG9wLmNoaWxkcmVuLnB1c2goZWxlbWVudClcbiAgICAgICAgLy8gZWxlbWVudC5wYXJlbnQgPSB0b3BcblxuICAgICAgICBpZiAoIXRva2VuLmlzU2VsZkNsb3NpbmcpIHtcbiAgICAgICAgICAgIHN0YWNrLnB1c2goZWxlbWVudClcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY3VycmVudFRleHROb2RlID0gbnVsbFxuICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PSAnZW5kVGFnJykge1xuICAgICAgICBpZiAodG9wLnRhZ05hbWUgIT0gdG9rZW4udGFnTmFtZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGFnIHN0YXJ0IGVuZCBkb2Vzbid0IG1hdGNoIVwiKVxuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnRUZXh0Tm9kZSA9IG51bGxcbiAgICB9IGVsc2UgaWYgKHRva2VuLnR5cGUgPT0gJ3RleHQnKSB7XG4gICAgICAgIGlmIChjdXJyZW50VGV4dE5vZGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgY3VycmVudFRleHROb2RlID0ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdG9wLmNoaWxkcmVuLnB1c2goY3VycmVudFRleHROb2RlKVxuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnRUZXh0Tm9kZS5jb250ZW50ICs9IHRva2VuLmNvbnRlbnRcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRhdGEoYykge1xuICAgIGlmIChjID09PSBcIjxcIikge1xuICAgICAgICByZXR1cm4gdGFnT3BlbjtcbiAgICB9IGVsc2UgaWYgKGMgPT0gRU9GKSB7XG4gICAgICAgIGVtaXQoe1xuICAgICAgICAgICAgdHlwZTogJ0VPRidcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9IGVsc2Uge1xuICAgICAgICBlbWl0KHtcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGNcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkYXRhXG4gICAgfVxufVxuXG5mdW5jdGlvbiB0YWdPcGVuKGMpIHtcbiAgICBpZiAoYyA9PT0gXCIvXCIpIHtcbiAgICAgICAgcmV0dXJuIGVuZFRhZ09wZW5cbiAgICB9IGVsc2UgaWYgKGMubWF0Y2goL15bYS16QS1aXSQvKSkge1xuICAgICAgICBjdXJyZW50VG9rZW4gPSB7XG4gICAgICAgICAgICB0eXBlOiBcInN0YXJ0VGFnXCIsXG4gICAgICAgICAgICB0YWdOYW1lOiBcIlwiXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRhZ05hbWUoYylcbiAgICB9IGVsc2Uge1xuICAgICAgICBlbWl0KHtcbiAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgY29udGVudDogYyxcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGRhdGFcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGVuZFRhZ09wZW4oYykge1xuICAgIGlmIChjLm1hdGNoKC9eW2EtekEtWl0kLykpIHtcbiAgICAgICAgY3VycmVudFRva2VuID0ge1xuICAgICAgICAgICAgdHlwZTogXCJlbmRUYWdcIixcbiAgICAgICAgICAgIHRhZ05hbWU6IFwiXCJcbiAgICAgICAgfVxuICAgICAgICAgcmV0dXJuIHRhZ05hbWUoYylcbiAgICB9IGVsc2UgaWYgKGMgPT0gJz4nKSB7XG5cbiAgICB9IGVsc2UgaWYgKGMgPT0gRU9GKSB7XG5cbiAgICB9IGVsc2Uge1xuXG4gICAgfVxufVxuXG5mdW5jdGlvbiB0YWdOYW1lKGMpIHtcbiAgICBpZiAoYy5tYXRjaCgvXltcXHRcXG5cXGYgXSQvKSkge1xuICAgICAgICByZXR1cm4gYmVmb3JlQXR0cmlidXRlTmFtZVxuICAgIH0gZWxzZSBpZiAoYyA9PSBcIi9cIikge1xuICAgICAgICByZXR1cm4gc2VsZkNsb3NpbmdTdGFydFRhZ1xuICAgIH0gZWxzZSBpZiAoYy5tYXRjaCgvXltBLVpdJC8pKSB7XG4gICAgICAgIGN1cnJlbnRUb2tlbi50YWdOYW1lICs9IGNcbiAgICAgICAgcmV0dXJuIHRhZ05hbWVcbiAgICB9IGVsc2UgaWYgKGMgPT0gXCI+XCIpIHtcbiAgICAgICAgZW1pdChjdXJyZW50VG9rZW4pO1xuICAgICAgICByZXR1cm4gZGF0YVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnRUb2tlbi50YWdOYW1lICs9IGNcbiAgICAgICAgcmV0dXJuIHRhZ05hbWVcbiAgICB9XG59XG5cbi8vIOWkhOeQhuWxnuaAp1xuZnVuY3Rpb24gYmVmb3JlQXR0cmlidXRlTmFtZShjKSB7XG4gICAgaWYgKGMubWF0Y2goL15bXFx0XFxuXFxmIF0kLykpIHtcbiAgICAgICAgcmV0dXJuIGJlZm9yZUF0dHJpYnV0ZU5hbWVcbiAgICB9IGVsc2UgaWYgKGMgPT0gXCIvXCIgfHwgYyA9PSBcIj5cIiB8fCBjID09IEVPRikge1xuICAgICAgICByZXR1cm4gYWZ0ZXJBdHRyaWJ1dGVOYW1lKGMpXG4gICAgfSBlbHNlIGlmIChjID09IFwiPVwiKSB7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50QXR0cmlidXRlID0ge1xuICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZU5hbWUoYylcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGF0dHJpYnV0ZU5hbWUoYykge1xuICAgIGlmIChjLm1hdGNoKC9eW1xcdFxcblxcZiBdJC8pIHx8IGMgPT0gXCIvXCIgfHwgYyA9PSBcIj5cIiB8fCBjID09IEVPRikge1xuICAgICAgICByZXR1cm4gYWZ0ZXJBdHRyaWJ1dGVOYW1lKGMpXG4gICAgfSBlbHNlIGlmIChjID09IFwiPVwiKSB7XG4gICAgICAgIHJldHVybiBiZWZvcmVBdHRyaWJ1dGVWYWx1ZVxuICAgIH0gZWxzZSBpZiAoYyA9PSBcIlxcdTAwMDBcIikge1xuXG4gICAgfSBlbHNlIGlmIChjID09IFwiXFxcIlwiIHx8IGMgPT0gXCInXCIgfHwgYyA9PSBcIjxcIikge1xuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudEF0dHJpYnV0ZS5uYW1lICs9IGNcbiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZU5hbWVcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGJlZm9yZUF0dHJpYnV0ZVZhbHVlKGMpIHtcbiAgICBpZiAoYy5tYXRjaCgvXltcXHRcXG5cXGYgXSQvKSB8fCBjID09IFwiL1wiIHx8IGMgPT0gXCI+XCIgfHwgYyA9PSBFT0YpIHtcbiAgICAgICAgcmV0dXJuIGJlZm9yZUF0dHJpYnV0ZVZhbHVlXG4gICAgfSBlbHNlIGlmIChjID09IFwiXFxcIlwiKSB7XG4gICAgICAgIHJldHVybiBkb3VibGVRdW90ZWRBdHRyaWJ1dGVWYWx1ZVxuICAgIH0gZWxzZSBpZiAoYyA9PSBcIlxcJ1wiKSB7XG4gICAgICAgIHJldHVybiBzaW5nbGVRdW90ZWRBdHRyaWJ1dGVWYWx1ZVxuICAgIH0gZWxzZSBpZiAoYyA9PSAnPicpIHtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBVbnF1b3RlZEF0dHJpYnV0ZVZhbHVlKGMpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBkb3VibGVRdW90ZWRBdHRyaWJ1dGVWYWx1ZShjKSB7XG4gICAgaWYgKGMgPT0gXCJcXFwiXCIpIHtcbiAgICAgICAgY3VycmVudFRva2VuW2N1cnJlbnRBdHRyaWJ1dGUubmFtZV0gPSBjdXJyZW50QXR0cmlidXRlLnZhbHVlXG4gICAgICAgIHJldHVybiBhZnRlclF1b3RlZEF0dHJpYnV0ZVZhbHVlXG4gICAgfSBlbHNlIGlmIChjID09ICdcXHUwMDAwJykge1xuXG4gICAgfSBlbHNlIGlmIChjID09IEVPRikge1xuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudEF0dHJpYnV0ZS52YWx1ZSArPSBjXG4gICAgICAgIHJldHVybiBkb3VibGVRdW90ZWRBdHRyaWJ1dGVWYWx1ZVxuICAgIH1cbn1cblxuZnVuY3Rpb24gYWZ0ZXJRdW90ZWRBdHRyaWJ1dGVWYWx1ZShjKSB7XG4gICAgaWYgKGMubWF0Y2goL15bXFx0XFxuXFxmIF0kLykpIHtcbiAgICAgICAgcmV0dXJuIGJlZm9yZUF0dHJpYnV0ZU5hbWVcbiAgICB9IGVsc2UgaWYgKGMgPT0gXCIvXCIpIHtcbiAgICAgICAgcmV0dXJuIHNlbGZDbG9zaW5nU3RhcnRUYWdcbiAgICB9IGVsc2UgaWYgKGMgPT0gXCI+XCIpIHtcbiAgICAgICAgY3VycmVudFRva2VuW2N1cnJlbnRBdHRyaWJ1dGUubmFtZV0gPSBjdXJyZW50QXR0cmlidXRlLnZhbHVlXG4gICAgICAgIGVtaXQoY3VycmVudFRva2VuKVxuICAgICAgICByZXR1cm4gZGF0YVxuICAgIH0gZWxzZSBpZiAoYyA9PSBFT0YpIHtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5leHBlY3RlZCBjaGFyYXRlciBcXFwiJyArIGMgKyAnXFxcIicpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzaW5nbGVRdW90ZWRBdHRyaWJ1dGVWYWx1ZShjKSB7XG4gICAgaWYgKGMgPT0gXCJcXCdcIikge1xuICAgICAgICBjdXJyZW50VG9rZW5bY3VycmVudEF0dHJpYnV0ZS5uYW1lXSA9IGN1cnJlbnRBdHRyaWJ1dGUudmFsdWVcbiAgICAgICAgcmV0dXJuIGFmdGVyUXVvdGVkQXR0cmlidXRlVmFsdWVcbiAgICB9IGVsc2UgaWYgKGMgPT0gJ1xcdTAwMDAnKSB7XG5cbiAgICB9IGVsc2UgaWYgKGMgPT0gRU9GKSB7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50QXR0cmlidXRlLnZhbHVlICs9IGNcbiAgICAgICAgcmV0dXJuIHNpbmdsZVF1b3RlZEF0dHJpYnV0ZVZhbHVlXG4gICAgfVxufVxuXG5mdW5jdGlvbiBVbnF1b3RlZEF0dHJpYnV0ZVZhbHVlKGMpIHtcbiAgICBpZiAoYy5tYXRjaCgvXltcXHRcXG5cXGYgXSQvKSkge1xuICAgICAgICBjdXJyZW50VG9rZW5bY3VycmVudEF0dHJpYnV0ZS5uYW1lXSA9IGN1cnJlbnRBdHRyaWJ1dGUudmFsdWVcbiAgICAgICAgcmV0dXJuIGJlZm9yZUF0dHJpYnV0ZU5hbWVcbiAgICB9IGVsc2UgaWYgKGMgPT0gXCIvXCIpIHtcbiAgICAgICAgY3VycmVudFRva2VuW2N1cnJlbnRBdHRyaWJ1dGUubmFtZV0gPSBjdXJyZW50QXR0cmlidXRlLnZhbHVlXG4gICAgICAgIHJldHVybiBzZWxmQ2xvc2luZ1N0YXJ0VGFnXG4gICAgfSBlbHNlIGlmIChjID09IFwiPlwiKSB7XG4gICAgICAgIGN1cnJlbnRUb2tlbltjdXJyZW50QXR0cmlidXRlLm5hbWVdID0gY3VycmVudEF0dHJpYnV0ZS52YWx1ZVxuICAgICAgICBlbWl0KGN1cnJlbnRUb2tlbilcbiAgICAgICAgcmV0dXJuIGRhdGFcbiAgICB9IGVsc2UgaWYgKGMgPT0gJ1xcdTAwMDAnKSB7XG5cbiAgICB9IGVsc2UgaWYgKGMgPT0gJ1xcXCInIHx8IGMgPT0gXCInXCIgfHwgYyA9PSAnPCcgfHwgYyA9PSAnPScgfHwgYyA9PSAnYCcpIHtcblxuICAgIH0gZWxzZSBpZiAoYyA9PSBFT0YpIHtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnRBdHRyaWJ1dGUudmFsdWUgKz0gY1xuICAgICAgICByZXR1cm4gVW5xdW90ZWRBdHRyaWJ1dGVWYWx1ZVxuICAgIH1cbn1cblxuZnVuY3Rpb24gYWZ0ZXJBdHRyaWJ1dGVOYW1lKGMpIHtcbiAgICBpZiAoYy5tYXRjaCgvXltcXHRcXG5cXGYgXSQvKSkge1xuICAgICAgICByZXR1cm4gYWZ0ZXJBdHRyaWJ1dGVOYW1lXG4gICAgfSBlbHNlIGlmIChjID09IFwiL1wiKSB7XG4gICAgICAgIHJldHVybiBzZWxmQ2xvc2luZ1N0YXJ0VGFnXG4gICAgfSBlbHNlIGlmIChjID09IFwiPVwiKSB7XG4gICAgICAgIHJldHVybiBiZWZvcmVBdHRyaWJ1dGVWYWx1ZVxuICAgIH0gZWxzZSBpZiAoYyA9PSBcIj5cIikge1xuICAgICAgICBjdXJyZW50VG9rZW5bY3VycmVudEF0dHJpYnV0ZS5uYW1lXSA9IGN1cnJlbnRBdHRyaWJ1dGUudmFsdWVcbiAgICAgICAgZW1pdChjdXJyZW50VG9rZW4pXG4gICAgICAgIHJldHVybiBkYXRhXG4gICAgfSBlbHNlIGlmIChjID09IEVPRikge1xuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudFRva2VuW2N1cnJlbnRBdHRyaWJ1dGUubmFtZV0gPSBjdXJyZW50QXR0cmlidXRlLnZhbHVlXG4gICAgICAgIGN1cnJlbnRBdHRyaWJ1dGUgPSB7XG4gICAgICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgICAgIHZhbHVlOiAnJ1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhdHRyaWJ1dGVOYW1lKGMpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzZWxmQ2xvc2luZ1N0YXJ0VGFnKGMpIHtcbiAgICBpZiAoYyA9PSAnPicpIHtcbiAgICAgICAgY3VycmVudFRva2VuLmlzU2VsZkNsb3NpbmcgPSB0cnVlXG4gICAgICAgIGVtaXQoY3VycmVudFRva2VuKVxuICAgICAgICByZXR1cm4gZGF0YVxuICAgIH0gZWxzZSBpZiAoYyA9PSAnRU9GJykge1xuXG4gICAgfSBlbHNlIHtcblxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSFRNTChodG1sKSB7XG4gICAgXG4gICAgc3RhY2sgPSBbeyB0eXBlOiAnZG9jdW1lbnQnLCBjaGlsZHJlbjogW10gfV07XG4gICAgY3VycmVudFRva2VuID0gbnVsbDtcbiAgICBjdXJyZW50QXR0cmlidXRlID0gbnVsbDtcbiAgICBjdXJyZW50VGV4dE5vZGUgPSBudWxsO1xuICAgIFxuICAgIGxldCBzdGF0ZSA9IGRhdGE7XG4gICAgZm9yIChsZXQgYyBvZiBodG1sKSB7XG4gICAgICAgIHN0YXRlID0gc3RhdGUoYyk7XG4gICAgfVxuICAgIHN0YXRlID0gc3RhdGUoRU9GKTtcbiAgICByZXR1cm4gc3RhY2tbMF1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "parser.js"
      ],
      "names": [
        "EOF",
        "Symbol",
        "stack",
        "currentToken",
        "currentAttribute",
        "currentTextNode",
        "emit",
        "token",
        "top",
        "length",
        "type",
        "element",
        "children",
        "attributes",
        "tagName",
        "p",
        "push",
        "name",
        "value",
        "isSelfClosing",
        "Error",
        "content",
        "data",
        "c",
        "tagOpen",
        "endTagOpen",
        "match",
        "beforeAttributeName",
        "selfClosingStartTag",
        "afterAttributeName",
        "attributeName",
        "beforeAttributeValue",
        "doubleQuotedAttributeValue",
        "singleQuotedAttributeValue",
        "UnquotedAttributeValue",
        "afterQuotedAttributeValue",
        "parseHTML",
        "html",
        "state"
      ],
      "mappingseY;;;;;;;;;;;;;;;;AAfZ,IAAMA,GAAG,4BAAGC,MAAM,CAAC,KAAD,CAAT,CAAT;AAEA,IAAIC,KAAJ;AACA,IAAIC,YAAY,4BAAG,IAAH,CAAhB;AACA,IAAIC,gBAAgB,4BAAG,IAAH,CAApB;AACA,IAAIC,eAAe,4BAAG,IAAH,CAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;AACjB,MAAIC,GAAG,4BAAGN,KAAK,CAACA,KAAK,CAACO,MAAN,GAAe,CAAhB,CAAR,CAAP;AADiB;;AAGjB,MAAIF,KAAK,CAACG,IAAN,IAAc,UAAlB,EAA8B;AAAA;AAC1B,QAAIC,OAAO,4BAAG;AACVD,MAAAA,IAAI,EAAE,SADI;AAEVE,MAAAA,QAAQ,EAAE,EAFA;AAGVC,MAAAA,UAAU,EAAE;AAHF,KAAH,CAAX;AAD0B;AAO1BF,IAAAA,OAAO,CAACG,OAAR,GAAkBP,KAAK,CAACO,OAAxB;AAP0B;;AAS1B,SAAK,IAAIC,CAAT,IAAcR,KAAd,EAAqB;AAAA;;AACjB,UAAI,4BAAAQ,CAAC,IAAI,MAAL,iCAAeA,CAAC,IAAI,SAApB,CAAJ,EAAmC;AAAA;AAAA;AAC/BJ,QAAAA,OAAO,CAACE,UAAR,CAAmBG,IAAnB,CAAwB;AACpBC,UAAAA,IAAI,EAAEF,CADc;AAEpBG,UAAAA,KAAK,EAAEX,KAAK,CAACQ,CAAD;AAFQ,SAAxB;AAIH,OALD;AAAA;AAAA;AAMH;;AAhByB;AAkB1BP,IAAAA,GAAG,CAACI,QAAJ,CAAaI,IAAb,CAAkBL,OAAlB,EAlB0B,CAmB1B;;AAnB0B;;AAqB1B,QAAI,CAACJ,KAAK,CAACY,aAAX,EAA0B;AAAA;AAAA;AACtBjB,MAAAA,KAAK,CAACc,IAAN,CAAWL,OAAX;AACH,KAFD;AAAA;AAAA;;AArB0B;AAyB1BN,IAAAA,eAAe,GAAG,IAAlB;AACH,GA1BD,MA0BO;AAAA;AAAA;;AAAA,QAAIE,KAAK,CAACG,IAAN,IAAc,QAAlB,EAA4B;AAAA;AAAA;;AAC/B,UAAIF,GAAG,CAACM,OAAJ,IAAeP,KAAK,CAACO,OAAzB,EAAkC;AAAA;AAAA;AAC9B,cAAM,IAAIM,KAAJ,CAAU,8BAAV,CAAN;AACH,OAFD;AAAA;AAAA;;AAD+B;AAI/Bf,MAAAA,eAAe,GAAG,IAAlB;AACH,KALM,MAKA;AAAA;AAAA;;AAAA,UAAIE,KAAK,CAACG,IAAN,IAAc,MAAlB,EAA0B;AAAA;AAAA;;AAC7B,YAAIL,eAAe,IAAI,IAAvB,EAA6B;AAAA;AAAA;AACzBA,UAAAA,eAAe,GAAG;AACdK,YAAAA,IAAI,EAAE,MADQ;AAEdW,YAAAA,OAAO,EAAE;AAFK,WAAlB;AADyB;AAKzBb,UAAAA,GAAG,CAACI,QAAJ,CAAaI,IAAb,CAAkBX,eAAlB;AACH,SAND;AAAA;AAAA;;AAD6B;AAQ7BA,QAAAA,eAAe,CAACgB,OAAhB,IAA2Bd,KAAK,CAACc,OAAjC;AACH,OATM;AAAA;AAAA;AASN;AAAA;AACJ;;AAED,SAASC,IAAT,CAAcC,CAAd,EAAiB;AAAA;AAAA;;AACb,MAAIA,CAAC,KAAK,GAAV,EAAe;AAAA;AAAA;AACX,WAAOC,OAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAID,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAAA;AACjBM,MAAAA,IAAI,CAAC;AACDI,QAAAA,IAAI,EAAE;AADL,OAAD,CAAJ;AADiB;AAIjB;AACH,KALM,MAKA;AAAA;AAAA;AACHJ,MAAAA,IAAI,CAAC;AACDI,QAAAA,IAAI,EAAE,MADL;AAEDW,QAAAA,OAAO,EAAEE;AAFR,OAAD,CAAJ;AADG;AAKH,aAAOD,IAAP;AACH;AAAA;AACJ;;AAED,SAASE,OAAT,CAAiBD,CAAjB,EAAoB;AAAA;AAAA;;AAChB,MAAIA,CAAC,KAAK,GAAV,EAAe;AAAA;AAAA;AACX,WAAOE,UAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAIF,CAAC,CAACG,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AAAA;AAAA;AAC9BvB,MAAAA,YAAY,GAAG;AACXO,QAAAA,IAAI,EAAE,UADK;AAEXI,QAAAA,OAAO,EAAE;AAFE,OAAf;AAD8B;AAK9B,aAAOA,OAAO,CAACS,CAAD,CAAd;AACH,KANM,MAMA;AAAA;AAAA;AACHjB,MAAAA,IAAI,CAAC;AACDI,QAAAA,IAAI,EAAE,MADL;AAEDW,QAAAA,OAAO,EAAEE;AAFR,OAAD,CAAJ;AADG;AAKH,aAAOD,IAAP;AACH;AAAA;AACJ;;AAED,SAASG,UAAT,CAAoBF,CAApB,EAAuB;AAAA;AAAA;;AACnB,MAAIA,CAAC,CAACG,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AAAA;AAAA;AACvBvB,IAAAA,YAAY,GAAG;AACXO,MAAAA,IAAI,EAAE,QADK;AAEXI,MAAAA,OAAO,EAAE;AAFE,KAAf;AADuB;AAKtB,WAAOA,OAAO,CAACS,CAAD,CAAd;AACJ,GAND,MAMO;AAAA;AAAA;;AAAA,QAAIA,CAAC,IAAI,GAAT,EAAc;AAAA;AAEpB,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIA,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAEpB,OAFM,MAEA;AAAA;AAEN;AAAA;AAAA;AACJ;;AAED,SAASc,OAAT,CAAiBS,CAAjB,EAAoB;AAAA;AAAA;;AAChB,MAAIA,CAAC,CAACG,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AAAA;AAAA;AACxB,WAAOC,mBAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAIJ,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjB,aAAOK,mBAAP;AACH,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIL,CAAC,CAACG,KAAF,CAAQ,SAAR,CAAJ,EAAwB;AAAA;AAAA;AAC3BvB,QAAAA,YAAY,CAACW,OAAb,IAAwBS,CAAxB;AAD2B;AAE3B,eAAOT,OAAP;AACH,OAHM,MAGA;AAAA;AAAA;;AAAA,YAAIS,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjBjB,UAAAA,IAAI,CAACH,YAAD,CAAJ;AADiB;AAEjB,iBAAOmB,IAAP;AACH,SAHM,MAGA;AAAA;AAAA;AACHnB,UAAAA,YAAY,CAACW,OAAb,IAAwBS,CAAxB;AADG;AAEH,iBAAOT,OAAP;AACH;AAAA;AAAA;AAAA;AACJ,C,CAED;;;AACA,SAASa,mBAAT,CAA6BJ,CAA7B,EAAgC;AAAA;AAAA;;AAC5B,MAAIA,CAAC,CAACG,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AAAA;AAAA;AACxB,WAAOC,mBAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAI,6BAAAJ,CAAC,IAAI,GAAL,kCAAYA,CAAC,IAAI,GAAjB,kCAAwBA,CAAC,IAAIvB,GAA7B,CAAJ,EAAsC;AAAA;AAAA;AACzC,aAAO6B,kBAAkB,CAACN,CAAD,CAAzB;AACH,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIA,CAAC,IAAI,GAAT,EAAc;AAAA;AAEpB,OAFM,MAEA;AAAA;AAAA;AACHnB,QAAAA,gBAAgB,GAAG;AACfa,UAAAA,IAAI,EAAE,EADS;AAEfC,UAAAA,KAAK,EAAE;AAFQ,SAAnB;AADG;AAKH,eAAOY,aAAa,CAACP,CAAD,CAApB;AACH;AAAA;AAAA;AACJ;;AAED,SAASO,aAAT,CAAuBP,CAAvB,EAA0B;AAAA;AAAA;;AACtB,MAAI,6BAAAA,CAAC,CAACG,KAAF,CAAQ,aAAR,mCAA0BH,CAAC,IAAI,GAA/B,kCAAsCA,CAAC,IAAI,GAA3C,kCAAkDA,CAAC,IAAIvB,GAAvD,CAAJ,EAAgE;AAAA;AAAA;AAC5D,WAAO6B,kBAAkB,CAACN,CAAD,CAAzB;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAIA,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjB,aAAOQ,oBAAP;AACH,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIR,CAAC,IAAI,IAAT,EAAmB;AAAA;AAEzB,OAFM,MAEA;AAAA;AAAA;;AAAA,YAAI,6BAAAA,CAAC,IAAI,IAAL,kCAAaA,CAAC,IAAI,GAAlB,kCAAyBA,CAAC,IAAI,GAA9B,CAAJ,EAAuC;AAAA;AAE7C,SAFM,MAEA;AAAA;AAAA;AACHnB,UAAAA,gBAAgB,CAACa,IAAjB,IAAyBM,CAAzB;AADG;AAEH,iBAAOO,aAAP;AACH;AAAA;AAAA;AAAA;AACJ;;AAED,SAASC,oBAAT,CAA8BR,CAA9B,EAAiC;AAAA;AAAA;;AAC7B,MAAI,6BAAAA,CAAC,CAACG,KAAF,CAAQ,aAAR,mCAA0BH,CAAC,IAAI,GAA/B,kCAAsCA,CAAC,IAAI,GAA3C,kCAAkDA,CAAC,IAAIvB,GAAvD,CAAJ,EAAgE;AAAA;AAAA;AAC5D,WAAO+B,oBAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAIR,CAAC,IAAI,IAAT,EAAe;AAAA;AAAA;AAClB,aAAOS,0BAAP;AACH,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIT,CAAC,IAAI,IAAT,EAAe;AAAA;AAAA;AAClB,eAAOU,0BAAP;AACH,OAFM,MAEA;AAAA;AAAA;;AAAA,YAAIV,CAAC,IAAI,GAAT,EAAc;AAAA;AAEpB,SAFM,MAEA;AAAA;AAAA;AACH,iBAAOW,sBAAsB,CAACX,CAAD,CAA7B;AACH;AAAA;AAAA;AAAA;AACJ;;AAED,SAASS,0BAAT,CAAoCT,CAApC,EAAuC;AAAA;AAAA;;AACnC,MAAIA,CAAC,IAAI,IAAT,EAAe;AAAA;AAAA;AACXpB,IAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADW;AAEX,WAAOiB,yBAAP;AACH,GAHD,MAGO;AAAA;AAAA;;AAAA,QAAIZ,CAAC,IAAI,IAAT,EAAmB;AAAA;AAEzB,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIA,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAEpB,OAFM,MAEA;AAAA;AAAA;AACHI,QAAAA,gBAAgB,CAACc,KAAjB,IAA0BK,CAA1B;AADG;AAEH,eAAOS,0BAAP;AACH;AAAA;AAAA;AACJ;;AAED,SAASG,yBAAT,CAAmCZ,CAAnC,EAAsC;AAAA;AAAA;;AAClC,MAAIA,CAAC,CAACG,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AAAA;AAAA;AACxB,WAAOC,mBAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAIJ,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjB,aAAOK,mBAAP;AACH,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIL,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjBpB,QAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADiB;AAEjBZ,QAAAA,IAAI,CAACH,YAAD,CAAJ;AAFiB;AAGjB,eAAOmB,IAAP;AACH,OAJM,MAIA;AAAA;AAAA;;AAAA,YAAIC,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAEpB,SAFM,MAEA;AAAA;AAAA;AACH,gBAAM,IAAIoB,KAAJ,CAAU,2BAA2BG,CAA3B,GAA+B,IAAzC,CAAN;AACH;AAAA;AAAA;AAAA;AACJ;;AAED,SAASU,0BAAT,CAAoCV,CAApC,EAAuC;AAAA;AAAA;;AACnC,MAAIA,CAAC,IAAI,IAAT,EAAe;AAAA;AAAA;AACXpB,IAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADW;AAEX,WAAOiB,yBAAP;AACH,GAHD,MAGO;AAAA;AAAA;;AAAA,QAAIZ,CAAC,IAAI,IAAT,EAAmB;AAAA;AAEzB,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIA,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAEpB,OAFM,MAEA;AAAA;AAAA;AACHI,QAAAA,gBAAgB,CAACc,KAAjB,IAA0BK,CAA1B;AADG;AAEH,eAAOU,0BAAP;AACH;AAAA;AAAA;AACJ;;AAED,SAASC,sBAAT,CAAgCX,CAAhC,EAAmC;AAAA;AAAA;;AAC/B,MAAIA,CAAC,CAACG,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AAAA;AAAA;AACxBvB,IAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADwB;AAExB,WAAOS,mBAAP;AACH,GAHD,MAGO;AAAA;AAAA;;AAAA,QAAIJ,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjBpB,MAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADiB;AAEjB,aAAOU,mBAAP;AACH,KAHM,MAGA;AAAA;AAAA;;AAAA,UAAIL,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjBpB,QAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADiB;AAEjBZ,QAAAA,IAAI,CAACH,YAAD,CAAJ;AAFiB;AAGjB,eAAOmB,IAAP;AACH,OAJM,MAIA;AAAA;AAAA;;AAAA,YAAIC,CAAC,IAAI,IAAT,EAAmB;AAAA;AAEzB,SAFM,MAEA;AAAA;AAAA;;AAAA,cAAI,6BAAAA,CAAC,IAAI,IAAL,kCAAaA,CAAC,IAAI,GAAlB,kCAAyBA,CAAC,IAAI,GAA9B,kCAAqCA,CAAC,IAAI,GAA1C,kCAAiDA,CAAC,IAAI,GAAtD,CAAJ,EAA+D;AAAA;AAErE,WAFM,MAEA;AAAA;AAAA;;AAAA,gBAAIA,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAEpB,aAFM,MAEA;AAAA;AAAA;AACHI,cAAAA,gBAAgB,CAACc,KAAjB,IAA0BK,CAA1B;AADG;AAEH,qBAAOW,sBAAP;AACH;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;;AAED,SAASL,kBAAT,CAA4BN,CAA5B,EAA+B;AAAA;AAAA;;AAC3B,MAAIA,CAAC,CAACG,KAAF,CAAQ,aAAR,CAAJ,EAA4B;AAAA;AAAA;AACxB,WAAOG,kBAAP;AACH,GAFD,MAEO;AAAA;AAAA;;AAAA,QAAIN,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjB,aAAOK,mBAAP;AACH,KAFM,MAEA;AAAA;AAAA;;AAAA,UAAIL,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjB,eAAOQ,oBAAP;AACH,OAFM,MAEA;AAAA;AAAA;;AAAA,YAAIR,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACjBpB,UAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADiB;AAEjBZ,UAAAA,IAAI,CAACH,YAAD,CAAJ;AAFiB;AAGjB,iBAAOmB,IAAP;AACH,SAJM,MAIA;AAAA;AAAA;;AAAA,cAAIC,CAAC,IAAIvB,GAAT,EAAc;AAAA;AAEpB,WAFM,MAEA;AAAA;AAAA;AACHG,YAAAA,YAAY,CAACC,gBAAgB,CAACa,IAAlB,CAAZ,GAAsCb,gBAAgB,CAACc,KAAvD;AADG;AAEHd,YAAAA,gBAAgB,GAAG;AACfa,cAAAA,IAAI,EAAE,EADS;AAEfC,cAAAA,KAAK,EAAE;AAFQ,aAAnB;AAFG;AAMH,mBAAOY,aAAa,CAACP,CAAD,CAApB;AACH;AAAA;AAAA;AAAA;AAAA;AACJ;;AAED,SAASK,mBAAT,CAA6BL,CAA7B,EAAgC;AAAA;AAAA;;AAC5B,MAAIA,CAAC,IAAI,GAAT,EAAc;AAAA;AAAA;AACVpB,IAAAA,YAAY,CAACgB,aAAb,GAA6B,IAA7B;AADU;AAEVb,IAAAA,IAAI,CAACH,YAAD,CAAJ;AAFU;AAGV,WAAOmB,IAAP;AACH,GAJD,MAIO;AAAA;AAAA;;AAAA,QAAIC,CAAC,IAAI,KAAT,EAAgB;AAAA;AAEtB,KAFM,MAEA;AAAA;AAEN;AAAA;AACJ;;AAEM,SAASa,SAAT,CAAmBC,IAAnB,EAAyB;AAAA;AAAA;AAE5BnC,EAAAA,KAAK,GAAG,CAAC;AAAEQ,IAAAA,IAAI,EAAE,UAAR;AAAoBE,IAAAA,QAAQ,EAAE;AAA9B,GAAD,CAAR;AAF4B;AAG5BT,EAAAA,YAAY,GAAG,IAAf;AAH4B;AAI5BC,EAAAA,gBAAgB,GAAG,IAAnB;AAJ4B;AAK5BC,EAAAA,eAAe,GAAG,IAAlB;AAEA,MAAIiC,KAAK,8BAAGhB,IAAH,CAAT;AAP4B;;AAAA,6CAQde,IARc;AAAA;;AAAA;AAQ5B,wDAAoB;AAAA,UAAXd,CAAW;AAAA;AAChBe,MAAAA,KAAK,GAAGA,KAAK,CAACf,CAAD,CAAb;AACH;AAV2B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAW5Be,EAAAA,KAAK,GAAGA,KAAK,CAACtC,GAAD,CAAb;AAX4B;AAY5B,SAAOE,KAAK,CAAC,CAAD,CAAZ;AACH",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/",
      "sourcesContent": [
        "const EOF = Symbol('EOF');\n\nlet stack;\nlet currentToken = null;\nlet currentAttribute = null;\nlet currentTextNode = null;\n\nfunction emit(token) {\n    let top = stack[stack.length - 1]\n\n    if (token.type == 'startTag') {\n        let element = {\n            type: 'element',\n            children: [],\n            attributes: []\n        }\n\n        element.tagName = token.tagName\n\n        for (let p in token) {\n            if (p != 'type' && p != 'tagName') {\n                element.attributes.push({\n                    name: p,\n                    value: token[p]\n                })\n            }\n        }\n\n        top.children.push(element)\n        // element.parent = top\n\n        if (!token.isSelfClosing) {\n            stack.push(element)\n        }\n        \n        currentTextNode = null\n    } else if (token.type == 'endTag') {\n        if (top.tagName != token.tagName) {\n            throw new Error(\"Tag start end doesn't match!\")\n        }\n        currentTextNode = null\n    } else if (token.type == 'text') {\n        if (currentTextNode == null) {\n            currentTextNode = {\n                type: 'text',\n                content: ''\n            }\n            top.children.push(currentTextNode)\n        }\n        currentTextNode.content += token.content\n    }\n}\n\nfunction data(c) {\n    if (c === \"<\") {\n        return tagOpen;\n    } else if (c == EOF) {\n        emit({\n            type: 'EOF'\n        });\n        return;\n    } else {\n        emit({\n            type: 'text',\n            content: c\n        });\n        return data\n    }\n}\n\nfunction tagOpen(c) {\n    if (c === \"/\") {\n        return endTagOpen\n    } else if (c.match(/^[a-zA-Z]$/)) {\n        currentToken = {\n            type: \"startTag\",\n            tagName: \"\"\n        }\n        return tagName(c)\n    } else {\n        emit({\n            type: \"text\",\n            content: c,\n        })\n        return data\n    }\n}\n\nfunction endTagOpen(c) {\n    if (c.match(/^[a-zA-Z]$/)) {\n        currentToken = {\n            type: \"endTag\",\n            tagName: \"\"\n        }\n         return tagName(c)\n    } else if (c == '>') {\n\n    } else if (c == EOF) {\n\n    } else {\n\n    }\n}\n\nfunction tagName(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        return beforeAttributeName\n    } else if (c == \"/\") {\n        return selfClosingStartTag\n    } else if (c.match(/^[A-Z]$/)) {\n        currentToken.tagName += c\n        return tagName\n    } else if (c == \">\") {\n        emit(currentToken);\n        return data\n    } else {\n        currentToken.tagName += c\n        return tagName\n    }\n}\n\n// 处理属性\nfunction beforeAttributeName(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        return beforeAttributeName\n    } else if (c == \"/\" || c == \">\" || c == EOF) {\n        return afterAttributeName(c)\n    } else if (c == \"=\") {\n\n    } else {\n        currentAttribute = {\n            name: \"\",\n            value: \"\"\n        }\n        return attributeName(c)\n    }\n}\n\nfunction attributeName(c) {\n    if (c.match(/^[\\t\\n\\f ]$/) || c == \"/\" || c == \">\" || c == EOF) {\n        return afterAttributeName(c)\n    } else if (c == \"=\") {\n        return beforeAttributeValue\n    } else if (c == \"\\u0000\") {\n\n    } else if (c == \"\\\"\" || c == \"'\" || c == \"<\") {\n\n    } else {\n        currentAttribute.name += c\n        return attributeName\n    }\n}\n\nfunction beforeAttributeValue(c) {\n    if (c.match(/^[\\t\\n\\f ]$/) || c == \"/\" || c == \">\" || c == EOF) {\n        return beforeAttributeValue\n    } else if (c == \"\\\"\") {\n        return doubleQuotedAttributeValue\n    } else if (c == \"\\'\") {\n        return singleQuotedAttributeValue\n    } else if (c == '>') {\n\n    } else {\n        return UnquotedAttributeValue(c)\n    }\n}\n\nfunction doubleQuotedAttributeValue(c) {\n    if (c == \"\\\"\") {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        return afterQuotedAttributeValue\n    } else if (c == '\\u0000') {\n\n    } else if (c == EOF) {\n\n    } else {\n        currentAttribute.value += c\n        return doubleQuotedAttributeValue\n    }\n}\n\nfunction afterQuotedAttributeValue(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        return beforeAttributeName\n    } else if (c == \"/\") {\n        return selfClosingStartTag\n    } else if (c == \">\") {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        emit(currentToken)\n        return data\n    } else if (c == EOF) {\n\n    } else {\n        throw new Error('unexpected charater \\\"' + c + '\\\"')\n    }\n}\n\nfunction singleQuotedAttributeValue(c) {\n    if (c == \"\\'\") {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        return afterQuotedAttributeValue\n    } else if (c == '\\u0000') {\n\n    } else if (c == EOF) {\n\n    } else {\n        currentAttribute.value += c\n        return singleQuotedAttributeValue\n    }\n}\n\nfunction UnquotedAttributeValue(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        return beforeAttributeName\n    } else if (c == \"/\") {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        return selfClosingStartTag\n    } else if (c == \">\") {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        emit(currentToken)\n        return data\n    } else if (c == '\\u0000') {\n\n    } else if (c == '\\\"' || c == \"'\" || c == '<' || c == '=' || c == '`') {\n\n    } else if (c == EOF) {\n\n    } else {\n        currentAttribute.value += c\n        return UnquotedAttributeValue\n    }\n}\n\nfunction afterAttributeName(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        return afterAttributeName\n    } else if (c == \"/\") {\n        return selfClosingStartTag\n    } else if (c == \"=\") {\n        return beforeAttributeValue\n    } else if (c == \">\") {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        emit(currentToken)\n        return data\n    } else if (c == EOF) {\n\n    } else {\n        currentToken[currentAttribute.name] = currentAttribute.value\n        currentAttribute = {\n            name: '',\n            value: ''\n        }\n        return attributeName(c)\n    }\n}\n\nfunction selfClosingStartTag(c) {\n    if (c == '>') {\n        currentToken.isSelfClosing = true\n        emit(currentToken)\n        return data\n    } else if (c == 'EOF') {\n\n    } else {\n\n    }\n}\n\nexport function parseHTML(html) {\n    \n    stack = [{ type: 'document', children: [] }];\n    currentToken = null;\n    currentAttribute = null;\n    currentTextNode = null;\n    \n    let state = data;\n    for (let c of html) {\n        state = state(c);\n    }\n    state = state(EOF);\n    return stack[0]\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1609131224241
  },
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/parser-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
        "sourceFileName": "parser-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _parser = require(\"../html-parser/src/parser.js\");\n\nvar assert = require('assert');\n\ndescribe(\"parse html: \", function () {\n  it('<a></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a></a>');\n    assert.equal(tree.children[0].tagName, \"a\");\n    assert.equal(tree.children[0].children.length, 0);\n  }); // 属性相关\n\n  it('<a href=\"//123\"></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a href=\"//123\"></a>');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  }); // afterAttribute\n\n  it('<a href ></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a href ></a>');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n  it('<a href id ></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a href id ></a>');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  }); // doubleQuotedAttributeValue\n\n  it('<a href=\"abc\" id ></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a href=\"abc\" id ></a>');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  }); // unQuotedAttributeValue\n\n  it('<a id=abc ></a>', function () {\n    var tree = (0, _parser.parseHTML)('<a id=abc ></a>');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  }); // selfClosingStartTag\n\n  it('<a />', function () {\n    var tree = (0, _parser.parseHTML)('<a />');\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  }); // singleQuotedAttributeValue\n\n  it('<a id=\\'abc\\'/>', function () {\n    var tree = (0, _parser.parseHTML)('<a id=\\'abc\\'/>');\n    console.log(tree);\n    assert.equal(tree.children.length, 1);\n    assert.equal(tree.children[0].children.length, 0);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlci10ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJkZXNjcmliZSIsIml0IiwidHJlZSIsImVxdWFsIiwiY2hpbGRyZW4iLCJ0YWdOYW1lIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFGQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUtBQyxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFVO0FBQy9CQyxFQUFBQSxFQUFFLENBQUMsU0FBRCxFQUFZLFlBQVc7QUFDckIsUUFBSUMsSUFBSSxHQUFHLHVCQUFVLFNBQVYsQ0FBWDtBQUNBSixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYUQsSUFBSSxDQUFDRSxRQUFMLENBQWMsQ0FBZCxFQUFpQkMsT0FBOUIsRUFBdUMsR0FBdkM7QUFDQVAsSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFELElBQUksQ0FBQ0UsUUFBTCxDQUFjLENBQWQsRUFBaUJBLFFBQWpCLENBQTBCRSxNQUF2QyxFQUErQyxDQUEvQztBQUNILEdBSkMsQ0FBRixDQUQrQixDQU0vQjs7QUFDQUwsRUFBQUEsRUFBRSxDQUFDLHNCQUFELEVBQXlCLFlBQVc7QUFDbEMsUUFBSUMsSUFBSSxHQUFHLHVCQUFVLHNCQUFWLENBQVg7QUFDQUosSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFELElBQUksQ0FBQ0UsUUFBTCxDQUFjRSxNQUEzQixFQUFtQyxDQUFuQztBQUNBUixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYUQsSUFBSSxDQUFDRSxRQUFMLENBQWMsQ0FBZCxFQUFpQkEsUUFBakIsQ0FBMEJFLE1BQXZDLEVBQStDLENBQS9DO0FBQ0gsR0FKQyxDQUFGLENBUCtCLENBWS9COztBQUNBTCxFQUFBQSxFQUFFLENBQUMsZUFBRCxFQUFrQixZQUFXO0FBQzNCLFFBQUlDLElBQUksR0FBRyx1QkFBVSxlQUFWLENBQVg7QUFDQUosSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFELElBQUksQ0FBQ0UsUUFBTCxDQUFjRSxNQUEzQixFQUFtQyxDQUFuQztBQUNBUixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYUQsSUFBSSxDQUFDRSxRQUFMLENBQWMsQ0FBZCxFQUFpQkEsUUFBakIsQ0FBMEJFLE1BQXZDLEVBQStDLENBQS9DO0FBQ0gsR0FKQyxDQUFGO0FBS0FMLEVBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixZQUFXO0FBQzlCLFFBQUlDLElBQUksR0FBRyx1QkFBVSxrQkFBVixDQUFYO0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhRCxJQUFJLENBQUNFLFFBQUwsQ0FBY0UsTUFBM0IsRUFBbUMsQ0FBbkM7QUFDQVIsSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFELElBQUksQ0FBQ0UsUUFBTCxDQUFjLENBQWQsRUFBaUJBLFFBQWpCLENBQTBCRSxNQUF2QyxFQUErQyxDQUEvQztBQUNILEdBSkMsQ0FBRixDQWxCK0IsQ0F1Qi9COztBQUNBTCxFQUFBQSxFQUFFLENBQUMsd0JBQUQsRUFBMkIsWUFBVztBQUNwQyxRQUFJQyxJQUFJLEdBQUcsdUJBQVUsd0JBQVYsQ0FBWDtBQUNBSixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYUQsSUFBSSxDQUFDRSxRQUFMLENBQWNFLE1BQTNCLEVBQW1DLENBQW5DO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhRCxJQUFJLENBQUNFLFFBQUwsQ0FBYyxDQUFkLEVBQWlCQSxRQUFqQixDQUEwQkUsTUFBdkMsRUFBK0MsQ0FBL0M7QUFDSCxHQUpDLENBQUYsQ0F4QitCLENBNkIvQjs7QUFDQUwsRUFBQUEsRUFBRSxDQUFDLGlCQUFELEVBQW9CLFlBQVc7QUFDN0IsUUFBSUMsSUFBSSxHQUFHLHVCQUFVLGlCQUFWLENBQVg7QUFDQUosSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFELElBQUksQ0FBQ0UsUUFBTCxDQUFjRSxNQUEzQixFQUFtQyxDQUFuQztBQUNBUixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYUQsSUFBSSxDQUFDRSxRQUFMLENBQWMsQ0FBZCxFQUFpQkEsUUFBakIsQ0FBMEJFLE1BQXZDLEVBQStDLENBQS9DO0FBQ0gsR0FKQyxDQUFGLENBOUIrQixDQW1DL0I7O0FBQ0FMLEVBQUFBLEVBQUUsQ0FBQyxPQUFELEVBQVUsWUFBVztBQUNuQixRQUFJQyxJQUFJLEdBQUcsdUJBQVUsT0FBVixDQUFYO0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhRCxJQUFJLENBQUNFLFFBQUwsQ0FBY0UsTUFBM0IsRUFBbUMsQ0FBbkM7QUFDQVIsSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFELElBQUksQ0FBQ0UsUUFBTCxDQUFjLENBQWQsRUFBaUJBLFFBQWpCLENBQTBCRSxNQUF2QyxFQUErQyxDQUEvQztBQUNILEdBSkMsQ0FBRixDQXBDK0IsQ0F5Qy9COztBQUNBTCxFQUFBQSxFQUFFLENBQUMsaUJBQUQsRUFBb0IsWUFBVztBQUM3QixRQUFJQyxJQUFJLEdBQUcsdUJBQVUsaUJBQVYsQ0FBWDtBQUNBSyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU4sSUFBWjtBQUNBSixJQUFBQSxNQUFNLENBQUNLLEtBQVAsQ0FBYUQsSUFBSSxDQUFDRSxRQUFMLENBQWNFLE1BQTNCLEVBQW1DLENBQW5DO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhRCxJQUFJLENBQUNFLFFBQUwsQ0FBYyxDQUFkLEVBQWlCQSxRQUFqQixDQUEwQkUsTUFBdkMsRUFBK0MsQ0FBL0M7QUFDSCxHQUxDLENBQUY7QUFNSCxDQWhETyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tb3h5bmluamEvR3JlZW5UZWEtTGVtb24vd2ludGVyIEpz6K++56iLL1dlZWstMTcvdGVzdC1kZW1vL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG5pbXBvcnQge3BhcnNlSFRNTH0gZnJvbSBcIi4uL2h0bWwtcGFyc2VyL3NyYy9wYXJzZXIuanNcIjtcblxuXG5kZXNjcmliZShcInBhcnNlIGh0bWw6IFwiLCBmdW5jdGlvbigpe1xuICAgIGl0KCc8YT48L2E+JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCB0cmVlID0gcGFyc2VIVE1MKCc8YT48L2E+Jyk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuWzBdLnRhZ05hbWUsIFwiYVwiKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4ubGVuZ3RoLCAwKTtcbiAgICB9KTtcbiAgICAvLyDlsZ7mgKfnm7jlhbNcbiAgICBpdCgnPGEgaHJlZj1cIi8vMTIzXCI+PC9hPicsIGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgdHJlZSA9IHBhcnNlSFRNTCgnPGEgaHJlZj1cIi8vMTIzXCI+PC9hPicpO1xuICAgICAgICBhc3NlcnQuZXF1YWwodHJlZS5jaGlsZHJlbi5sZW5ndGgsIDEpO1xuICAgICAgICBhc3NlcnQuZXF1YWwodHJlZS5jaGlsZHJlblswXS5jaGlsZHJlbi5sZW5ndGgsIDApO1xuICAgIH0pOyBcbiAgICAvLyBhZnRlckF0dHJpYnV0ZVxuICAgIGl0KCc8YSBocmVmID48L2E+JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCB0cmVlID0gcGFyc2VIVE1MKCc8YSBocmVmID48L2E+Jyk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuLmxlbmd0aCwgMSk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuWzBdLmNoaWxkcmVuLmxlbmd0aCwgMCk7XG4gICAgfSk7IFxuICAgIGl0KCc8YSBocmVmIGlkID48L2E+JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCB0cmVlID0gcGFyc2VIVE1MKCc8YSBocmVmIGlkID48L2E+Jyk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuLmxlbmd0aCwgMSk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuWzBdLmNoaWxkcmVuLmxlbmd0aCwgMCk7XG4gICAgfSk7IFxuICAgIC8vIGRvdWJsZVF1b3RlZEF0dHJpYnV0ZVZhbHVlXG4gICAgaXQoJzxhIGhyZWY9XCJhYmNcIiBpZCA+PC9hPicsIGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgdHJlZSA9IHBhcnNlSFRNTCgnPGEgaHJlZj1cImFiY1wiIGlkID48L2E+Jyk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuLmxlbmd0aCwgMSk7XG4gICAgICAgIGFzc2VydC5lcXVhbCh0cmVlLmNoaWxkcmVuWzBdLmNoaWxkcmVuLmxlbmd0aCwgMCk7XG4gICAgfSk7IFxuICAgIC8vIHVuUXVvdGVkQXR0cmlidXRlVmFsdWVcbiAgICBpdCgnPGEgaWQ9YWJjID48L2E+JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCB0cmVlID0gcGFyc2VIVE1MKCc8YSBpZD1hYmMgPjwvYT4nKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW4ubGVuZ3RoLCAxKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4ubGVuZ3RoLCAwKTtcbiAgICB9KTsgXG4gICAgLy8gc2VsZkNsb3NpbmdTdGFydFRhZ1xuICAgIGl0KCc8YSAvPicsIGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgdHJlZSA9IHBhcnNlSFRNTCgnPGEgLz4nKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW4ubGVuZ3RoLCAxKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4ubGVuZ3RoLCAwKTtcbiAgICB9KTsgIFxuICAgIC8vIHNpbmdsZVF1b3RlZEF0dHJpYnV0ZVZhbHVlXG4gICAgaXQoJzxhIGlkPVxcJ2FiY1xcJy8+JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCB0cmVlID0gcGFyc2VIVE1MKCc8YSBpZD1cXCdhYmNcXCcvPicpO1xuICAgICAgICBjb25zb2xlLmxvZyh0cmVlKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW4ubGVuZ3RoLCAxKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHRyZWUuY2hpbGRyZW5bMF0uY2hpbGRyZW4ubGVuZ3RoLCAwKTtcbiAgICB9KTsgIFxufSkiXX0=",
    "map": null,
    "sourceType": "script",
    "mtime": 1609132832721
  },
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/parser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/html-parser/src/",
        "sourceFileName": "parser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseHTML = parseHTML;\n\nfunction cov_5xm3ognsj() {\n  var path = \"/Users/moxyninja/GreenTea-Lemon/winter Js\\u8BFE\\u7A0B/Week-17/test-demo/html-parser/src/parser.js\";\n  var hash = \"4b9595787572cff3de8df20eb69ff6f1ab1a8a06\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/moxyninja/GreenTea-Lemon/winter Js\\u8BFE\\u7A0B/Week-17/test-demo/html-parser/src/parser.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 1,\n          column: 12\n        },\n        end: {\n          line: 1,\n          column: 25\n        }\n      },\n      \"1\": {\n        start: {\n          line: 4,\n          column: 19\n        },\n        end: {\n          line: 4,\n          column: 23\n        }\n      },\n      \"2\": {\n        start: {\n          line: 5,\n          column: 23\n        },\n        end: {\n          line: 5,\n          column: 27\n        }\n      },\n      \"3\": {\n        start: {\n          line: 6,\n          column: 22\n        },\n        end: {\n          line: 6,\n          column: 26\n        }\n      },\n      \"4\": {\n        start: {\n          line: 9,\n          column: 14\n        },\n        end: {\n          line: 9,\n          column: 37\n        }\n      },\n      \"5\": {\n        start: {\n          line: 11,\n          column: 4\n        },\n        end: {\n          line: 51,\n          column: 5\n        }\n      },\n      \"6\": {\n        start: {\n          line: 12,\n          column: 22\n        },\n        end: {\n          line: 16,\n          column: 9\n        }\n      },\n      \"7\": {\n        start: {\n          line: 18,\n          column: 8\n        },\n        end: {\n          line: 18,\n          column: 39\n        }\n      },\n      \"8\": {\n        start: {\n          line: 20,\n          column: 8\n        },\n        end: {\n          line: 27,\n          column: 9\n        }\n      },\n      \"9\": {\n        start: {\n          line: 21,\n          column: 12\n        },\n        end: {\n          line: 26,\n          column: 13\n        }\n      },\n      \"10\": {\n        start: {\n          line: 22,\n          column: 16\n        },\n        end: {\n          line: 25,\n          column: 18\n        }\n      },\n      \"11\": {\n        start: {\n          line: 29,\n          column: 8\n        },\n        end: {\n          line: 29,\n          column: 34\n        }\n      },\n      \"12\": {\n        start: {\n          line: 32,\n          column: 8\n        },\n        end: {\n          line: 34,\n          column: 9\n        }\n      },\n      \"13\": {\n        start: {\n          line: 33,\n          column: 12\n        },\n        end: {\n          line: 33,\n          column: 31\n        }\n      },\n      \"14\": {\n        start: {\n          line: 36,\n          column: 8\n        },\n        end: {\n          line: 36,\n          column: 30\n        }\n      },\n      \"15\": {\n        start: {\n          line: 37,\n          column: 11\n        },\n        end: {\n          line: 51,\n          column: 5\n        }\n      },\n      \"16\": {\n        start: {\n          line: 38,\n          column: 8\n        },\n        end: {\n          line: 40,\n          column: 9\n        }\n      },\n      \"17\": {\n        start: {\n          line: 39,\n          column: 12\n        },\n        end: {\n          line: 39,\n          column: 59\n        }\n      },\n      \"18\": {\n        start: {\n          line: 41,\n          column: 8\n        },\n        end: {\n          line: 41,\n          column: 30\n        }\n      },\n      \"19\": {\n        start: {\n          line: 42,\n          column: 11\n        },\n        end: {\n          line: 51,\n          column: 5\n        }\n      },\n      \"20\": {\n        start: {\n          line: 43,\n          column: 8\n        },\n        end: {\n          line: 49,\n          column: 9\n        }\n      },\n      \"21\": {\n        start: {\n          line: 44,\n          column: 12\n        },\n        end: {\n          line: 47,\n          column: 13\n        }\n      },\n      \"22\": {\n        start: {\n          line: 48,\n          column: 12\n        },\n        end: {\n          line: 48,\n          column: 46\n        }\n      },\n      \"23\": {\n        start: {\n          line: 50,\n          column: 8\n        },\n        end: {\n          line: 50,\n          column: 48\n        }\n      },\n      \"24\": {\n        start: {\n          line: 55,\n          column: 4\n        },\n        end: {\n          line: 68,\n          column: 5\n        }\n      },\n      \"25\": {\n        start: {\n          line: 56,\n          column: 8\n        },\n        end: {\n          line: 56,\n          column: 23\n        }\n      },\n      \"26\": {\n        start: {\n          line: 57,\n          column: 11\n        },\n        end: {\n          line: 68,\n          column: 5\n        }\n      },\n      \"27\": {\n        start: {\n          line: 58,\n          column: 8\n        },\n        end: {\n          line: 60,\n          column: 11\n        }\n      },\n      \"28\": {\n        start: {\n          line: 61,\n          column: 8\n        },\n        end: {\n          line: 61,\n          column: 15\n        }\n      },\n      \"29\": {\n        start: {\n          line: 63,\n          column: 8\n        },\n        end: {\n          line: 66,\n          column: 11\n        }\n      },\n      \"30\": {\n        start: {\n          line: 67,\n          column: 8\n        },\n        end: {\n          line: 67,\n          column: 19\n        }\n      },\n      \"31\": {\n        start: {\n          line: 72,\n          column: 4\n        },\n        end: {\n          line: 86,\n          column: 5\n        }\n      },\n      \"32\": {\n        start: {\n          line: 73,\n          column: 8\n        },\n        end: {\n          line: 73,\n          column: 25\n        }\n      },\n      \"33\": {\n        start: {\n          line: 74,\n          column: 11\n        },\n        end: {\n          line: 86,\n          column: 5\n        }\n      },\n      \"34\": {\n        start: {\n          line: 75,\n          column: 8\n        },\n        end: {\n          line: 78,\n          column: 9\n        }\n      },\n      \"35\": {\n        start: {\n          line: 79,\n          column: 8\n        },\n        end: {\n          line: 79,\n          column: 25\n        }\n      },\n      \"36\": {\n        start: {\n          line: 81,\n          column: 8\n        },\n        end: {\n          line: 84,\n          column: 10\n        }\n      },\n      \"37\": {\n        start: {\n          line: 85,\n          column: 8\n        },\n        end: {\n          line: 85,\n          column: 19\n        }\n      },\n      \"38\": {\n        start: {\n          line: 90,\n          column: 4\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"39\": {\n        start: {\n          line: 91,\n          column: 8\n        },\n        end: {\n          line: 94,\n          column: 9\n        }\n      },\n      \"40\": {\n        start: {\n          line: 95,\n          column: 9\n        },\n        end: {\n          line: 95,\n          column: 26\n        }\n      },\n      \"41\": {\n        start: {\n          line: 96,\n          column: 11\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"42\": {\n        start: {\n          line: 98,\n          column: 11\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"43\": {\n        start: {\n          line: 106,\n          column: 4\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"44\": {\n        start: {\n          line: 107,\n          column: 8\n        },\n        end: {\n          line: 107,\n          column: 34\n        }\n      },\n      \"45\": {\n        start: {\n          line: 108,\n          column: 11\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"46\": {\n        start: {\n          line: 109,\n          column: 8\n        },\n        end: {\n          line: 109,\n          column: 34\n        }\n      },\n      \"47\": {\n        start: {\n          line: 110,\n          column: 11\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"48\": {\n        start: {\n          line: 111,\n          column: 8\n        },\n        end: {\n          line: 111,\n          column: 33\n        }\n      },\n      \"49\": {\n        start: {\n          line: 112,\n          column: 8\n        },\n        end: {\n          line: 112,\n          column: 22\n        }\n      },\n      \"50\": {\n        start: {\n          line: 113,\n          column: 11\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"51\": {\n        start: {\n          line: 114,\n          column: 8\n        },\n        end: {\n          line: 114,\n          column: 27\n        }\n      },\n      \"52\": {\n        start: {\n          line: 115,\n          column: 8\n        },\n        end: {\n          line: 115,\n          column: 19\n        }\n      },\n      \"53\": {\n        start: {\n          line: 117,\n          column: 8\n        },\n        end: {\n          line: 117,\n          column: 33\n        }\n      },\n      \"54\": {\n        start: {\n          line: 118,\n          column: 8\n        },\n        end: {\n          line: 118,\n          column: 22\n        }\n      },\n      \"55\": {\n        start: {\n          line: 123,\n          column: 4\n        },\n        end: {\n          line: 135,\n          column: 5\n        }\n      },\n      \"56\": {\n        start: {\n          line: 124,\n          column: 8\n        },\n        end: {\n          line: 124,\n          column: 34\n        }\n      },\n      \"57\": {\n        start: {\n          line: 125,\n          column: 11\n        },\n        end: {\n          line: 135,\n          column: 5\n        }\n      },\n      \"58\": {\n        start: {\n          line: 126,\n          column: 8\n        },\n        end: {\n          line: 126,\n          column: 36\n        }\n      },\n      \"59\": {\n        start: {\n          line: 127,\n          column: 11\n        },\n        end: {\n          line: 135,\n          column: 5\n        }\n      },\n      \"60\": {\n        start: {\n          line: 130,\n          column: 8\n        },\n        end: {\n          line: 133,\n          column: 9\n        }\n      },\n      \"61\": {\n        start: {\n          line: 134,\n          column: 8\n        },\n        end: {\n          line: 134,\n          column: 31\n        }\n      },\n      \"62\": {\n        start: {\n          line: 139,\n          column: 4\n        },\n        end: {\n          line: 150,\n          column: 5\n        }\n      },\n      \"63\": {\n        start: {\n          line: 140,\n          column: 8\n        },\n        end: {\n          line: 140,\n          column: 36\n        }\n      },\n      \"64\": {\n        start: {\n          line: 141,\n          column: 11\n        },\n        end: {\n          line: 150,\n          column: 5\n        }\n      },\n      \"65\": {\n        start: {\n          line: 142,\n          column: 8\n        },\n        end: {\n          line: 142,\n          column: 35\n        }\n      },\n      \"66\": {\n        start: {\n          line: 143,\n          column: 11\n        },\n        end: {\n          line: 150,\n          column: 5\n        }\n      },\n      \"67\": {\n        start: {\n          line: 145,\n          column: 11\n        },\n        end: {\n          line: 150,\n          column: 5\n        }\n      },\n      \"68\": {\n        start: {\n          line: 148,\n          column: 8\n        },\n        end: {\n          line: 148,\n          column: 34\n        }\n      },\n      \"69\": {\n        start: {\n          line: 149,\n          column: 8\n        },\n        end: {\n          line: 149,\n          column: 28\n        }\n      },\n      \"70\": {\n        start: {\n          line: 154,\n          column: 4\n        },\n        end: {\n          line: 164,\n          column: 5\n        }\n      },\n      \"71\": {\n        start: {\n          line: 155,\n          column: 8\n        },\n        end: {\n          line: 155,\n          column: 35\n        }\n      },\n      \"72\": {\n        start: {\n          line: 156,\n          column: 11\n        },\n        end: {\n          line: 164,\n          column: 5\n        }\n      },\n      \"73\": {\n        start: {\n          line: 157,\n          column: 8\n        },\n        end: {\n          line: 157,\n          column: 41\n        }\n      },\n      \"74\": {\n        start: {\n          line: 158,\n          column: 11\n        },\n        end: {\n          line: 164,\n          column: 5\n        }\n      },\n      \"75\": {\n        start: {\n          line: 159,\n          column: 8\n        },\n        end: {\n          line: 159,\n          column: 41\n        }\n      },\n      \"76\": {\n        start: {\n          line: 160,\n          column: 11\n        },\n        end: {\n          line: 164,\n          column: 5\n        }\n      },\n      \"77\": {\n        start: {\n          line: 163,\n          column: 8\n        },\n        end: {\n          line: 163,\n          column: 40\n        }\n      },\n      \"78\": {\n        start: {\n          line: 168,\n          column: 4\n        },\n        end: {\n          line: 178,\n          column: 5\n        }\n      },\n      \"79\": {\n        start: {\n          line: 169,\n          column: 8\n        },\n        end: {\n          line: 169,\n          column: 68\n        }\n      },\n      \"80\": {\n        start: {\n          line: 170,\n          column: 8\n        },\n        end: {\n          line: 170,\n          column: 40\n        }\n      },\n      \"81\": {\n        start: {\n          line: 171,\n          column: 11\n        },\n        end: {\n          line: 178,\n          column: 5\n        }\n      },\n      \"82\": {\n        start: {\n          line: 173,\n          column: 11\n        },\n        end: {\n          line: 178,\n          column: 5\n        }\n      },\n      \"83\": {\n        start: {\n          line: 176,\n          column: 8\n        },\n        end: {\n          line: 176,\n          column: 35\n        }\n      },\n      \"84\": {\n        start: {\n          line: 177,\n          column: 8\n        },\n        end: {\n          line: 177,\n          column: 41\n        }\n      },\n      \"85\": {\n        start: {\n          line: 182,\n          column: 4\n        },\n        end: {\n          line: 194,\n          column: 5\n        }\n      },\n      \"86\": {\n        start: {\n          line: 183,\n          column: 8\n        },\n        end: {\n          line: 183,\n          column: 34\n        }\n      },\n      \"87\": {\n        start: {\n          line: 184,\n          column: 11\n        },\n        end: {\n          line: 194,\n          column: 5\n        }\n      },\n      \"88\": {\n        start: {\n          line: 185,\n          column: 8\n        },\n        end: {\n          line: 185,\n          column: 34\n        }\n      },\n      \"89\": {\n        start: {\n          line: 186,\n          column: 11\n        },\n        end: {\n          line: 194,\n          column: 5\n        }\n      },\n      \"90\": {\n        start: {\n          line: 187,\n          column: 8\n        },\n        end: {\n          line: 187,\n          column: 68\n        }\n      },\n      \"91\": {\n        start: {\n          line: 188,\n          column: 8\n        },\n        end: {\n          line: 188,\n          column: 26\n        }\n      },\n      \"92\": {\n        start: {\n          line: 189,\n          column: 8\n        },\n        end: {\n          line: 189,\n          column: 19\n        }\n      },\n      \"93\": {\n        start: {\n          line: 190,\n          column: 11\n        },\n        end: {\n          line: 194,\n          column: 5\n        }\n      },\n      \"94\": {\n        start: {\n          line: 193,\n          column: 8\n        },\n        end: {\n          line: 193,\n          column: 60\n        }\n      },\n      \"95\": {\n        start: {\n          line: 198,\n          column: 4\n        },\n        end: {\n          line: 208,\n          column: 5\n        }\n      },\n      \"96\": {\n        start: {\n          line: 199,\n          column: 8\n        },\n        end: {\n          line: 199,\n          column: 68\n        }\n      },\n      \"97\": {\n        start: {\n          line: 200,\n          column: 8\n        },\n        end: {\n          line: 200,\n          column: 40\n        }\n      },\n      \"98\": {\n        start: {\n          line: 201,\n          column: 11\n        },\n        end: {\n          line: 208,\n          column: 5\n        }\n      },\n      \"99\": {\n        start: {\n          line: 203,\n          column: 11\n        },\n        end: {\n          line: 208,\n          column: 5\n        }\n      },\n      \"100\": {\n        start: {\n          line: 206,\n          column: 8\n        },\n        end: {\n          line: 206,\n          column: 35\n        }\n      },\n      \"101\": {\n        start: {\n          line: 207,\n          column: 8\n        },\n        end: {\n          line: 207,\n          column: 41\n        }\n      },\n      \"102\": {\n        start: {\n          line: 212,\n          column: 4\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"103\": {\n        start: {\n          line: 213,\n          column: 8\n        },\n        end: {\n          line: 213,\n          column: 68\n        }\n      },\n      \"104\": {\n        start: {\n          line: 214,\n          column: 8\n        },\n        end: {\n          line: 214,\n          column: 34\n        }\n      },\n      \"105\": {\n        start: {\n          line: 215,\n          column: 11\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"106\": {\n        start: {\n          line: 216,\n          column: 8\n        },\n        end: {\n          line: 216,\n          column: 68\n        }\n      },\n      \"107\": {\n        start: {\n          line: 217,\n          column: 8\n        },\n        end: {\n          line: 217,\n          column: 34\n        }\n      },\n      \"108\": {\n        start: {\n          line: 218,\n          column: 11\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"109\": {\n        start: {\n          line: 219,\n          column: 8\n        },\n        end: {\n          line: 219,\n          column: 68\n        }\n      },\n      \"110\": {\n        start: {\n          line: 220,\n          column: 8\n        },\n        end: {\n          line: 220,\n          column: 26\n        }\n      },\n      \"111\": {\n        start: {\n          line: 221,\n          column: 8\n        },\n        end: {\n          line: 221,\n          column: 19\n        }\n      },\n      \"112\": {\n        start: {\n          line: 222,\n          column: 11\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"113\": {\n        start: {\n          line: 224,\n          column: 11\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"114\": {\n        start: {\n          line: 226,\n          column: 11\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"115\": {\n        start: {\n          line: 229,\n          column: 8\n        },\n        end: {\n          line: 229,\n          column: 35\n        }\n      },\n      \"116\": {\n        start: {\n          line: 230,\n          column: 8\n        },\n        end: {\n          line: 230,\n          column: 37\n        }\n      },\n      \"117\": {\n        start: {\n          line: 235,\n          column: 4\n        },\n        end: {\n          line: 254,\n          column: 5\n        }\n      },\n      \"118\": {\n        start: {\n          line: 236,\n          column: 8\n        },\n        end: {\n          line: 236,\n          column: 33\n        }\n      },\n      \"119\": {\n        start: {\n          line: 237,\n          column: 11\n        },\n        end: {\n          line: 254,\n          column: 5\n        }\n      },\n      \"120\": {\n        start: {\n          line: 238,\n          column: 8\n        },\n        end: {\n          line: 238,\n          column: 34\n        }\n      },\n      \"121\": {\n        start: {\n          line: 239,\n          column: 11\n        },\n        end: {\n          line: 254,\n          column: 5\n        }\n      },\n      \"122\": {\n        start: {\n          line: 240,\n          column: 8\n        },\n        end: {\n          line: 240,\n          column: 35\n        }\n      },\n      \"123\": {\n        start: {\n          line: 241,\n          column: 11\n        },\n        end: {\n          line: 254,\n          column: 5\n        }\n      },\n      \"124\": {\n        start: {\n          line: 242,\n          column: 8\n        },\n        end: {\n          line: 242,\n          column: 68\n        }\n      },\n      \"125\": {\n        start: {\n          line: 243,\n          column: 8\n        },\n        end: {\n          line: 243,\n          column: 26\n        }\n      },\n      \"126\": {\n        start: {\n          line: 244,\n          column: 8\n        },\n        end: {\n          line: 244,\n          column: 19\n        }\n      },\n      \"127\": {\n        start: {\n          line: 245,\n          column: 11\n        },\n        end: {\n          line: 254,\n          column: 5\n        }\n      },\n      \"128\": {\n        start: {\n          line: 248,\n          column: 8\n        },\n        end: {\n          line: 248,\n          column: 68\n        }\n      },\n      \"129\": {\n        start: {\n          line: 249,\n          column: 8\n        },\n        end: {\n          line: 252,\n          column: 9\n        }\n      },\n      \"130\": {\n        start: {\n          line: 253,\n          column: 8\n        },\n        end: {\n          line: 253,\n          column: 31\n        }\n      },\n      \"131\": {\n        start: {\n          line: 258,\n          column: 4\n        },\n        end: {\n          line: 266,\n          column: 5\n        }\n      },\n      \"132\": {\n        start: {\n          line: 259,\n          column: 8\n        },\n        end: {\n          line: 259,\n          column: 41\n        }\n      },\n      \"133\": {\n        start: {\n          line: 260,\n          column: 8\n        },\n        end: {\n          line: 260,\n          column: 26\n        }\n      },\n      \"134\": {\n        start: {\n          line: 261,\n          column: 8\n        },\n        end: {\n          line: 261,\n          column: 19\n        }\n      },\n      \"135\": {\n        start: {\n          line: 262,\n          column: 11\n        },\n        end: {\n          line: 266,\n          column: 5\n        }\n      },\n      \"136\": {\n        start: {\n          line: 271,\n          column: 4\n        },\n        end: {\n          line: 271,\n          column: 48\n        }\n      },\n      \"137\": {\n        start: {\n          line: 272,\n          column: 4\n        },\n        end: {\n          line: 272,\n          column: 24\n        }\n      },\n      \"138\": {\n        start: {\n          line: 273,\n          column: 4\n        },\n        end: {\n          line: 273,\n          column: 28\n        }\n      },\n      \"139\": {\n        start: {\n          line: 274,\n          column: 4\n        },\n        end: {\n          line: 274,\n          column: 27\n        }\n      },\n      \"140\": {\n        start: {\n          line: 276,\n          column: 16\n        },\n        end: {\n          line: 276,\n          column: 20\n        }\n      },\n      \"141\": {\n        start: {\n          line: 277,\n          column: 4\n        },\n        end: {\n          line: 279,\n          column: 5\n        }\n      },\n      \"142\": {\n        start: {\n          line: 278,\n          column: 8\n        },\n        end: {\n          line: 278,\n          column: 25\n        }\n      },\n      \"143\": {\n        start: {\n          line: 280,\n          column: 4\n        },\n        end: {\n          line: 280,\n          column: 23\n        }\n      },\n      \"144\": {\n        start: {\n          line: 281,\n          column: 4\n        },\n        end: {\n          line: 281,\n          column: 19\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"emit\",\n        decl: {\n          start: {\n            line: 8,\n            column: 9\n          },\n          end: {\n            line: 8,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 8,\n            column: 21\n          },\n          end: {\n            line: 52,\n            column: 1\n          }\n        },\n        line: 8\n      },\n      \"1\": {\n        name: \"data\",\n        decl: {\n          start: {\n            line: 54,\n            column: 9\n          },\n          end: {\n            line: 54,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 54,\n            column: 17\n          },\n          end: {\n            line: 69,\n            column: 1\n          }\n        },\n        line: 54\n      },\n      \"2\": {\n        name: \"tagOpen\",\n        decl: {\n          start: {\n            line: 71,\n            column: 9\n          },\n          end: {\n            line: 71,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 71,\n            column: 20\n          },\n          end: {\n            line: 87,\n            column: 1\n          }\n        },\n        line: 71\n      },\n      \"3\": {\n        name: \"endTagOpen\",\n        decl: {\n          start: {\n            line: 89,\n            column: 9\n          },\n          end: {\n            line: 89,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 89,\n            column: 23\n          },\n          end: {\n            line: 103,\n            column: 1\n          }\n        },\n        line: 89\n      },\n      \"4\": {\n        name: \"tagName\",\n        decl: {\n          start: {\n            line: 105,\n            column: 9\n          },\n          end: {\n            line: 105,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 105,\n            column: 20\n          },\n          end: {\n            line: 120,\n            column: 1\n          }\n        },\n        line: 105\n      },\n      \"5\": {\n        name: \"beforeAttributeName\",\n        decl: {\n          start: {\n            line: 122,\n            column: 9\n          },\n          end: {\n            line: 122,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 122,\n            column: 32\n          },\n          end: {\n            line: 136,\n            column: 1\n          }\n        },\n        line: 122\n      },\n      \"6\": {\n        name: \"attributeName\",\n        decl: {\n          start: {\n            line: 138,\n            column: 9\n          },\n          end: {\n            line: 138,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 138,\n            column: 26\n          },\n          end: {\n            line: 151,\n            column: 1\n          }\n        },\n        line: 138\n      },\n      \"7\": {\n        name: \"beforeAttributeValue\",\n        decl: {\n          start: {\n            line: 153,\n            column: 9\n          },\n          end: {\n            line: 153,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 153,\n            column: 33\n          },\n          end: {\n            line: 165,\n            column: 1\n          }\n        },\n        line: 153\n      },\n      \"8\": {\n        name: \"doubleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 167,\n            column: 9\n          },\n          end: {\n            line: 167,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 167,\n            column: 39\n          },\n          end: {\n            line: 179,\n            column: 1\n          }\n        },\n        line: 167\n      },\n      \"9\": {\n        name: \"afterQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 181,\n            column: 9\n          },\n          end: {\n            line: 181,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 181,\n            column: 38\n          },\n          end: {\n            line: 195,\n            column: 1\n          }\n        },\n        line: 181\n      },\n      \"10\": {\n        name: \"singleQuotedAttributeValue\",\n        decl: {\n          start: {\n            line: 197,\n            column: 9\n          },\n          end: {\n            line: 197,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 197,\n            column: 39\n          },\n          end: {\n            line: 209,\n            column: 1\n          }\n        },\n        line: 197\n      },\n      \"11\": {\n        name: \"UnquotedAttributeValue\",\n        decl: {\n          start: {\n            line: 211,\n            column: 9\n          },\n          end: {\n            line: 211,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 211,\n            column: 35\n          },\n          end: {\n            line: 232,\n            column: 1\n          }\n        },\n        line: 211\n      },\n      \"12\": {\n        name: \"afterAttributeName\",\n        decl: {\n          start: {\n            line: 234,\n            column: 9\n          },\n          end: {\n            line: 234,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 234,\n            column: 31\n          },\n          end: {\n            line: 255,\n            column: 1\n          }\n        },\n        line: 234\n      },\n      \"13\": {\n        name: \"selfClosingStartTag\",\n        decl: {\n          start: {\n            line: 257,\n            column: 9\n          },\n          end: {\n            line: 257,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 257,\n            column: 32\n          },\n          end: {\n            line: 267,\n            column: 1\n          }\n        },\n        line: 257\n      },\n      \"14\": {\n        name: \"parseHTML\",\n        decl: {\n          start: {\n            line: 269,\n            column: 16\n          },\n          end: {\n            line: 269,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 269,\n            column: 32\n          },\n          end: {\n            line: 282,\n            column: 1\n          }\n        },\n        line: 269\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 11,\n            column: 4\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 11,\n            column: 4\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 11,\n            column: 4\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }],\n        line: 11\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 21,\n            column: 12\n          },\n          end: {\n            line: 26,\n            column: 13\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 21,\n            column: 12\n          },\n          end: {\n            line: 26,\n            column: 13\n          }\n        }, {\n          start: {\n            line: 21,\n            column: 12\n          },\n          end: {\n            line: 26,\n            column: 13\n          }\n        }],\n        line: 21\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 21,\n            column: 16\n          },\n          end: {\n            line: 21,\n            column: 45\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 21,\n            column: 16\n          },\n          end: {\n            line: 21,\n            column: 27\n          }\n        }, {\n          start: {\n            line: 21,\n            column: 31\n          },\n          end: {\n            line: 21,\n            column: 45\n          }\n        }],\n        line: 21\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 32,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 32,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 32,\n            column: 8\n          },\n          end: {\n            line: 34,\n            column: 9\n          }\n        }],\n        line: 32\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 37,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 37,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 37,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }],\n        line: 37\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 40,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 40,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 40,\n            column: 9\n          }\n        }],\n        line: 38\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 5\n          }\n        }],\n        line: 42\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 43,\n            column: 8\n          },\n          end: {\n            line: 49,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 43,\n            column: 8\n          },\n          end: {\n            line: 49,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 43,\n            column: 8\n          },\n          end: {\n            line: 49,\n            column: 9\n          }\n        }],\n        line: 43\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }],\n        line: 55\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 68,\n            column: 5\n          }\n        }],\n        line: 57\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 72,\n            column: 4\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }],\n        line: 72\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 86,\n            column: 5\n          }\n        }],\n        line: 74\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 90,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 90,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 90,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 90\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 96,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 96,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 96,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 96\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 98,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 98,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 98,\n            column: 11\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 98\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 106,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 106,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 106,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 106\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 108,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 108,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 108,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 108\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 110,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 110,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 110,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 110\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 113,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 113,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 113,\n            column: 11\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 113\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 123,\n            column: 4\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 123,\n            column: 4\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 123,\n            column: 4\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        }],\n        line: 123\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 125,\n            column: 11\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 125,\n            column: 11\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 125,\n            column: 11\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        }],\n        line: 125\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 125,\n            column: 15\n          },\n          end: {\n            line: 125,\n            column: 47\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 125,\n            column: 15\n          },\n          end: {\n            line: 125,\n            column: 23\n          }\n        }, {\n          start: {\n            line: 125,\n            column: 27\n          },\n          end: {\n            line: 125,\n            column: 35\n          }\n        }, {\n          start: {\n            line: 125,\n            column: 39\n          },\n          end: {\n            line: 125,\n            column: 47\n          }\n        }],\n        line: 125\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 127,\n            column: 11\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 127,\n            column: 11\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 127,\n            column: 11\n          },\n          end: {\n            line: 135,\n            column: 5\n          }\n        }],\n        line: 127\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 139,\n            column: 4\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 139,\n            column: 4\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 139,\n            column: 4\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }],\n        line: 139\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 139,\n            column: 8\n          },\n          end: {\n            line: 139,\n            column: 66\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 139,\n            column: 8\n          },\n          end: {\n            line: 139,\n            column: 30\n          }\n        }, {\n          start: {\n            line: 139,\n            column: 34\n          },\n          end: {\n            line: 139,\n            column: 42\n          }\n        }, {\n          start: {\n            line: 139,\n            column: 46\n          },\n          end: {\n            line: 139,\n            column: 54\n          }\n        }, {\n          start: {\n            line: 139,\n            column: 58\n          },\n          end: {\n            line: 139,\n            column: 66\n          }\n        }],\n        line: 139\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 141,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 141,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 141,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }],\n        line: 141\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 143,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 143,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 143,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }],\n        line: 143\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 145,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 145,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 145,\n            column: 11\n          },\n          end: {\n            line: 150,\n            column: 5\n          }\n        }],\n        line: 145\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 145,\n            column: 15\n          },\n          end: {\n            line: 145,\n            column: 48\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 145,\n            column: 15\n          },\n          end: {\n            line: 145,\n            column: 24\n          }\n        }, {\n          start: {\n            line: 145,\n            column: 28\n          },\n          end: {\n            line: 145,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 145,\n            column: 40\n          },\n          end: {\n            line: 145,\n            column: 48\n          }\n        }],\n        line: 145\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 154,\n            column: 4\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 154,\n            column: 4\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 154,\n            column: 4\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }],\n        line: 154\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 154,\n            column: 8\n          },\n          end: {\n            line: 154,\n            column: 66\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 154,\n            column: 8\n          },\n          end: {\n            line: 154,\n            column: 30\n          }\n        }, {\n          start: {\n            line: 154,\n            column: 34\n          },\n          end: {\n            line: 154,\n            column: 42\n          }\n        }, {\n          start: {\n            line: 154,\n            column: 46\n          },\n          end: {\n            line: 154,\n            column: 54\n          }\n        }, {\n          start: {\n            line: 154,\n            column: 58\n          },\n          end: {\n            line: 154,\n            column: 66\n          }\n        }],\n        line: 154\n      },\n      \"31\": {\n        loc: {\n          start: {\n            line: 156,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 156,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 156,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }],\n        line: 156\n      },\n      \"32\": {\n        loc: {\n          start: {\n            line: 158,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 158,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 158,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }],\n        line: 158\n      },\n      \"33\": {\n        loc: {\n          start: {\n            line: 160,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 160,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 160,\n            column: 11\n          },\n          end: {\n            line: 164,\n            column: 5\n          }\n        }],\n        line: 160\n      },\n      \"34\": {\n        loc: {\n          start: {\n            line: 168,\n            column: 4\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 168,\n            column: 4\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 168,\n            column: 4\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        }],\n        line: 168\n      },\n      \"35\": {\n        loc: {\n          start: {\n            line: 171,\n            column: 11\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 171,\n            column: 11\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 171,\n            column: 11\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        }],\n        line: 171\n      },\n      \"36\": {\n        loc: {\n          start: {\n            line: 173,\n            column: 11\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 173,\n            column: 11\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 173,\n            column: 11\n          },\n          end: {\n            line: 178,\n            column: 5\n          }\n        }],\n        line: 173\n      },\n      \"37\": {\n        loc: {\n          start: {\n            line: 182,\n            column: 4\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 182,\n            column: 4\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 182,\n            column: 4\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }],\n        line: 182\n      },\n      \"38\": {\n        loc: {\n          start: {\n            line: 184,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 184,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 184,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }],\n        line: 184\n      },\n      \"39\": {\n        loc: {\n          start: {\n            line: 186,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 186,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 186,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }],\n        line: 186\n      },\n      \"40\": {\n        loc: {\n          start: {\n            line: 190,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 190,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 190,\n            column: 11\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        }],\n        line: 190\n      },\n      \"41\": {\n        loc: {\n          start: {\n            line: 198,\n            column: 4\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 198,\n            column: 4\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 198,\n            column: 4\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        }],\n        line: 198\n      },\n      \"42\": {\n        loc: {\n          start: {\n            line: 201,\n            column: 11\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 201,\n            column: 11\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 201,\n            column: 11\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        }],\n        line: 201\n      },\n      \"43\": {\n        loc: {\n          start: {\n            line: 203,\n            column: 11\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 203,\n            column: 11\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 203,\n            column: 11\n          },\n          end: {\n            line: 208,\n            column: 5\n          }\n        }],\n        line: 203\n      },\n      \"44\": {\n        loc: {\n          start: {\n            line: 212,\n            column: 4\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 212,\n            column: 4\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 212,\n            column: 4\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 212\n      },\n      \"45\": {\n        loc: {\n          start: {\n            line: 215,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 215,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 215,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 215\n      },\n      \"46\": {\n        loc: {\n          start: {\n            line: 218,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 218,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 218,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 218\n      },\n      \"47\": {\n        loc: {\n          start: {\n            line: 222,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 222,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 222,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 222\n      },\n      \"48\": {\n        loc: {\n          start: {\n            line: 224,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 224,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 224,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 224\n      },\n      \"49\": {\n        loc: {\n          start: {\n            line: 224,\n            column: 15\n          },\n          end: {\n            line: 224,\n            column: 72\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 224,\n            column: 15\n          },\n          end: {\n            line: 224,\n            column: 24\n          }\n        }, {\n          start: {\n            line: 224,\n            column: 28\n          },\n          end: {\n            line: 224,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 224,\n            column: 40\n          },\n          end: {\n            line: 224,\n            column: 48\n          }\n        }, {\n          start: {\n            line: 224,\n            column: 52\n          },\n          end: {\n            line: 224,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 224,\n            column: 64\n          },\n          end: {\n            line: 224,\n            column: 72\n          }\n        }],\n        line: 224\n      },\n      \"50\": {\n        loc: {\n          start: {\n            line: 226,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 226,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 226,\n            column: 11\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 226\n      },\n      \"51\": {\n        loc: {\n          start: {\n            line: 235,\n            column: 4\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 235,\n            column: 4\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 235,\n            column: 4\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }],\n        line: 235\n      },\n      \"52\": {\n        loc: {\n          start: {\n            line: 237,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 237,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 237,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }],\n        line: 237\n      },\n      \"53\": {\n        loc: {\n          start: {\n            line: 239,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 239,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 239,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }],\n        line: 239\n      },\n      \"54\": {\n        loc: {\n          start: {\n            line: 241,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 241,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 241,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }],\n        line: 241\n      },\n      \"55\": {\n        loc: {\n          start: {\n            line: 245,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 245,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 245,\n            column: 11\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        }],\n        line: 245\n      },\n      \"56\": {\n        loc: {\n          start: {\n            line: 258,\n            column: 4\n          },\n          end: {\n            line: 266,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 258,\n            column: 4\n          },\n          end: {\n            line: 266,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 258,\n            column: 4\n          },\n          end: {\n            line: 266,\n            column: 5\n          }\n        }],\n        line: 258\n      },\n      \"57\": {\n        loc: {\n          start: {\n            line: 262,\n            column: 11\n          },\n          end: {\n            line: 266,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 262,\n            column: 11\n          },\n          end: {\n            line: 266,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 262,\n            column: 11\n          },\n          end: {\n            line: 266,\n            column: 5\n          }\n        }],\n        line: 262\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0,\n      \"83\": 0,\n      \"84\": 0,\n      \"85\": 0,\n      \"86\": 0,\n      \"87\": 0,\n      \"88\": 0,\n      \"89\": 0,\n      \"90\": 0,\n      \"91\": 0,\n      \"92\": 0,\n      \"93\": 0,\n      \"94\": 0,\n      \"95\": 0,\n      \"96\": 0,\n      \"97\": 0,\n      \"98\": 0,\n      \"99\": 0,\n      \"100\": 0,\n      \"101\": 0,\n      \"102\": 0,\n      \"103\": 0,\n      \"104\": 0,\n      \"105\": 0,\n      \"106\": 0,\n      \"107\": 0,\n      \"108\": 0,\n      \"109\": 0,\n      \"110\": 0,\n      \"111\": 0,\n      \"112\": 0,\n      \"113\": 0,\n      \"114\": 0,\n      \"115\": 0,\n      \"116\": 0,\n      \"117\": 0,\n      \"118\": 0,\n      \"119\": 0,\n      \"120\": 0,\n      \"121\": 0,\n      \"122\": 0,\n      \"123\": 0,\n      \"124\": 0,\n      \"125\": 0,\n      \"126\": 0,\n      \"127\": 0,\n      \"128\": 0,\n      \"129\": 0,\n      \"130\": 0,\n      \"131\": 0,\n      \"132\": 0,\n      \"133\": 0,\n      \"134\": 0,\n      \"135\": 0,\n      \"136\": 0,\n      \"137\": 0,\n      \"138\": 0,\n      \"139\": 0,\n      \"140\": 0,\n      \"141\": 0,\n      \"142\": 0,\n      \"143\": 0,\n      \"144\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0],\n      \"21\": [0, 0, 0],\n      \"22\": [0, 0],\n      \"23\": [0, 0],\n      \"24\": [0, 0, 0, 0],\n      \"25\": [0, 0],\n      \"26\": [0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0, 0],\n      \"29\": [0, 0],\n      \"30\": [0, 0, 0, 0],\n      \"31\": [0, 0],\n      \"32\": [0, 0],\n      \"33\": [0, 0],\n      \"34\": [0, 0],\n      \"35\": [0, 0],\n      \"36\": [0, 0],\n      \"37\": [0, 0],\n      \"38\": [0, 0],\n      \"39\": [0, 0],\n      \"40\": [0, 0],\n      \"41\": [0, 0],\n      \"42\": [0, 0],\n      \"43\": [0, 0],\n      \"44\": [0, 0],\n      \"45\": [0, 0],\n      \"46\": [0, 0],\n      \"47\": [0, 0],\n      \"48\": [0, 0],\n      \"49\": [0, 0, 0, 0, 0],\n      \"50\": [0, 0],\n      \"51\": [0, 0],\n      \"52\": [0, 0],\n      \"53\": [0, 0],\n      \"54\": [0, 0],\n      \"55\": [0, 0],\n      \"56\": [0, 0],\n      \"57\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"4b9595787572cff3de8df20eb69ff6f1ab1a8a06\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_5xm3ognsj = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_5xm3ognsj();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar EOF = (cov_5xm3ognsj().s[0]++, Symbol('EOF'));\nvar stack;\nvar currentToken = (cov_5xm3ognsj().s[1]++, null);\nvar currentAttribute = (cov_5xm3ognsj().s[2]++, null);\nvar currentTextNode = (cov_5xm3ognsj().s[3]++, null);\n\nfunction emit(token) {\n  cov_5xm3ognsj().f[0]++;\n  var top = (cov_5xm3ognsj().s[4]++, stack[stack.length - 1]);\n  cov_5xm3ognsj().s[5]++;\n\n  if (token.type == 'startTag') {\n    cov_5xm3ognsj().b[0][0]++;\n    var element = (cov_5xm3ognsj().s[6]++, {\n      type: 'element',\n      children: [],\n      attributes: []\n    });\n    cov_5xm3ognsj().s[7]++;\n    element.tagName = token.tagName;\n    cov_5xm3ognsj().s[8]++;\n\n    for (var p in token) {\n      cov_5xm3ognsj().s[9]++;\n\n      if ((cov_5xm3ognsj().b[2][0]++, p != 'type') && (cov_5xm3ognsj().b[2][1]++, p != 'tagName')) {\n        cov_5xm3ognsj().b[1][0]++;\n        cov_5xm3ognsj().s[10]++;\n        element.attributes.push({\n          name: p,\n          value: token[p]\n        });\n      } else {\n        cov_5xm3ognsj().b[1][1]++;\n      }\n    }\n\n    cov_5xm3ognsj().s[11]++;\n    top.children.push(element); // element.parent = top\n\n    cov_5xm3ognsj().s[12]++;\n\n    if (!token.isSelfClosing) {\n      cov_5xm3ognsj().b[3][0]++;\n      cov_5xm3ognsj().s[13]++;\n      stack.push(element);\n    } else {\n      cov_5xm3ognsj().b[3][1]++;\n    }\n\n    cov_5xm3ognsj().s[14]++;\n    currentTextNode = null;\n  } else {\n    cov_5xm3ognsj().b[0][1]++;\n    cov_5xm3ognsj().s[15]++;\n\n    if (token.type == 'endTag') {\n      cov_5xm3ognsj().b[4][0]++;\n      cov_5xm3ognsj().s[16]++;\n\n      if (top.tagName != token.tagName) {\n        cov_5xm3ognsj().b[5][0]++;\n        cov_5xm3ognsj().s[17]++;\n        throw new Error(\"Tag start end doesn't match!\");\n      } else {\n        cov_5xm3ognsj().b[5][1]++;\n      }\n\n      cov_5xm3ognsj().s[18]++;\n      currentTextNode = null;\n    } else {\n      cov_5xm3ognsj().b[4][1]++;\n      cov_5xm3ognsj().s[19]++;\n\n      if (token.type == 'text') {\n        cov_5xm3ognsj().b[6][0]++;\n        cov_5xm3ognsj().s[20]++;\n\n        if (currentTextNode == null) {\n          cov_5xm3ognsj().b[7][0]++;\n          cov_5xm3ognsj().s[21]++;\n          currentTextNode = {\n            type: 'text',\n            content: ''\n          };\n          cov_5xm3ognsj().s[22]++;\n          top.children.push(currentTextNode);\n        } else {\n          cov_5xm3ognsj().b[7][1]++;\n        }\n\n        cov_5xm3ognsj().s[23]++;\n        currentTextNode.content += token.content;\n      } else {\n        cov_5xm3ognsj().b[6][1]++;\n      }\n    }\n  }\n}\n\nfunction data(c) {\n  cov_5xm3ognsj().f[1]++;\n  cov_5xm3ognsj().s[24]++;\n\n  if (c === \"<\") {\n    cov_5xm3ognsj().b[8][0]++;\n    cov_5xm3ognsj().s[25]++;\n    return tagOpen;\n  } else {\n    cov_5xm3ognsj().b[8][1]++;\n    cov_5xm3ognsj().s[26]++;\n\n    if (c == EOF) {\n      cov_5xm3ognsj().b[9][0]++;\n      cov_5xm3ognsj().s[27]++;\n      emit({\n        type: 'EOF'\n      });\n      cov_5xm3ognsj().s[28]++;\n      return;\n    } else {\n      cov_5xm3ognsj().b[9][1]++;\n      cov_5xm3ognsj().s[29]++;\n      emit({\n        type: 'text',\n        content: c\n      });\n      cov_5xm3ognsj().s[30]++;\n      return data;\n    }\n  }\n}\n\nfunction tagOpen(c) {\n  cov_5xm3ognsj().f[2]++;\n  cov_5xm3ognsj().s[31]++;\n\n  if (c === \"/\") {\n    cov_5xm3ognsj().b[10][0]++;\n    cov_5xm3ognsj().s[32]++;\n    return endTagOpen;\n  } else {\n    cov_5xm3ognsj().b[10][1]++;\n    cov_5xm3ognsj().s[33]++;\n\n    if (c.match(/^[a-zA-Z]$/)) {\n      cov_5xm3ognsj().b[11][0]++;\n      cov_5xm3ognsj().s[34]++;\n      currentToken = {\n        type: \"startTag\",\n        tagName: \"\"\n      };\n      cov_5xm3ognsj().s[35]++;\n      return tagName(c);\n    } else {\n      cov_5xm3ognsj().b[11][1]++;\n      cov_5xm3ognsj().s[36]++;\n      emit({\n        type: \"text\",\n        content: c\n      });\n      cov_5xm3ognsj().s[37]++;\n      return data;\n    }\n  }\n}\n\nfunction endTagOpen(c) {\n  cov_5xm3ognsj().f[3]++;\n  cov_5xm3ognsj().s[38]++;\n\n  if (c.match(/^[a-zA-Z]$/)) {\n    cov_5xm3ognsj().b[12][0]++;\n    cov_5xm3ognsj().s[39]++;\n    currentToken = {\n      type: \"endTag\",\n      tagName: \"\"\n    };\n    cov_5xm3ognsj().s[40]++;\n    return tagName(c);\n  } else {\n    cov_5xm3ognsj().b[12][1]++;\n    cov_5xm3ognsj().s[41]++;\n\n    if (c == '>') {\n      cov_5xm3ognsj().b[13][0]++;\n    } else {\n      cov_5xm3ognsj().b[13][1]++;\n      cov_5xm3ognsj().s[42]++;\n\n      if (c == EOF) {\n        cov_5xm3ognsj().b[14][0]++;\n      } else {\n        cov_5xm3ognsj().b[14][1]++;\n      }\n    }\n  }\n}\n\nfunction tagName(c) {\n  cov_5xm3ognsj().f[4]++;\n  cov_5xm3ognsj().s[43]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[15][0]++;\n    cov_5xm3ognsj().s[44]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[15][1]++;\n    cov_5xm3ognsj().s[45]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[16][0]++;\n      cov_5xm3ognsj().s[46]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[16][1]++;\n      cov_5xm3ognsj().s[47]++;\n\n      if (c.match(/^[A-Z]$/)) {\n        cov_5xm3ognsj().b[17][0]++;\n        cov_5xm3ognsj().s[48]++;\n        currentToken.tagName += c;\n        cov_5xm3ognsj().s[49]++;\n        return tagName;\n      } else {\n        cov_5xm3ognsj().b[17][1]++;\n        cov_5xm3ognsj().s[50]++;\n\n        if (c == \">\") {\n          cov_5xm3ognsj().b[18][0]++;\n          cov_5xm3ognsj().s[51]++;\n          emit(currentToken);\n          cov_5xm3ognsj().s[52]++;\n          return data;\n        } else {\n          cov_5xm3ognsj().b[18][1]++;\n          cov_5xm3ognsj().s[53]++;\n          currentToken.tagName += c;\n          cov_5xm3ognsj().s[54]++;\n          return tagName;\n        }\n      }\n    }\n  }\n} // 处理属性\n\n\nfunction beforeAttributeName(c) {\n  cov_5xm3ognsj().f[5]++;\n  cov_5xm3ognsj().s[55]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[19][0]++;\n    cov_5xm3ognsj().s[56]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[19][1]++;\n    cov_5xm3ognsj().s[57]++;\n\n    if ((cov_5xm3ognsj().b[21][0]++, c == \"/\") || (cov_5xm3ognsj().b[21][1]++, c == \">\") || (cov_5xm3ognsj().b[21][2]++, c == EOF)) {\n      cov_5xm3ognsj().b[20][0]++;\n      cov_5xm3ognsj().s[58]++;\n      return afterAttributeName(c);\n    } else {\n      cov_5xm3ognsj().b[20][1]++;\n      cov_5xm3ognsj().s[59]++;\n\n      if (c == \"=\") {\n        cov_5xm3ognsj().b[22][0]++;\n      } else {\n        cov_5xm3ognsj().b[22][1]++;\n        cov_5xm3ognsj().s[60]++;\n        currentAttribute = {\n          name: \"\",\n          value: \"\"\n        };\n        cov_5xm3ognsj().s[61]++;\n        return attributeName(c);\n      }\n    }\n  }\n}\n\nfunction attributeName(c) {\n  cov_5xm3ognsj().f[6]++;\n  cov_5xm3ognsj().s[62]++;\n\n  if ((cov_5xm3ognsj().b[24][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_5xm3ognsj().b[24][1]++, c == \"/\") || (cov_5xm3ognsj().b[24][2]++, c == \">\") || (cov_5xm3ognsj().b[24][3]++, c == EOF)) {\n    cov_5xm3ognsj().b[23][0]++;\n    cov_5xm3ognsj().s[63]++;\n    return afterAttributeName(c);\n  } else {\n    cov_5xm3ognsj().b[23][1]++;\n    cov_5xm3ognsj().s[64]++;\n\n    if (c == \"=\") {\n      cov_5xm3ognsj().b[25][0]++;\n      cov_5xm3ognsj().s[65]++;\n      return beforeAttributeValue;\n    } else {\n      cov_5xm3ognsj().b[25][1]++;\n      cov_5xm3ognsj().s[66]++;\n\n      if (c == \"\\0\") {\n        cov_5xm3ognsj().b[26][0]++;\n      } else {\n        cov_5xm3ognsj().b[26][1]++;\n        cov_5xm3ognsj().s[67]++;\n\n        if ((cov_5xm3ognsj().b[28][0]++, c == \"\\\"\") || (cov_5xm3ognsj().b[28][1]++, c == \"'\") || (cov_5xm3ognsj().b[28][2]++, c == \"<\")) {\n          cov_5xm3ognsj().b[27][0]++;\n        } else {\n          cov_5xm3ognsj().b[27][1]++;\n          cov_5xm3ognsj().s[68]++;\n          currentAttribute.name += c;\n          cov_5xm3ognsj().s[69]++;\n          return attributeName;\n        }\n      }\n    }\n  }\n}\n\nfunction beforeAttributeValue(c) {\n  cov_5xm3ognsj().f[7]++;\n  cov_5xm3ognsj().s[70]++;\n\n  if ((cov_5xm3ognsj().b[30][0]++, c.match(/^[\\t\\n\\f ]$/)) || (cov_5xm3ognsj().b[30][1]++, c == \"/\") || (cov_5xm3ognsj().b[30][2]++, c == \">\") || (cov_5xm3ognsj().b[30][3]++, c == EOF)) {\n    cov_5xm3ognsj().b[29][0]++;\n    cov_5xm3ognsj().s[71]++;\n    return beforeAttributeValue;\n  } else {\n    cov_5xm3ognsj().b[29][1]++;\n    cov_5xm3ognsj().s[72]++;\n\n    if (c == \"\\\"\") {\n      cov_5xm3ognsj().b[31][0]++;\n      cov_5xm3ognsj().s[73]++;\n      return doubleQuotedAttributeValue;\n    } else {\n      cov_5xm3ognsj().b[31][1]++;\n      cov_5xm3ognsj().s[74]++;\n\n      if (c == \"\\'\") {\n        cov_5xm3ognsj().b[32][0]++;\n        cov_5xm3ognsj().s[75]++;\n        return singleQuotedAttributeValue;\n      } else {\n        cov_5xm3ognsj().b[32][1]++;\n        cov_5xm3ognsj().s[76]++;\n\n        if (c == '>') {\n          cov_5xm3ognsj().b[33][0]++;\n        } else {\n          cov_5xm3ognsj().b[33][1]++;\n          cov_5xm3ognsj().s[77]++;\n          return UnquotedAttributeValue(c);\n        }\n      }\n    }\n  }\n}\n\nfunction doubleQuotedAttributeValue(c) {\n  cov_5xm3ognsj().f[8]++;\n  cov_5xm3ognsj().s[78]++;\n\n  if (c == \"\\\"\") {\n    cov_5xm3ognsj().b[34][0]++;\n    cov_5xm3ognsj().s[79]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_5xm3ognsj().s[80]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_5xm3ognsj().b[34][1]++;\n    cov_5xm3ognsj().s[81]++;\n\n    if (c == \"\\0\") {\n      cov_5xm3ognsj().b[35][0]++;\n    } else {\n      cov_5xm3ognsj().b[35][1]++;\n      cov_5xm3ognsj().s[82]++;\n\n      if (c == EOF) {\n        cov_5xm3ognsj().b[36][0]++;\n      } else {\n        cov_5xm3ognsj().b[36][1]++;\n        cov_5xm3ognsj().s[83]++;\n        currentAttribute.value += c;\n        cov_5xm3ognsj().s[84]++;\n        return doubleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction afterQuotedAttributeValue(c) {\n  cov_5xm3ognsj().f[9]++;\n  cov_5xm3ognsj().s[85]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[37][0]++;\n    cov_5xm3ognsj().s[86]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[37][1]++;\n    cov_5xm3ognsj().s[87]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[38][0]++;\n      cov_5xm3ognsj().s[88]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[38][1]++;\n      cov_5xm3ognsj().s[89]++;\n\n      if (c == \">\") {\n        cov_5xm3ognsj().b[39][0]++;\n        cov_5xm3ognsj().s[90]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_5xm3ognsj().s[91]++;\n        emit(currentToken);\n        cov_5xm3ognsj().s[92]++;\n        return data;\n      } else {\n        cov_5xm3ognsj().b[39][1]++;\n        cov_5xm3ognsj().s[93]++;\n\n        if (c == EOF) {\n          cov_5xm3ognsj().b[40][0]++;\n        } else {\n          cov_5xm3ognsj().b[40][1]++;\n          cov_5xm3ognsj().s[94]++;\n          throw new Error('unexpected charater \\\"' + c + '\\\"');\n        }\n      }\n    }\n  }\n}\n\nfunction singleQuotedAttributeValue(c) {\n  cov_5xm3ognsj().f[10]++;\n  cov_5xm3ognsj().s[95]++;\n\n  if (c == \"\\'\") {\n    cov_5xm3ognsj().b[41][0]++;\n    cov_5xm3ognsj().s[96]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_5xm3ognsj().s[97]++;\n    return afterQuotedAttributeValue;\n  } else {\n    cov_5xm3ognsj().b[41][1]++;\n    cov_5xm3ognsj().s[98]++;\n\n    if (c == \"\\0\") {\n      cov_5xm3ognsj().b[42][0]++;\n    } else {\n      cov_5xm3ognsj().b[42][1]++;\n      cov_5xm3ognsj().s[99]++;\n\n      if (c == EOF) {\n        cov_5xm3ognsj().b[43][0]++;\n      } else {\n        cov_5xm3ognsj().b[43][1]++;\n        cov_5xm3ognsj().s[100]++;\n        currentAttribute.value += c;\n        cov_5xm3ognsj().s[101]++;\n        return singleQuotedAttributeValue;\n      }\n    }\n  }\n}\n\nfunction UnquotedAttributeValue(c) {\n  cov_5xm3ognsj().f[11]++;\n  cov_5xm3ognsj().s[102]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[44][0]++;\n    cov_5xm3ognsj().s[103]++;\n    currentToken[currentAttribute.name] = currentAttribute.value;\n    cov_5xm3ognsj().s[104]++;\n    return beforeAttributeName;\n  } else {\n    cov_5xm3ognsj().b[44][1]++;\n    cov_5xm3ognsj().s[105]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[45][0]++;\n      cov_5xm3ognsj().s[106]++;\n      currentToken[currentAttribute.name] = currentAttribute.value;\n      cov_5xm3ognsj().s[107]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[45][1]++;\n      cov_5xm3ognsj().s[108]++;\n\n      if (c == \">\") {\n        cov_5xm3ognsj().b[46][0]++;\n        cov_5xm3ognsj().s[109]++;\n        currentToken[currentAttribute.name] = currentAttribute.value;\n        cov_5xm3ognsj().s[110]++;\n        emit(currentToken);\n        cov_5xm3ognsj().s[111]++;\n        return data;\n      } else {\n        cov_5xm3ognsj().b[46][1]++;\n        cov_5xm3ognsj().s[112]++;\n\n        if (c == \"\\0\") {\n          cov_5xm3ognsj().b[47][0]++;\n        } else {\n          cov_5xm3ognsj().b[47][1]++;\n          cov_5xm3ognsj().s[113]++;\n\n          if ((cov_5xm3ognsj().b[49][0]++, c == '\\\"') || (cov_5xm3ognsj().b[49][1]++, c == \"'\") || (cov_5xm3ognsj().b[49][2]++, c == '<') || (cov_5xm3ognsj().b[49][3]++, c == '=') || (cov_5xm3ognsj().b[49][4]++, c == '`')) {\n            cov_5xm3ognsj().b[48][0]++;\n          } else {\n            cov_5xm3ognsj().b[48][1]++;\n            cov_5xm3ognsj().s[114]++;\n\n            if (c == EOF) {\n              cov_5xm3ognsj().b[50][0]++;\n            } else {\n              cov_5xm3ognsj().b[50][1]++;\n              cov_5xm3ognsj().s[115]++;\n              currentAttribute.value += c;\n              cov_5xm3ognsj().s[116]++;\n              return UnquotedAttributeValue;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction afterAttributeName(c) {\n  cov_5xm3ognsj().f[12]++;\n  cov_5xm3ognsj().s[117]++;\n\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cov_5xm3ognsj().b[51][0]++;\n    cov_5xm3ognsj().s[118]++;\n    return afterAttributeName;\n  } else {\n    cov_5xm3ognsj().b[51][1]++;\n    cov_5xm3ognsj().s[119]++;\n\n    if (c == \"/\") {\n      cov_5xm3ognsj().b[52][0]++;\n      cov_5xm3ognsj().s[120]++;\n      return selfClosingStartTag;\n    } else {\n      cov_5xm3ognsj().b[52][1]++;\n      cov_5xm3ognsj().s[121]++;\n\n      if (c == \"=\") {\n        cov_5xm3ognsj().b[53][0]++;\n        cov_5xm3ognsj().s[122]++;\n        return beforeAttributeValue;\n      } else {\n        cov_5xm3ognsj().b[53][1]++;\n        cov_5xm3ognsj().s[123]++;\n\n        if (c == \">\") {\n          cov_5xm3ognsj().b[54][0]++;\n          cov_5xm3ognsj().s[124]++;\n          currentToken[currentAttribute.name] = currentAttribute.value;\n          cov_5xm3ognsj().s[125]++;\n          emit(currentToken);\n          cov_5xm3ognsj().s[126]++;\n          return data;\n        } else {\n          cov_5xm3ognsj().b[54][1]++;\n          cov_5xm3ognsj().s[127]++;\n\n          if (c == EOF) {\n            cov_5xm3ognsj().b[55][0]++;\n          } else {\n            cov_5xm3ognsj().b[55][1]++;\n            cov_5xm3ognsj().s[128]++;\n            currentToken[currentAttribute.name] = currentAttribute.value;\n            cov_5xm3ognsj().s[129]++;\n            currentAttribute = {\n              name: '',\n              value: ''\n            };\n            cov_5xm3ognsj().s[130]++;\n            return attributeName(c);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction selfClosingStartTag(c) {\n  cov_5xm3ognsj().f[13]++;\n  cov_5xm3ognsj().s[131]++;\n\n  if (c == '>') {\n    cov_5xm3ognsj().b[56][0]++;\n    cov_5xm3ognsj().s[132]++;\n    currentToken.isSelfClosing = true;\n    cov_5xm3ognsj().s[133]++;\n    emit(currentToken);\n    cov_5xm3ognsj().s[134]++;\n    return data;\n  } else {\n    cov_5xm3ognsj().b[56][1]++;\n    cov_5xm3ognsj().s[135]++;\n\n    if (c == 'EOF') {\n      cov_5xm3ognsj().b[57][0]++;\n    } else {\n      cov_5xm3ognsj().b[57][1]++;\n    }\n  }\n}\n\nfunction parseHTML(html) {\n  cov_5xm3ognsj().f[14]++;\n  cov_5xm3ognsj().s[136]++;\n  stack = [{\n    type: 'document',\n    children: []\n  }];\n  cov_5xm3ognsj().s[137]++;\n  currentToken = null;\n  cov_5xm3ognsj().s[138]++;\n  currentAttribute = null;\n  cov_5xm3ognsj().s[139]++;\n  currentTextNode = null;\n  var state = (cov_5xm3ognsj().s[140]++, data);\n  cov_5xm3ognsj().s[141]++;\n\n  var _iterator = _createForOfIteratorHelper(html),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      cov_5xm3ognsj().s[142]++;\n      state = state(c);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  cov_5xm3ognsj().s[143]++;\n  state = state(EOF);\n  cov_5xm3ognsj().s[144]++;\n  return stack[0];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1609132062654
  },
  "{\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"filename\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo\",\"plugins\":[{\"key\":\"/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/node_modules/babel-plugin-istanbul/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/moxyninja/GreenTea-Lemon/winter Js课程/Week-17/test-demo/test/",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "// var assert = require('assert');\n// import {add, mul} from \"../add.js\";\n// // var add = require('../add.js').add;\n// // var mul = require('../add.js').mul;\n// describe(\"add function testing\", function(){\n//     it('1 + 2 shoule be 3', function() {\n//         assert.equal(add(1,2), 3);\n//     }); \n//     it('-1 + -6 shoule be -7', function() {\n//         assert.equal(add(-1,-6), -7);\n//     }); \n//     it('-2 * -6 shoule be 12', function() {\n//         assert.equal(mul(-2,-6), 12);\n//     }); \n// })\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tb3h5bmluamEvR3JlZW5UZWEtTGVtb24vd2ludGVyIEpz6K++56iLL1dlZWstMTcvdGVzdC1kZW1vL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG4vLyBpbXBvcnQge2FkZCwgbXVsfSBmcm9tIFwiLi4vYWRkLmpzXCI7XG5cbi8vIC8vIHZhciBhZGQgPSByZXF1aXJlKCcuLi9hZGQuanMnKS5hZGQ7XG4vLyAvLyB2YXIgbXVsID0gcmVxdWlyZSgnLi4vYWRkLmpzJykubXVsO1xuXG4vLyBkZXNjcmliZShcImFkZCBmdW5jdGlvbiB0ZXN0aW5nXCIsIGZ1bmN0aW9uKCl7XG4vLyAgICAgaXQoJzEgKyAyIHNob3VsZSBiZSAzJywgZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGFzc2VydC5lcXVhbChhZGQoMSwyKSwgMyk7XG4vLyAgICAgfSk7IFxuXG4vLyAgICAgaXQoJy0xICsgLTYgc2hvdWxlIGJlIC03JywgZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGFzc2VydC5lcXVhbChhZGQoLTEsLTYpLCAtNyk7XG4vLyAgICAgfSk7IFxuXG4vLyAgICAgaXQoJy0yICogLTYgc2hvdWxlIGJlIDEyJywgZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgIGFzc2VydC5lcXVhbChtdWwoLTIsLTYpLCAxMik7XG4vLyAgICAgfSk7IFxuLy8gfSlcbiJdfQ==",
    "map": null,
    "sourceType": "script",
    "mtime": 1609129486654
  }
}